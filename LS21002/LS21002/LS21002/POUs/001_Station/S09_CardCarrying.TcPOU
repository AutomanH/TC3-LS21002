<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="S09_CardCarrying" Id="{719670c2-0d20-4660-9913-c0a0e65d6f7c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM S09_CardCarrying
VAR
	//工站
	station					: REFERENCE TO FB_Station:=fbstation[9];
	//气缸
	fbHOZCyl	:REFERENCE TO FB_Cylinder:=fbCylinder[33];	//	卡片上料Y轴气缸
	fbVTCCyl_1	:REFERENCE TO FB_Cylinder:=fbCylinder[34];	//	卡片上料Z轴气缸1(上)
	fbVTCCyl_2	:REFERENCE TO FB_Cylinder:=fbCylinder[35];	//	卡片上料Z轴气缸2（下）



	//伺服
	fbROTAxisMove	 :REFERENCE TO FB_Axis:=fbAxis[16];	//	出料线体伺服
	fbZAxisStepMotor1	 :REFERENCE TO FB_Axis:=fbAxis[17];	//	卡片顶升步进
	fbZAxisStepMotor2	 :REFERENCE TO FB_Axis:=fbAxis[18];	//	卡片顶升步进
	


	
	//延时
	arTonDelay :ARRAY[1..20] OF TON;
	//返回值
	UdiReturnValue :ARRAY[1..20] OF UDINT;
	//过程记录
	tsModuleProcess:ARRAY[1..gc_ModuleProNo] OF DUT_Process;
	xClearModuleProcessDone:BOOL;
	bClearProcessStep	:BYTE;
	i: INT;
	
	// //破真空
	xVacuum_BreakValveControl:ARRAY[1..2]OF BOOL;
	// //破真空完成
	xVacuum_BreakCompleted:ARRAY[1..2] OF BOOL;
	// //卡片到位传感器
	xCardSensorReached: ARRAY[1..2] of bool;
	// //卡片存在检测
	xCardCheckSensor: ARRAY[1..2] of bool;
	
	 //报警屏蔽
	_AlarmDisable: BOOL;
	// //真空吸动作
	xVacuum_WorkValveControl: ARRAY[1..2] OF BOOL;
	// //真空吸到达真空
	xVacuumWorkCompleted:ARRAY[1..2] OF BOOL;
	// //皮带线上检测卡片
	xBeltCardCheckSensor:ARRAY[1..2] OF BOOL;
	// //允许机械手放置深孔板
	xPutBoxPermit: BOOL;
	//首次循环
	_FirstCycle: ARRAY[1..10]OF BOOL;
	arxVacuum1_FeedValveWork: Array[1..2] of BOOL;
	arxVacuum1_FeedValveBroken: ARRAY[1..2] of bool;
	arxVacuumControlSensor: ARRAY[1..2] of BOOL;
	arxBrokenVacuumSensor: ARRAY[1..2] of BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Input();
Alarm();
Delay();
FlowAuto();
FlowInit();
General();
ILC();
TipAuto();
TipManual();
Z_Output();]]></ST>
    </Implementation>
    <Action Name="A_Input" Id="{ba23078b-8967-4278-88bc-5ab193e99c06}">
      <Implementation>
        <ST><![CDATA[//气缸
fbHOZCyl.xWP_Sensor	:=	IxS08HOZCylWP	;
fbHOZCyl.xHP_Sensor	:=	IxS08HOZCylHP	;
fbVTCCyl_1.xWP_Sensor	:=	IxS08VTCCyl_1WP	;
fbVTCCyl_1.xHP_Sensor	:=	IxS08VTCCyl_1HP	;
fbVTCCyl_2.xWP_Sensor	:=	IxS08VTCCyl_2WP	;
fbVTCCyl_2.xHP_Sensor	:=	IxS08VTCCyl_2HP	;
//传感器
xBeltCardCheckSensor[1]:=IxBeltEntryCardCheckSensor1;
xBeltCardCheckSensor[2]:=IxBeltEntryCardCheckSensor2;
//真空吸
arxVacuumControlSensorHMI[1]:=IxS08Vacuum1_Output1	;//	卡片搬运工位¶真空发生器1¶输出OUT1
arxBrokenVacuumSensorHMI[1]:=IxS08Vacuum1_Output2	;//	卡片搬运工位¶真空发生器1¶输出OUT2
arxVacuumControlSensorHMI[2]:=IxS08Vacuum2_Output1	;//	卡片搬运工位¶真空发生器2¶输出OUT1
arxBrokenVacuumSensorHMI[2]:=IxS08Vacuum2_Output2	;//	卡片搬运工位¶真空发生器2¶输出OUT2


arxVacuumControlSensor[1]:=IxS08Vacuum1_Output1	;//	卡片搬运工位¶真空发生器1¶输出OUT1
arxBrokenVacuumSensor[1]:=IxS08Vacuum1_Output2	;//	卡片搬运工位¶真空发生器1¶输出OUT2
arxVacuumControlSensor[2]:=IxS08Vacuum2_Output1	;//	卡片搬运工位¶真空发生器2¶输出OUT1
arxBrokenVacuumSensor[2]:=IxS08Vacuum2_Output2	;//	卡片搬运工位¶真空发生器2¶输出OUT2]]></ST>
      </Implementation>
    </Action>
    <Action Name="Alarm" Id="{0a31e6b9-e40b-403d-b500-5fe16c4985f5}">
      <Implementation>
        <ST><![CDATA[//
station.adwAlarm[1].00:=station.xInitTimeout;	  			//S09CardCarrying 初始化超时
(*station.adwAlarm[1].01:=TRUE;	  							//S09CardCarrying 卡片不足，需要补充*)]]></ST>
      </Implementation>
    </Action>
    <Action Name="Delay" Id="{7954a2d3-613f-47d1-88d7-daa2a45cb229}">
      <Implementation>
        <ST><![CDATA[(*arTonDelay[01](IN:= , PT:=T#0.1S , Q=> , ET=> );*)//TipAuto使用
arTonDelay[02](IN:=  , PT:=T#1S , Q=> , ET=> );
arTonDelay[03](IN:=   , PT:=T#1S , Q=> , ET=> );
arTonDelay[04](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[05](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[06](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[07](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[08](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[09](IN:= , PT:=T#0.1S , Q=> , ET=> );
















]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowAuto" Id="{cc7578fa-0edf-4606-8ba0-a269ab7b1135}">
      <Implementation>
        <ST><![CDATA[
//-----------------------------------------初始化是否完成判断----------------------------------------------
IF NOT station.xInitDone 
THEN
 	station.iStepAuto:=0;
 	station.xDone:=FALSE;
	station.xRunningOffProhibit := FALSE ;//运行中信号Off禁止
ELSIF station.xRunning  
THEN
//-----------------------------------------动作步骤--------------------------------------------------------
CASE station.iStepAuto OF	  
	0: //----Home Step，等待启动----
		IF station.xDisabled 
			AND station.xCanRun 
			AND NOT fbMachine[1].xStopped 
			AND NOT station.xSingleRunning 
		THEN
			station.xDone:=TRUE;
		END_IF
		
		IF  station.xSingleRunning 
			OR station.xCanRun 
			//AND NOT station.xDone 
			AND NOT station.xDisabled 
			AND NOT fbMachine[1].xStopped
		THEN
			station.xCycleEnable:=TRUE;
			//station.xDone:= FALSE;  
			station.iStepAuto:= 10;
		END_IF
    10: //复位数据 
			fbZAxisStepMotor1.xJogForwardAuto:=FALSE;
			fbZAxisStepMotor2.xJogForwardAuto:=FALSE;
			IF  station.xSingleRunning THEN
				 FOR i:=1 TO gc_ModuleProNo BY 1 DO
						 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
				 END_FOR
			END_IF
			station.iStepAuto:=20;
	20://检查卡片是否在位
			_AlarmDisable:=FALSE;
			IF  xCardCheckSensor[1] AND
				xCardCheckSensor[2] THEN
				station.iStepAuto:=30;
 			ELSE
				station.iStepAuto:=25;
			END_IF
	25://卡片缺少,伺服回参考点
			 fbZAxisStepMotor1.xMoveAuto[1]:=TRUE;
			 fbZAxisStepMotor2.xMoveAuto[1]:=TRUE;
			IF    fbZAxisStepMotor1.xMoveInPos[1] AND 
				fbZAxisStepMotor2.xMoveInPos[1] THEN
				station.iStepAuto:=26;
			END_IF
	26://卡片确实报警
			IF NOT  _AlarmDisable  THEN
				station.adwAlarm[1].01:=TRUE;//S09CardCarrying 卡片不足，需要补充
				_AlarmDisable:=TRUE;
			END_IF
				station.iStepAuto:=20;
			
	30://步进上升等待到达传感器
		IF 	NOT 	xCardSensorReached[1]  THEN
			fbZAxisStepMotor1.xJogForwardAuto:=TRUE;
		ELSE
			fbZAxisStepMotor1.xJogForwardAuto:=FALSE;
		END_IF
		IF 	NOT 	xCardSensorReached[2]  THEN
			fbZAxisStepMotor2.xJogForwardAuto:=TRUE;
		ELSE
			fbZAxisStepMotor2.xJogForwardAuto:=FALSE;
		END_IF
		IF  xCardSensorReached[1] AND 
			xCardSensorReached[2] THEN
			station.iStepAuto:=35;
		END_IF
	35://判断流程
		IF  tsModuleProcess[1].xProcessCompleted AND 
			tsModuleProcess[2].xProcessCompleted THEN
			station.iStepAuto:=170;
		ELSE
			station.iStepAuto:=40;
		END_IF
	
		station.iStepAuto:=40;
	40://X轴气缸伸出
		fbHOZCyl.xAuto :=TRUE;
		IF fbHOZCyl.xWP_Delay THEN
			station.iStepAuto:=50;
		END_IF
	50://上Z轴下降
		fbVTCCyl_1.xAuto:=TRUE;
		IF fbVTCCyl_1.xWP_Delay THEN
			station.iStepAuto:=60;	
		END_IF
	60://下Z轴下降
		fbVTCCyl_2.xAuto:=TRUE;
		IF fbVTCCyl_2.xWP_Delay THEN
			station.iStepAuto:=70;	
		END_IF

	70:////Restore_after_Estop_Process1 取卡片流程
			IF tsModuleProcess[1].xProcessNotStarted AND NOT  tsModuleProcess[1].xProcessStarted THEN
					station.iStepAuto :=80; (*process not started*)
			ELSIF  tsModuleProcess[1].xProcessStarted AND NOT  tsModuleProcess[1].xProcessCompleted THEN
				 station.iStepAuto := 80;(*process started*)
			ELSIF  tsModuleProcess[1].xProcessCompleted AND NOT tsModuleProcess[1].xQDataCompleted  THEN
					station.iStepAuto := 105 ;(*process completed*)
			ELSIF tsModuleProcess[1].xQDataCompleted THEN
					station.iStepAuto :=105;(*Qdata completed *)
			ELSE
					station.iStepAuto :=80; 
			END_IF	
	80://
				tsModuleProcess[1].xProcessNotStarted:=TRUE;
				station.iStepAuto:= 90;
	90://真空吸动作
				tsModuleProcess[1].xProcessStarted:=TRUE;
				xVacuum_BreakValveControl[1]:=FALSE;
				xVacuum_BreakValveControl[2]:=FALSE;
				xVacuum_WorkValveControl[1]:=TRUE;
				xVacuum_WorkValveControl[2]:=TRUE;
			IF    xVacuumWorkCompleted[1] AND xVacuumWorkCompleted[2] THEN
				station.iStepAuto:= 100;
			END_IF
	100://真空吸动作完成
			tsModuleProcess[1].xProcessCompleted:=TRUE;
			station.iStepAuto:= 110;
	105://上Z轴上升
			fbVTCCyl_1.xAuto:=FALSE;
		IF fbVTCCyl_1.xHP_Delay THEN
			station.iStepAuto:=110;	
		END_IF
	110:////Restore_after_Estop_Process2 抖动流程
			IF tsModuleProcess[2].xProcessNotStarted AND NOT  tsModuleProcess[2].xProcessStarted THEN
					station.iStepAuto :=130; (*process not started*)
			ELSIF  tsModuleProcess[2].xProcessStarted AND NOT  tsModuleProcess[2].xProcessCompleted THEN
				 station.iStepAuto := 130;(*process started*)
			ELSIF  tsModuleProcess[2].xProcessCompleted AND NOT tsModuleProcess[2].xQDataCompleted  THEN
					station.iStepAuto := 160 ;(*process completed*)
			ELSIF tsModuleProcess[2].xQDataCompleted THEN
					station.iStepAuto :=160;(*Qdata completed *)
			ELSE
					station.iStepAuto :=120; 
			END_IF	
	120://
				tsModuleProcess[2].xProcessNotStarted:=TRUE;
				station.iStepAuto:= 130;
				
	130://	开始抖动流程
				tsModuleProcess[2].xProcessStarted:=TRUE;	
				fbVTCCyl_2.xAuto:=FALSE;
				IF fbVTCCyl_2.xHP_Delay THEN
					station.iStepAuto:=140;	
				END_IF	
	140:		
				fbVTCCyl_2.xAuto:=TRUE;
				IF fbVTCCyl_2.xWP_Delay THEN
					station.iStepAuto:=150;	
				END_IF		
	150://抖动完成
			tsModuleProcess[2].xProcessCompleted:=TRUE;		
			station.iStepAuto:=160;		
	160://下Z轴上升
				fbVTCCyl_2.xAuto:=FALSE;
				IF fbVTCCyl_2.xHP_Delay THEN
					station.iStepAuto:=165;	
				END_IF	
				
	165://检查是否允许放卡片
			IF  NOT xBeltCardCheckSensor[1] AND 
				NOT xBeltCardCheckSensor[2] AND 
				NOT  station.xdone 			AND
				(NOT _FirstCycle[1] OR S10_BeltCarrying.station.xDone )THEN 
				station.iStepAuto:=170;
				_FirstCycle[1]:=TRUE;
			END_IF
	170:////Restore_after_Estop_Process3 放料流程
			IF tsModuleProcess[3].xProcessNotStarted AND NOT  tsModuleProcess[3].xProcessStarted THEN
					station.iStepAuto :=190; (*process not started*)
			ELSIF  tsModuleProcess[3].xProcessStarted AND NOT  tsModuleProcess[3].xProcessCompleted THEN
				 station.iStepAuto := 190;(*process started*)
			ELSIF  tsModuleProcess[3].xProcessCompleted AND NOT tsModuleProcess[3].xQDataCompleted  THEN
					station.iStepAuto := 250 ;(*process completed*)
			ELSIF tsModuleProcess[3].xQDataCompleted THEN
					station.iStepAuto :=250;(*Qdata completed *)
			ELSE
					station.iStepAuto :=180; 
			END_IF	
	180:
				tsModuleProcess[3].xProcessNotStarted:=TRUE;
				station.iStepAuto:= 190;
	190://Y轴回原点
				fbHOZCyl.xAuto:=FALSE;
				IF fbHOZCyl.xHP_Delay THEN
					station.iStepAuto:=200;	
				END_IF		
	200://上Z轴气缸下降
				fbVTCCyl_1.xAuto:=TRUE;
				IF fbVTCCyl_1.xWP_Delay THEN
					station.iStepAuto:=210;	
				END_IF							
	220://下Z轴气缸下降
				fbVTCCyl_2.xAuto:=TRUE;
				IF fbVTCCyl_2.xWP_Delay THEN
					station.iStepAuto:=230;	
				END_IF			
	230://破真空
				tsModuleProcess[3].xProcessStarted:=TRUE;
			   xVacuum_BreakValveControl[1]:=TRUE;
				xVacuum_BreakValveControl[2]:=TRUE;
				xVacuum_WorkValveControl[1]:=FALSE;
				xVacuum_WorkValveControl[2]:=FALSE;
			IF   xVacuum_BreakCompleted[1] AND 
				 xVacuum_BreakCompleted[2] THEN
				 xVacuum_BreakValveControl[1]:=FALSE;
				 xVacuum_BreakValveControl[2]:=FALSE;
				 station.iStepAuto:=240;		
			END_IF
	240://流程完成
				tsModuleProcess[3].xProcessCompleted:=TRUE;
				 station.iStepAuto:=250;
	250://上Z轴上升
				fbVTCCyl_1.xAuto:=FALSE;
				IF fbVTCCyl_1.xHP_Delay THEN
					station.iStepAuto:=260;	
				END_IF
	260://下Z轴上升
				fbVTCCyl_2.xAuto:=FALSE;
				IF fbVTCCyl_2.xHP_Delay THEN
					station.iStepAuto:=270;	
				END_IF
	270://检查卡片检测是否在位
		IF  xBeltCardCheckSensor[1] AND 
			xBeltCardCheckSensor[2] THEN
			 station.iStepAuto:=280;
		END_IF
	280://允许放置深孔板
			station.iStepAuto:=290;
	290://清除过程数据
			FOR i:=1 TO gc_ModuleProNo BY 1 DO
				MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			END_FOR
			station.iStepAuto:=999;
			
	999://----Single Run Finish----
			
		station.iStepAuto :=0;
		IF NOT station.xSingleContinuousRun THEN
			station.xSingleRunFlag:=FALSE;
		END_IF
		
		station.xCycleEnable:=FALSE;	
		station.xDone:=TRUE;
	ELSE
		;	
END_CASE
(*******************************步进上载卡片*****************************)


END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowInit" Id="{0430a122-4c62-44ac-9816-5c9a71171d9e}">
      <Implementation>
        <ST><![CDATA[IF NOT station.xIniting THEN
  station.iStepInit:=0;    
ELSE
//--------------------------------------------初始化步序----------------------------------
CASE station.iStepInit OF	
 0://  
  	IF station.xIniting THEN	
  	  station.iStepInit:=10;	
  	END_IF	
10://复位数据
	station.iStepInit:=40;
//20://检查是否需要破真空	
//	IF tsModuleProcess[1].xProcessStarted AND
//		 NOT tsModuleProcess[1].xProcessCompleted THEN
//		 station.iStepInit:=30;
//	ELSE
//		station.iStepInit:=40;	
//	END_IF
//30://破真空
//		xVacuum_WorkValveControl[1]:=FALSE;
//		xVacuum_WorkValveControl[2]:=FALSE;
//		xVacuum_BreakValveControl[1]:=TRUE;
//		xVacuum_BreakValveControl[2]:=TRUE;
//	IF   xVacuum_BreakCompleted[1] AND 
//		 xVacuum_BreakCompleted[2] THEN
//		 xVacuum_BreakValveControl[1]:=FALSE;
//		 xVacuum_BreakValveControl[2]:=FALSE;
//		 station.iStepInit:=40;	
//	END_IF
40://上Z轴上升
	fbVTCCyl_1.xInit:=TRUE;
	IF  fbVTCCyl_1.xHP_Delay THEN
		station.iStepInit:=50;	
	END_IF
50://下轴上升
	fbVTCCyl_2.xInit:=TRUE;
	IF  fbVTCCyl_2.xHP_Delay THEN
		station.iStepInit:=60;	
	END_IF
60://X轴气缸回原
	fbHOZCyl.xInit:=TRUE;
	IF  fbHOZCyl.xHP_Delay THEN
		station.iStepInit:=999;	
	END_IF		
//70://卡片步进上电
//	fbZAxisStepMotor1.xPowerInit:=TRUE;
//	fbZAxisStepMotor2.xPowerInit:=TRUE;
//	IF		fbZAxisStepMotor1.xPowerOn AND
//		    fbZAxisStepMotor2.xPowerOn THEN
//			station.iStepInit:=80;	
//	END_IF
//80://回原点
//	fbZAxisStepMotor1.xReferenceAuto:=TRUE;
//	fbZAxisStepMotor2.xReferenceAuto:=TRUE;
//	station.iStepinit:=90;
//90:
//   IF  fbAxisHome[17].home_done  AND 
//		fbAxisHome[18].home_done THEN 
//		 fbZAxisStepMotor1.xReferenceAuto:=FALSE;
//		fbZAxisStepMotor2.xReferenceAuto:=FALSE;
//		 station.iStepInit:=100;  
//	END_IF
//100://去待机位置
//	 fbZAxisStepMotor1.xMoveAuto[1]:=TRUE;
//	  fbZAxisStepMotor2.xMoveAuto[1]:=TRUE;
//	IF    fbZAxisStepMotor1.xMoveInPos[1] AND 
//		fbZAxisStepMotor2.xMoveInPos[1] THEN
//		 station.iStepInit:=999;  
//	END_IF
999://初始化完成	
	station.iStepInit:=0;
	station.xInitDone:=TRUE;  
END_CASE
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="General" Id="{45030b2b-c41a-4da3-bcf2-db15989ba868}">
      <Implementation>
        <ST><![CDATA[
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ILC" Id="{c76333f4-12c7-4311-b266-a45dd1caf128}">
      <Implementation>
        <ST><![CDATA[
//---------------------------------------------------工站可执行-------------------------------------------------------
station.xCanRun :=TRUE ;

//---------------------------------------------------气缸动作条件-------------------------------------------

fbHOZCyl.xOffILC	:=	TRUE;//fbVTCCyl_1.xHP_Delay AND  fbVTCCyl_1.xHP_Delay 	;
fbHOZCyl.xOnILC		:=	TRUE;//fbVTCCyl_1.xHP_Delay AND  fbVTCCyl_1.xHP_Delay	;
fbVTCCyl_1.xOffILC	:=	TRUE;//fbHOZCyl.xHP_Delay OR fbHOZCyl.xWP_Delay	;
fbVTCCyl_1.xOnILC	:=	TRUE;//fbHOZCyl.xHP_Delay OR fbHOZCyl.xWP_Delay	;
fbVTCCyl_2.xOffILC	:=	TRUE	;
fbVTCCyl_2.xOnILC	:=	TRUE; //fbHOZCyl.xHP_Delay OR fbHOZCyl.xWP_Delay	;


//---------------------------------------------------伺服动作条件-------------------------------------------


fbZAxisStepMotor1.xRunILC := 
fbZAxisStepMotor1.xMoveILC[1] :=
fbZAxisStepMotor1.xMoveILC[2] :=
fbZAxisStepMotor1.xMoveILC[3] :=
fbZAxisStepMotor1.xMoveILC[4] :=
fbZAxisStepMotor1.xMoveILC[5] := TRUE ;


fbZAxisStepMotor2.xRunILC := 
fbZAxisStepMotor2.xMoveILC[1] :=
fbZAxisStepMotor2.xMoveILC[2] :=
fbZAxisStepMotor2.xMoveILC[3] :=
fbZAxisStepMotor2.xMoveILC[4] :=
fbZAxisStepMotor2.xMoveILC[5] := TRUE ;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipAuto" Id="{95719469-7bab-4353-9341-e6e5d4586814}">
      <Implementation>
        <ST><![CDATA[
//------------------------------------------------AutoTip Cylinder--------------------------------
station.adwAutoTip[1].00	:=	fbHOZCyl.xAutoTip	;
station.adwAutoTip[1].01	:=	fbVTCCyl_1.xAutoTip	;
station.adwAutoTip[1].02	:=	fbVTCCyl_2.xAutoTip	;	
//------------------------------------------------AutoTip Servo--------------------------------
//**************************************
//FOR i:= 1 TO 5 BY 1 DO 
//	IF fbROTAxisMove.xMoveAuto[i] THEN
//		fbROTAxisMove.iPosNumber := i ;
//	END_IF
//	IF fbZAxisStepMotor1.xMoveAuto[i] THEN
//		fbZAxisStepMotor1.iPosNumber := i ;
//	END_IF
//	IF fbZAxisStepMotor2.xMoveAuto[i] THEN
//		fbZAxisStepMotor2.iPosNumber := i ;
//	END_IF
//	
//END_FOR
//
//
//IF  fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  THEN
//	  arTonDelay[01](IN:=True , PT:=T#1S , Q=> , ET=> );
//else
//	  arTonDelay[01](IN:=false);
//END_IF
//IF arTonDelay[1].Q  THEN 
//IF	fbROTAxisMove.iPosNumber=1 	AND NOT fbROTAxisMove.xMoveInPos[1] 	THEN 	station.adwAutoTip[1].10:=TRUE	;	END_IF//轴伺服自动时位置不在位置1
//if	fbROTAxisMove.iPosNumber=2	AND NOT fbROTAxisMove.xMoveInPos[2]	THEN 	station.adwAutoTip[1].11:=TRUE	;	END_IF//轴伺服自动时位置不在位置2
//if	fbROTAxisMove.iPosNumber=3	AND NOT fbROTAxisMove.xMoveInPos[3]	THEN 	station.adwAutoTip[1].12:=TRUE	;	END_IF//轴伺服自动时位置不在位置3
//if	fbROTAxisMove.iPosNumber=4	AND NOT fbROTAxisMove.xMoveInPos[4]	THEN 	station.adwAutoTip[1].13:=TRUE	;	END_IF//轴伺服自动时位置不在位置4
//if	fbROTAxisMove.iPosNumber=5	AND NOT fbROTAxisMove.xMoveInPos[5]	THEN 	station.adwAutoTip[1].14:=TRUE	;	END_IF//轴伺服自动时位置不在位置5
//if	fbZAxisStepMotor1.iPosNumber=1 	AND NOT fbZAxisStepMotor1.xMoveInPos[1] 	THEN 	station.adwAutoTip[1].15:=TRUE	;	END_IF//轴伺服自动时位置不在位置1
//if	fbZAxisStepMotor1.iPosNumber=2	AND NOT fbZAxisStepMotor1.xMoveInPos[2]	THEN 	station.adwAutoTip[1].16:=TRUE	;	END_IF//轴伺服自动时位置不在位置2
//if	fbZAxisStepMotor1.iPosNumber=3	AND NOT fbZAxisStepMotor1.xMoveInPos[3]	THEN 	station.adwAutoTip[1].17:=TRUE	;	END_IF//轴伺服自动时位置不在位置3
//if	fbZAxisStepMotor1.iPosNumber=4	AND NOT fbZAxisStepMotor1.xMoveInPos[4]	THEN 	station.adwAutoTip[1].18:=TRUE	;	END_IF//轴伺服自动时位置不在位置4
//if	fbZAxisStepMotor1.iPosNumber=5	AND NOT fbZAxisStepMotor1.xMoveInPos[5]	THEN 	station.adwAutoTip[1].19:=TRUE	;	END_IF//轴伺服自动时位置不在位置5
//if	fbZAxisStepMotor2.iPosNumber=1 	AND NOT fbZAxisStepMotor2.xMoveInPos[1] 	THEN 	station.adwAutoTip[1].20:=TRUE	;	END_IF//轴伺服自动时位置不在位置1
//if	fbZAxisStepMotor2.iPosNumber=2	AND NOT fbZAxisStepMotor2.xMoveInPos[2]	THEN 	station.adwAutoTip[1].21:=TRUE	;	END_IF//轴伺服自动时位置不在位置2
//if	fbZAxisStepMotor2.iPosNumber=3	AND NOT fbZAxisStepMotor2.xMoveInPos[3]	THEN 	station.adwAutoTip[1].22:=TRUE	;	END_IF//轴伺服自动时位置不在位置3
//if	fbZAxisStepMotor2.iPosNumber=4	AND NOT fbZAxisStepMotor2.xMoveInPos[4]	THEN 	station.adwAutoTip[1].23:=TRUE	;	END_IF//轴伺服自动时位置不在位置4
//if	fbZAxisStepMotor2.iPosNumber=5	AND NOT fbZAxisStepMotor2.xMoveInPos[5]	THEN 	station.adwAutoTip[1].24:=TRUE	;	END_IF//轴伺服自动时位置不在位置5
//
//	
//		
//END_IF
//]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipManual" Id="{bfbca7f7-f29c-4c3f-9863-da81fea994f1}">
      <Implementation>
        <ST><![CDATA[//--------------------------------------------ManualTip------------------------------------------------------

//-------------------------------------------气缸提示---------------------------------------------------------




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Z_Output" Id="{e5141706-d276-488d-8e03-6fb5bac7b25e}">
      <Implementation>
        <ST><![CDATA[(**************************气缸输出********************************)
QxS08HOZCylWP	:=	fbHOZCyl.xWP_Valve	;
QxS08HOZCylHP	:=	fbHOZCyl.xHP_Valve	;
QxS08VTCCyl_1WP	:=	fbVTCCyl_1.xWP_Valve	;
QxS08VTCCyl_1HP	:=	fbVTCCyl_1.xHP_Valve	;
QxS08VTCCyl_2WP	:=	fbVTCCyl_2.xWP_Valve	;
QxS08VTCCyl_2HP	:=	fbVTCCyl_2.xHP_Valve	;

//真空吸
IF (fbMachine[1].xAutoMode AND  arxVacuum1_FeedValveWork[1]) OR (fbMachine[1].xManualMode AND 	arxVacuumControlHMI[1]) THEN 
	QxVacuum1_FeedValveControl	:= TRUE ;//	卡片搬运工位¶真空发生器1¶供给阀控制
	QxVacuum1_BreakValveControl:=FALSE;//	卡片搬运工位¶真空发生器1¶破坏阀控制
(*ELSIF arxVacuumControlSensor[1] THEN
 	QxVacuum1_FeedValveControl	:= FALSE ;//	卡片搬运工位¶真空发生器1¶供给阀控制
*)	
ELSIF  (fbMachine[1].xAutoMode AND  arxVacuum1_FeedValveBroken[1]) OR	(fbMachine[1].xManualMode AND  arxBrokenVacuumHMI[1]) THEN 
	QxVacuum1_FeedValveControl	:= FALSE ;//	卡片搬运工位¶真空发生器1¶供给阀控制
	QxVacuum1_BreakValveControl:=TRUE;//	卡片搬运工位¶真空发生器1¶破坏阀控制
(*ELSIF arxBrokenVacuumSensor[1] THEN
 	QxVacuum1_BreakValveControl	:= FALSE ;//	卡片搬运工位¶真空发生器1¶破坏阀控制
	*)
END_IF 

//真空吸
IF  (fbMachine[1].xAutoMode AND  arxVacuum1_FeedValveWork[2]) OR (fbMachine[1].xManualMode AND 	arxVacuumControlHMI[2]) THEN 
	QxVacuum2_FeedValveControl	:= TRUE ;//	卡片搬运工位¶真空发生器1¶供给阀控制
	QxVacuum2_BreakValveControl:=FALSE;//	卡片搬运工位¶真空发生器1¶破坏阀控制
(*ELSIF  arxVacuumControlSensor[2] THEN
 	QxVacuum2_FeedValveControl	:= FALSE ;//	卡片搬运工位¶真空发生器1¶供给阀控制
*)
ELSIF  (fbMachine[1].xAutoMode AND  arxVacuum1_FeedValveBroken[2]) OR	(fbMachine[1].xManualMode AND  arxBrokenVacuumHMI[2]) THEN 
	QxVacuum2_FeedValveControl	:= FALSE ;//	卡片搬运工位¶真空发生器1¶供给阀控制
	QxVacuum2_BreakValveControl:=TRUE;//	卡片搬运工位¶真空发生器1¶破坏阀控制
(*ELSIF  arxBrokenVacuumSensor[2] THEN
 	QxVacuum2_BreakValveControl	:= FALSE ;//	卡片搬运工位¶真空发生器1¶破坏阀控制
*)
END_IF ]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="S09_CardCarrying">
      <LineId Id="57" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.A_Input">
      <LineId Id="28" Count="0" />
      <LineId Id="72" Count="5" />
      <LineId Id="55" Count="0" />
      <LineId Id="80" Count="2" />
      <LineId Id="89" Count="2" />
      <LineId Id="84" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.Alarm">
      <LineId Id="176" Count="1" />
      <LineId Id="266" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.Delay">
      <LineId Id="64" Count="10" />
      <LineId Id="44" Count="13" />
      <LineId Id="40" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.FlowAuto">
      <LineId Id="1155" Count="5" />
      <LineId Id="1253" Count="0" />
      <LineId Id="1161" Count="4" />
      <LineId Id="1167" Count="17" />
      <LineId Id="1256" Count="0" />
      <LineId Id="1481" Count="1" />
      <LineId Id="1785" Count="3" />
      <LineId Id="1784" Count="0" />
      <LineId Id="1259" Count="0" />
      <LineId Id="1506" Count="0" />
      <LineId Id="1541" Count="0" />
      <LineId Id="1507" Count="0" />
      <LineId Id="1527" Count="1" />
      <LineId Id="1526" Count="0" />
      <LineId Id="1531" Count="0" />
      <LineId Id="1509" Count="0" />
      <LineId Id="1532" Count="0" />
      <LineId Id="1534" Count="4" />
      <LineId Id="1533" Count="0" />
      <LineId Id="1539" Count="1" />
      <LineId Id="1544" Count="0" />
      <LineId Id="1542" Count="1" />
      <LineId Id="1546" Count="0" />
      <LineId Id="1456" Count="0" />
      <LineId Id="1431" Count="0" />
      <LineId Id="1460" Count="0" />
      <LineId Id="1464" Count="0" />
      <LineId Id="1473" Count="1" />
      <LineId Id="1462" Count="0" />
      <LineId Id="1465" Count="1" />
      <LineId Id="1475" Count="1" />
      <LineId Id="1467" Count="0" />
      <LineId Id="1483" Count="0" />
      <LineId Id="1486" Count="0" />
      <LineId Id="1484" Count="1" />
      <LineId Id="1707" Count="0" />
      <LineId Id="1709" Count="0" />
      <LineId Id="1715" Count="0" />
      <LineId Id="1717" Count="0" />
      <LineId Id="1714" Count="0" />
      <LineId Id="1716" Count="0" />
      <LineId Id="1712" Count="0" />
      <LineId Id="1710" Count="0" />
      <LineId Id="1708" Count="0" />
      <LineId Id="1551" Count="0" />
      <LineId Id="1555" Count="0" />
      <LineId Id="1552" Count="0" />
      <LineId Id="1557" Count="0" />
      <LineId Id="1554" Count="0" />
      <LineId Id="1488" Count="0" />
      <LineId Id="1566" Count="3" />
      <LineId Id="1558" Count="0" />
      <LineId Id="1572" Count="2" />
      <LineId Id="1571" Count="0" />
      <LineId Id="1565" Count="0" />
      <LineId Id="1492" Count="13" />
      <LineId Id="1490" Count="0" />
      <LineId Id="1547" Count="0" />
      <LineId Id="1575" Count="0" />
      <LineId Id="1584" Count="1" />
      <LineId Id="1576" Count="1" />
      <LineId Id="1549" Count="0" />
      <LineId Id="1580" Count="0" />
      <LineId Id="1579" Count="0" />
      <LineId Id="1491" Count="0" />
      <LineId Id="1586" Count="0" />
      <LineId Id="1459" Count="0" />
      <LineId Id="1609" Count="0" />
      <LineId Id="1612" Count="2" />
      <LineId Id="1611" Count="0" />
      <LineId Id="1591" Count="10" />
      <LineId Id="1590" Count="0" />
      <LineId Id="1603" Count="1" />
      <LineId Id="1602" Count="0" />
      <LineId Id="1605" Count="1" />
      <LineId Id="1615" Count="0" />
      <LineId Id="1617" Count="2" />
      <LineId Id="1616" Count="0" />
      <LineId Id="1607" Count="0" />
      <LineId Id="1621" Count="2" />
      <LineId Id="1620" Count="0" />
      <LineId Id="1625" Count="1" />
      <LineId Id="1608" Count="0" />
      <LineId Id="1627" Count="3" />
      <LineId Id="1588" Count="0" />
      <LineId Id="1729" Count="0" />
      <LineId Id="1727" Count="1" />
      <LineId Id="1733" Count="0" />
      <LineId Id="1783" Count="0" />
      <LineId Id="1739" Count="0" />
      <LineId Id="1737" Count="0" />
      <LineId Id="1772" Count="0" />
      <LineId Id="1735" Count="0" />
      <LineId Id="1634" Count="10" />
      <LineId Id="1633" Count="0" />
      <LineId Id="1646" Count="0" />
      <LineId Id="1645" Count="0" />
      <LineId Id="1647" Count="1" />
      <LineId Id="1660" Count="2" />
      <LineId Id="1659" Count="0" />
      <LineId Id="1649" Count="0" />
      <LineId Id="1664" Count="2" />
      <LineId Id="1663" Count="0" />
      <LineId Id="1651" Count="0" />
      <LineId Id="1668" Count="2" />
      <LineId Id="1667" Count="0" />
      <LineId Id="1652" Count="0" />
      <LineId Id="1675" Count="0" />
      <LineId Id="1685" Count="3" />
      <LineId Id="1691" Count="4" />
      <LineId Id="1673" Count="0" />
      <LineId Id="1753" Count="1" />
      <LineId Id="1752" Count="0" />
      <LineId Id="1741" Count="0" />
      <LineId Id="1743" Count="2" />
      <LineId Id="1742" Count="0" />
      <LineId Id="1747" Count="0" />
      <LineId Id="1749" Count="2" />
      <LineId Id="1748" Count="0" />
      <LineId Id="1655" Count="0" />
      <LineId Id="1702" Count="0" />
      <LineId Id="1705" Count="1" />
      <LineId Id="1704" Count="0" />
      <LineId Id="1755" Count="0" />
      <LineId Id="1759" Count="0" />
      <LineId Id="1777" Count="0" />
      <LineId Id="1779" Count="1" />
      <LineId Id="1778" Count="0" />
      <LineId Id="1782" Count="0" />
      <LineId Id="1781" Count="0" />
      <LineId Id="1212" Count="2" />
      <LineId Id="1453" Count="2" />
      <LineId Id="1215" Count="9" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.FlowInit">
      <LineId Id="437" Count="9" />
      <LineId Id="467" Count="0" />
      <LineId Id="469" Count="1" />
      <LineId Id="473" Count="1" />
      <LineId Id="472" Count="0" />
      <LineId Id="477" Count="2" />
      <LineId Id="548" Count="1" />
      <LineId Id="482" Count="0" />
      <LineId Id="487" Count="0" />
      <LineId Id="483" Count="0" />
      <LineId Id="488" Count="0" />
      <LineId Id="550" Count="1" />
      <LineId Id="484" Count="1" />
      <LineId Id="489" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="492" Count="0" />
      <LineId Id="497" Count="0" />
      <LineId Id="494" Count="0" />
      <LineId Id="498" Count="4" />
      <LineId Id="459" Count="0" />
      <LineId Id="504" Count="2" />
      <LineId Id="503" Count="0" />
      <LineId Id="510" Count="1" />
      <LineId Id="507" Count="0" />
      <LineId Id="512" Count="1" />
      <LineId Id="516" Count="0" />
      <LineId Id="514" Count="0" />
      <LineId Id="521" Count="0" />
      <LineId Id="523" Count="1" />
      <LineId Id="522" Count="0" />
      <LineId Id="528" Count="0" />
      <LineId Id="533" Count="0" />
      <LineId Id="536" Count="0" />
      <LineId Id="534" Count="0" />
      <LineId Id="537" Count="0" />
      <LineId Id="535" Count="0" />
      <LineId Id="529" Count="0" />
      <LineId Id="539" Count="0" />
      <LineId Id="544" Count="1" />
      <LineId Id="541" Count="0" />
      <LineId Id="546" Count="1" />
      <LineId Id="543" Count="0" />
      <LineId Id="462" Count="4" />
      <LineId Id="436" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.General">
      <LineId Id="361" Count="0" />
      <LineId Id="381" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.ILC">
      <LineId Id="234" Count="5" />
      <LineId Id="308" Count="5" />
      <LineId Id="302" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="260" Count="5" />
      <LineId Id="254" Count="0" />
      <LineId Id="267" Count="1" />
      <LineId Id="324" Count="5" />
      <LineId Id="274" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.TipAuto">
      <LineId Id="118" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="205" Count="2" />
      <LineId Id="148" Count="8" />
      <LineId Id="185" Count="1" />
      <LineId Id="184" Count="0" />
      <LineId Id="187" Count="0" />
      <LineId Id="157" Count="8" />
      <LineId Id="208" Count="14" />
      <LineId Id="196" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="183" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.TipManual">
      <LineId Id="137" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="262" Count="1" />
      <LineId Id="246" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="S09_CardCarrying.Z_Output">
      <LineId Id="2" Count="0" />
      <LineId Id="27" Count="5" />
      <LineId Id="82" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="96" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="52" Count="3" />
      <LineId Id="71" Count="1" />
      <LineId Id="70" Count="0" />
      <LineId Id="56" Count="2" />
      <LineId Id="87" Count="1" />
      <LineId Id="86" Count="0" />
      <LineId Id="50" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
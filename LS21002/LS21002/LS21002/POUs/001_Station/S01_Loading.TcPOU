<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="S01_Loading" Id="{09eabbef-079c-4b02-9a4f-f15f03dbd456}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM S01_Loading
VAR
	//工站
	station					: REFERENCE TO FB_Station:=fbstation[1];
	//气缸
		fbVTCPressCyl_1	:REFERENCE TO FB_Cylinder:=fbCylinder[1];	//	链板线-下压气缸1
		fbVTCPressCyl_2	:REFERENCE TO FB_Cylinder:=fbCylinder[2];	//	链板线-下压气缸2
		fbVTCPressCyl_3	:REFERENCE TO FB_Cylinder:=fbCylinder[3];	//	链板线-下压气缸3
		fbVTCPressCyl_4	:REFERENCE TO FB_Cylinder:=fbCylinder[4];	//	链板线-下压气缸4
		fbVTCCyl_1	:REFERENCE TO FB_Cylinder:=fbCylinder[5];	//	移栽机构-Z轴气缸1
		fbVTCCyl_2	:REFERENCE TO FB_Cylinder:=fbCylinder[6];	//	移栽机构-Z轴气缸2
//链板线
		fbFlowLine:FB_FlowLine;	
		
	//伺服
		fbXAxisMove	 :REFERENCE TO FB_Axis:=fbAxis[1];	//	移栽上料X轴伺服
		fbYAxisMove	 :REFERENCE TO FB_Axis:=fbAxis[2];	//	移栽上料Y轴伺服
	//电动夹爪
		fbClamp_1:	 REFERENCE TO FB_ERG_20_Modbus:=fbERG_20_Modbus[1];
		fbClamp_2:	 REFERENCE TO FB_ERG_20_Modbus:=fbERG_20_Modbus[2];
		
		ERG_20C_1	:		 REFERENCE TO FB_ERG_20C:=fbERG[1];
		ERG_20C_2	:		 REFERENCE TO FB_ERG_20C:=fbERG[2];
		
	//相机
		 Camera   : 	 REFERENCE TO FB_Camera:=fbCamera[1]; 
	//延时
	arTonDelay :ARRAY[1..20] OF TON;
	//返回值
	UdiReturnValue :ARRAY[1..20] OF UDINT;
	//本地过程数据
	arProcessDataStation : ARRAY [1..2] OF DUT_MainlineFixture;
	//过程标志位
	xFlowLineReady:BOOL;//连班线准备流程完成信号
	xTakeBoxPremit:BOOL;//允许链板线执行下一循环
	//过程记录
	tsModuleProcess:ARRAY[1..gc_ModuleProNo] OF DUT_Process;
	xClearModuleProcessDone:BOOL;
	bClearProcessStep	:BYTE;
	
	
	i: INT;
	xFlowLineStart: BOOL;//链板线启动信号
	bFlowLineStep: BYTE;
	xFlowLineReadyCmd: BOOL;//连班线准备指令
	arFlowLineReachedSensor: ARRAY[1..4] OF BOOL;//链板线到位传感器
	_FirstFlag: ARRAY[1..10] OF BOOL;
	MachineInitR_TRIG:R_TRIG;

	// 程序循环
	bCounter: BYTE;
	// 上料工位到位传感器
	xLoadingReachedSensor: ARRAY[1..2] of bool;
	// 报警标志位
	_AlarmDisable: BOOL;
	// X轴放料循环
	bXCounter: BYTE;
	//夹爪有产品信号
	arClampHavePart :ARRAY[1..2] OF BOOL;
	iClearProcessStep: INT;
	// //首次循环
	_FirstCycle: ARRAY[1..10] of bool;
	//下压气缸原点传感器
	arVTCPressCylHPSensor:ARRAY[1..4] OF BOOL;
	//Y轴去放料位还是放料补偿位
	ariPosNum:ARRAY[1..2] OF INT;
	//下压气缸动点传感器
	arVTCPressCylWPSensor:ARRAY[1..4] OF BOOL;
	test: ARRAY[1..4]OF BOOL;
	// 步骤
	itestStep: INT;
	// 按钮
	xtestbutton: BOOL;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Input();
Alarm();
Delay();
FlowAuto();
FlowInit();
//FlowAuto_1();
//FlowInit_1();
FlowLine();
General();
ILC();
TipAuto();
TipManual();
Z_Output();

]]></ST>
    </Implementation>
    <Action Name="A_Input" Id="{d02a1e8b-99f7-4a59-a9d7-b46699eb8bde}">
      <Implementation>
        <ST><![CDATA[//气缸
fbVTCPressCyl_1.xWP_Sensor	:=
arVTCPressCylWPSensor[1]		:=	IxS01VTCPressCyl_1WP 	;
fbVTCPressCyl_1.xHP_Sensor	:=
arVTCPressCylHPSensor[1]		:=	IxS01VTCPressCyl_1HP	;
fbVTCPressCyl_2.xWP_Sensor	:=	
arVTCPressCylWPSensor[2]		:=	IxS01VTCPressCyl_2WP	;
fbVTCPressCyl_2.xHP_Sensor	:=
arVTCPressCylHPSensor[2]		:=	IxS01VTCPressCyl_2HP	;
fbVTCPressCyl_3.xWP_Sensor	:=	
arVTCPressCylWPSensor[3]		:=IxS01VTCPressCyl_3WP	;
fbVTCPressCyl_3.xHP_Sensor	:=
arVTCPressCylHPSensor[3]		:=	IxS01VTCPressCyl_3HP	;
fbVTCPressCyl_4.xWP_Sensor	:=	
arVTCPressCylWPSensor[4]		:=IxS01VTCPressCyl_4WP	;
fbVTCPressCyl_4.xHP_Sensor	:=
arVTCPressCylHPSensor[4]		:=IxS01VTCPressCyl_4HP	;
fbVTCCyl_1.xWP_Sensor	:=	IxS01VTCCyl_1WP	;
fbVTCCyl_1.xHP_Sensor	:=	IxS01VTCCyl_1HP	;
fbVTCCyl_2.xWP_Sensor	:=	IxS01VTCCyl_2WP	;
fbVTCCyl_2.xHP_Sensor	:=	IxS01VTCCyl_2HP	;

//链板线传感器
arFlowLineReachedSensor[1]:=IxS01PositionSensor2;
arFlowLineReachedSensor[2]:=IxS01PositionSensor1;
arFlowLineReachedSensor[3]:=IxS01PositionSensor4;
arFlowLineReachedSensor[4]:=IxS01PositionSensor3;
//上料工位传感器
xLoadingReachedSensor[1]:=IxS01Sensor2Reached;
xLoadingReachedSensor[2]:=IxS01Sensor1Reached;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="Alarm" Id="{f91e2fff-b518-4309-9d5e-d947434883cd}">
      <Implementation>
        <ST><![CDATA[//
station.adwAlarm[1].00:=station.xInitTimeout;	  //S01 初始化超时
//station.adwAlarm[1].01:= //S01链板线上料位置1相机检测到深孔板放反，请检查
//station.adwAlarm[1].02:=//S01链板线上料位置2相机检测到深放反，请检查
//station.adwAlarm[1].03:=//S01链板线上料位置3相机检测到深孔板放反，请检查
//station.adwAlarm[1].04:=//S01链板线上料位置4相机检测到深孔板放反，请检查
station.adwAlarm[1].05	:=	fbClamp_1.eErrorID>24	;//	S01电动夹爪1报错，请检查
station.adwAlarm[1].06	:=	fbClamp_2.eErrorID>24	;//	S01电动夹爪2报错，请检查
//station.adwAlarm[1].07	:=	fbVTCPressCyl_1.xHP_Off 	;//	S01链板线-下压气缸1原点未到位
//station.adwAlarm[1].08	:=	fbVTCPressCyl_1.xWP_Off 	;//	S01链板线-下压气缸1动点未到位
//station.adwAlarm[1].09	:=	fbVTCPressCyl_2.xHP_Off	;//	S01链板线-下压气缸2原点未到位
//station.adwAlarm[1].10	:=	fbVTCPressCyl_2.xWP_Off	;//	S01链板线-下压气缸2动点未到位
//station.adwAlarm[1].11	:=	fbVTCPressCyl_3.xHP_Off	;//	S01链板线-下压气缸3原点未到位
//station.adwAlarm[1].12	:=	fbVTCPressCyl_3.xWP_Off	;//	S01链板线-下压气缸3动点未到位
//station.adwAlarm[1].13	:=	fbVTCPressCyl_4.xHP_Off	;//	S01链板线-下压气缸4原点未到位
//station.adwAlarm[1].14	:=	fbVTCPressCyl_4.xWP_Off	;//	S01链板线-下压气缸4动点未到位
station.adwAlarm[1].15	:=	fbVTCCyl_1.xHP_Off 	;//	S01移栽机构-Z轴气缸1原点未到位
station.adwAlarm[1].16	:=	fbVTCCyl_1.xWP_Off	;//	S01移栽机构-Z轴气缸1动点未到位
station.adwAlarm[1].17	:=	fbVTCCyl_2.xHP_Off 	;//	S01移栽机构-Z轴气缸2原点未到位
station.adwAlarm[1].18	:=	fbVTCCyl_2.xWP_Off	;//	S01移栽机构-Z轴气缸2动点未到位
station.adwAlarm[1].19	:=	fbXAxisMove.xError	;//	S01移栽上料X轴伺服报错
station.adwAlarm[1].20	:=	fbXAxisMove.xNotPowerOn	;//	S01移栽上料X轴伺服未使能
station.adwAlarm[1].21	:=	fbXAxisMove.xMoveTimeout	;//	S01移栽上料X轴伺服移动超时
station.adwAlarm[1].22	:=	fbYAxisMove.xError	;//	S01移栽上料Y轴伺服报错
station.adwAlarm[1].23	:=	fbYAxisMove.xNotPowerOn	;//	S01移栽上料Y轴伺服未使能
station.adwAlarm[1].24	:=	fbYAxisMove.xMoveTimeout	;//	S01移栽上料Y轴伺服移动超时
//station.adwAlarm[1].25	:=	fbFlowLine.xQError	;			//	S01移栽上料链板线报错

//station.adwAlarm[1].26:= //S01链板线上料位置1相机检测到深孔板放反，请检查
//station.adwAlarm[1].27:=//S01链板线上料位置2相机检测到深放反，请检查
//station.adwAlarm[1].28:=//S01链板线上料位置3相机检测到深孔板放反，请检查
//station.adwAlarm[1].29:=//S01链板线上料位置4相机检测到深孔板放反，请检查
//station.adwAlarm[1].30	:=	TRUE;//	S01上料工位-相机拍照超时，请检查
//station.adwAlarm[1].31	:=	TRUE;//	S01上料工位-链板线运行超时,请复位

]]></ST>
      </Implementation>
    </Action>
    <Action Name="Delay" Id="{084f8558-cebd-455d-abdf-a99ad2ca1ee4}">
      <Implementation>
        <ST><![CDATA[arTonDelay[01](IN:= , PT:=T#0.1S , Q=> , ET=> );
//arTonDelay[02](IN:=  , PT:=T#1S , Q=> , ET=> );*)//链板线程序使用
//arTonDelay[03](IN:=   , PT:=T#1S , Q=> , ET=> );//已使用
arTonDelay[04](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[05](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[06](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[07](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[08](IN:= NOT fbXAxisMove.xbusy , PT:=T#0.1S , Q=> , ET=> );//TipAuto使用
arTonDelay[09](IN:= NOT fbYAxisMove.xbusy, PT:=T#0.1S , Q=> , ET=> );//TipAuto使用
















]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowAuto" Id="{7cb40db5-d774-47af-9318-f903e22a0dd4}">
      <Implementation>
        <ST><![CDATA[
//-----------------------------------------初始化是否完成判断----------------------------------------------
IF NOT station.xInitDone THEN
 	station.iStepAuto:=0;
 	station.xDone:=FALSE;
ELSIF station.xRunning  OR 
//(tsModuleProcess[1].xProcessStarted AND  NOT tsModuleProcess[1].xProcessCompleted)  OR//相机拍照流程
(	tsModuleProcess[bCounter+1].xProcessStarted AND  NOT tsModuleProcess[bCounter+1].xProcessCompleted)  OR //电动夹爪夹取流程
(tsModuleProcess[bCounter+3].xProcessStarted AND  NOT tsModuleProcess[bCounter+3].xProcessCompleted)  OR //孔板翻转流程流程
(	tsModuleProcess[bXCounter+5].xProcessStarted AND NOT 	tsModuleProcess[bXCounter+5].xProcessCompleted) //电动夹爪松开流程
THEN
//-----------------------------------------动作步骤--------------------------------------------------------
CASE station.iStepAuto OF	  
	0: //----Home Step，等待启动----
		IF station.xDisabled 
			AND station.xCanRun 
			AND NOT fbMachine[1].xStopped 
			AND NOT station.xSingleRunning 
		THEN
			station.xDone:=TRUE;
		END_IF
		IF  station.xSingleRunning 
			OR station.xCanRun 
			//AND NOT station.xDone 
			AND NOT station.xDisabled 
			AND NOT fbMachine[1].xStopped
		THEN
			station.xCycleEnable:=TRUE;
			//station.xDone:= FALSE;  
			station.iStepAuto:= 10;
		END_IF
	10://复位
			Camera.xlInit:=TRUE;
			FOR  i:=1 TO  4 BY  1 DO
		 		sCamera_To_Plc.iS01Result[i]:=0;
			END_FOR
			MEMSET(ADR(arProcessDataStation[1]),0,SIZEOF(arProcessDataStation[1]));
			MEMSET(ADR(arProcessDataStation[2]),0,SIZEOF(arProcessDataStation[2]));
		
				 FOR i:=1 TO gc_ModuleProNo BY 1 DO
						 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
				 END_FOR
			station.iStepAuto:= 20;
  	20://区分上料还是请料
			 IF  station.xEmptying  THEN
					station.iStepAuto:= 1000;
			 ELSIF station.xEmptyDone THEN
					  station.xDone:=TRUE;
						station.iStepAuto:= 0;
			 ELSE
					station.iStepAuto:= 30;
			 END_IF
		30://Restore_after_Estop_Process1-拍照流程
				IF  axBypassSignal[1] OR fbMachine[1].xTryRun THEN
						station.iStepAuto :=110 ;
				ELSE    
						station.iStepAuto :=40; 
				END_IF
		40://启动链板线
			tsModuleProcess[1].xProcessNotStarted:=TRUE;
			IF   NOT _FirstFlag[3] OR station.xSingleRunning THEN
					fbFlowLine.xIRunningPremit:=TRUE;
			END_IF
				station.iStepAuto:=50;	
	 45://
				 fbFlowLine.xIRunningPremit:=TRUE;
				 station.iStepAuto:=46;	
	 46://判断是否需要拍照
				//IF  NOT	_FirstCycle[3] THEN
					 station.iStepAuto:=50;	
				//ELSE
				//	 station.iStepAuto:=80;
				// END_IF
	 50://Y轴去拍照位置
		 arTonDelay[03](IN:=FALSE);
		 fbYAxisMove.xMoveAuto[2]:=TRUE;
		 IF  fbYAxisMove.xMoveInPos[2] THEN
					station.iStepAuto:=60;	
		 END_IF
	60://等待链板线孔板到位 
			arTonDelay[03](IN:=TRUE , PT:=T#10S , Q=> , ET=> ); 
			IF 	fbFlowLine.xQDone  THEN
					 station.iStepAuto:=65;	
			ELSIF fbFlowLine.xQError OR  	arTonDelay[03].Q THEN
			 		arTonDelay[03](IN:=FALSE);
					fbFlowLine.xIInit:=TRUE;
					 station.iStepAuto:=45;	
					station.adwAlarm[1].31	:=	TRUE;//	S01上料工位-链板线运行超时,请复位
			END_IF
	65://链板线停止
				fbFlowLine.xIMotorStop :=TRUE;
			IF NOT  fbFlowLine.xQMotorStart THEN
			 			 station.iStepAuto:=70;	
			END_IF
	70://第一个循环相机拍照
		//tsModuleProcess[1].xProcessStarted:=TRUE;
			Camera.xlTrigger:=TRUE;
			station.iStepAuto:=75;	
	75://相机触发响应
				IF    Camera.xQBusy THEN
						station.iStepAuto:=80;	
				END_IF
	80://等待相机完成且链板线执行完成
			 IF  Camera.xQDone THEN
				 _FirstCycle[3]:=TRUE;
				 station.iStepAuto:=100;		
			 ELSIF  Camera.xQAlarm THEN
					 Camera.xlInit:=TRUE;
					 station.iStepAuto:=70;		
					 station.adwAlarm[1].30	:=	TRUE;//	S01上料工位-相机拍照超时，请检查
			 END_IF
	100://查看相机结果，判断是否料反
		(*位置1*)		
		//tsModuleProcess[1].xProcessCompleted:=TRUE;
		_AlarmDisable:=FALSE;
		FOR  i:=1 TO 4 BY 1 DO
			IF 	sCamera_TO_Plc.iS01Result[i] >=3 THEN
					station.iStepAuto:=101;
					EXIT;
			ELSIF	i =4 THEN
					station.iStepAuto:=110;
			END_IF
		END_FOR
	101://报警,人工处理后重新拍照
		IF  NOT  _AlarmDisable THEN
					IF   sCamera_TO_Plc.iS01Result[1] =3 (*料反*) THEN
						station.adwAlarm[1].01:=TRUE ;//S01链板线上料位置1相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[1] =4 (*无料*) THEN
					 	station.adwAlarm[1].26:=TRUE ;//S01链板线上料位置1相机未检测到深孔板，请检查
					END_IF
					IF   sCamera_TO_Plc.iS01Result[2] =3 (*料反*) THEN
						station.adwAlarm[1].02:=TRUE ;//S01链板线上料位置2相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[2] =4 (*无料*) THEN
					 	station.adwAlarm[1].27:=TRUE ;//S01链板线上料位置2相机未检到板，请检查
					END_IF	
					IF   sCamera_TO_Plc.iS01Result[3] =3 (*料反*) THEN
 						station.adwAlarm[1].03:= TRUE;//S01链板线上料位置3相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[3] =4 (*无料*) THEN
					 	station.adwAlarm[1].28:=TRUE ;//S01链板线上料位置3相机未检到板，请检查
					END_IF
					IF    sCamera_TO_Plc.iS01Result[4] =3 (*料反*) THEN
 						station.adwAlarm[1].04:= TRUE;//S01链板线上料位置4相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[4] =4 (*无料*) THEN
					 	station.adwAlarm[1].29:=TRUE ;//S01链板线上料位置4相机未检到板，请检查
					END_IF
					_AlarmDisable:=TRUE;
		END_IF
			station.iStepAuto:=60;
	110://数据传送完成
			tsModuleProcess[1].xQDataCompleted:=TRUE;
			station.iStepAuto:=140;

///预留复检步骤120-140
	140://开始循环。循环次数=2
			bCounter:=1;
			station.iStepAuto :=150; 
	150://循环跳转处
				station.iStepAuto:=160;
	160://Restore_after_Estop_Process2/3 取孔板流程1/2
					station.iStepAuto :=170; 
	170://
			tsModuleProcess[bCounter+1].xProcessNotStarted :=TRUE;
			 station.iStepAuto:=190;		  
	190://XY轴去夹取位置1/2
			fbXAxisMove.xMoveAuto[bCounter +1]:=TRUE;
			fbYAxisMove.xMoveAuto[3]:=TRUE;
			fbClamp_1.aRotateReleaseControl[1]:=TRUE ;
			fbClamp_2.aRotateReleaseControl[1]:=TRUE ;		
			IF fbXAxisMove.xMoveInPos[bCounter+1] AND 
			   fbYAxisMove.xMoveInPos[3] AND 
				 fbClamp_1.xDone AND  
			  fbClamp_2.xDone THEN
					fbClamp_1.xExecute :=FALSE ;
				 fbClamp_2.xExecute :=FALSE ;
				 station.iStepAuto:=200;	
			END_IF
			
	200://Z轴气缸下降
		fbVTCCyl_1.xAuto:=TRUE;
		fbVTCCyl_2.xAuto:=TRUE;
		IF  fbVTCCyl_1.xWP_Delay AND 
			fbVTCCyl_2.xWP_Delay THEN
			 station.iStepAuto:=210;		
		END_IF
	210://电动夹爪夹取
		tsModuleProcess[bCounter+1].xProcessStarted :=TRUE;
		IF  fbmachine[1].xTryRun THEN 
				station.iStepAuto:=215;	
		ELSE
			fbClamp_1.aClampControl[1]:=TRUE;
			fbClamp_2.aClampControl[1]:=TRUE;
			IF (fbClamp_1.xDone OR (fbClamp_1.xGripClampEmpty  AND fbMachine[1].xTryRun)) AND
			 (fbClamp_2.xDone OR (fbClamp_2.xGripClampEmpty  AND fbMachine[1].xTryRun ))   THEN
					fbClamp_1.xExecute :=FALSE ;
					fbClamp_2.xExecute:=FALSE;
					 station.iStepAuto:=215;	
			END_IF
		END_IF
	215://电动夹爪夹取完成
				 tsModuleProcess[bCounter+1].xProcessCompleted :=TRUE;
				 station.iStepAuto:=220;	
	220://Z轴上升
			arClampHavePart[2]:=TRUE;//夹爪2有产品标志位
			
				fbVTCCyl_1.xAuto:=FALSE;
				fbVTCCyl_2.xAuto:=FALSE;
			IF  fbVTCCyl_1.xHP_Delay AND 
				fbVTCCyl_2.xHP_Delay THEN
				 station.iStepAuto:=225;		
			END_IF
	225://判断流程	arClampHavePart[1]:=TRUE;//夹爪1有产品标志位
		
			IF bCounter =2 THEN
					xTakeBoxPremit:=TRUE;//允许链板线执行动作
			END_IF
			station.iStepAuto:=230;	
	230://Restore_after_Estop_Process4 /Process5翻转孔板流程1/2
					station.iStepAuto :=240; 	
	240://判断是否需要翻转
			IF  NOT  fbmachine[1].xTryRun THEN
			 		IF   bCounter =1 THEN
					 			IF 	sCamera_To_Plc.iS01Result[2] =2(*角度反*) OR sCamera_To_Plc.iS01Result[4] =2(*角度反*) THEN 
													 station.iStepAuto:=250;
								ELSE
								 							ariPosNum[1]:=4	;	
															ariPosNum[2]:=4	;	
														 station.iStepAuto:=280;			
								END_IF
								
					ELSIF  bCounter =2 THEN
					 			IF 	sCamera_To_Plc.iS01Result[1] =2(*角度反*) OR sCamera_To_Plc.iS01Result[3] =2(*角度反*) THEN 
													 station.iStepAuto:=250;
								ELSE
								 							ariPosNum[1]:=4	;	
															ariPosNum[2]:=4	;	
														 station.iStepAuto:=280;			
								END_IF
	
					END_IF
			ELSE
			 							station.iStepAuto:=280;			
			END_IF
	250://去翻转位
					tsModuleProcess[bCounter+3].xProcessNotStarted :=TRUE;
			 		 fbXAxisMove.xMoveAuto[6]:=TRUE;
					IF fbXAxisMove.xMoveInPos[6] THEN
						 station.iStepAuto:=260;	
					END_IF 	
  260://空跑
					tsModuleProcess[bCounter+3].xProcessStarted :=TRUE;
					station.iStepAuto:=265;	
	265://夹爪1开始校正
				IF  (sCamera_To_Plc.iS01Result[1] =2(*角度反*) AND bCounter =2 ) OR
						(sCamera_To_Plc.iS01Result[2] =2(*角度反*) AND bCounter =1 ) THEN	
							fbClamp_1.aRotateClampControl[1]:=TRUE ;
							 IF (fbClamp_1.xDone OR (fbClamp_1.xClosecoverFailure AND fbmachine[1].xTryRun)) THEN						
									fbClamp_1.xExecute :=FALSE ;
									station.iStepAuto:= 270;
							END_IF
						ariPosNum[1]:=6	;	
				ELSE
				 		ariPosNum[1]:=4	;	
				 		station.iStepAuto:= 270;
				END_IF
	270://夹爪2开始校正			
				IF  (sCamera_To_Plc.iS01Result[3] =2(*角度反*) AND bCounter =2 ) OR
						(sCamera_To_Plc.iS01Result[4] =2(*角度反*) AND bCounter =1 ) THEN
						fbClamp_2.aRotateClampControl[1]:=TRUE ;
						 IF (fbClamp_2.xDone OR (fbClamp_2.xClosecoverFailure AND fbmachine[1].xTryRun)) THEN			
									fbClamp_2.xExecute :=FALSE ;
									station.iStepAuto:= 280;
							END_IF		
								ariPosNum[2]:=6	;	
				ELSE	
				 				ariPosNum[2]:=4	;	
				 				station.iStepAuto:= 280;
				END_IF	
	280://夹爪矫正完成
			tsModuleProcess[bCounter+3].xProcessCompleted:=TRUE;
			station.iStepAuto:=285;		
	285://检查是否允许放料
			IF  NOT  xLoadingReachedSensor[1]  AND
				NOT  xLoadingReachedSensor[2]  AND 
			(( NOT station.xDone 			   AND
			 (NOT _FirstCycle[4] OR  S08_Mainline.station.xDone)) OR station.xSingleRunning) THEN
				 station.iStepAuto:=290;
				 _FirstCycle[4]:=TRUE;
		  END_IF
	290://X轴放料开始循环计数  =2
			IF ( bXCounter >2) OR NOT _FirstCycle[2] THEN
		 		bXCounter:=1;
				_FirstCycle[2]:=TRUE;
			END_IF
			station.iStepAuto :=291;
	291://是否需要启动链板线
			IF   bCounter  =2 THEN
					fbFlowLine.xIRunningPremit:=TRUE;
			END_IF			
			station.iStepAuto:=295;	
	295://Restore_after_Estop_Process6/7 孔板放料流程1/2
				station.iStepAuto :=300; 
	300://X轴去放料位置	
			tsModuleProcess[bXCounter+5].xProcessNotStarted:=TRUE;
			IF   bXCounter=1 THEN
						fbXAxisMove.xMoveAuto[4]:=TRUE;
						fbYAxisMove.xMoveAuto[ariPosNum[2]]:=TRUE;
								IF fbXAxisMove.xMoveInPos[4] AND 
									 fbYAxisMove.xMoveInPos[ariPosNum[2]] THEN
											 station.iStepAuto:=310;	
								END_IF				
			ELSIF	 bXCounter=2 THEN
			 			 fbXAxisMove.xMoveAuto[5]:=TRUE;
						 fbYAxisMove.xMoveAuto[ariPosNum[1]]:=TRUE;
								IF fbXAxisMove.xMoveInPos[5] AND 
									 fbYAxisMove.xMoveInPos[ariPosNum[1]] THEN
											 station.iStepAuto:=310;
								END_IF				
			END_IF
	//305://同时进行拍照
	//			Camera.xlTrigger:=TRUE;
	//			 station.iStepAuto:=306;
	//306://等待相机触发
	//			IF  Camera.xQBusy THEN
	//			 	station.iStepAuto:=310;
	//		   END_IF
	310://Z轴下降
				IF   bXCounter=1 THEN
						fbVTCCyl_2.xAuto:=TRUE;
						IF fbVTCCyl_2.xWP_Delay THEN
							 station.iStepAuto:=320;	
						END_IF
				ELSIF	 bXCounter=2 THEN
								fbVTCCyl_1.xAuto:=TRUE;
						IF fbVTCCyl_1.xWP_Delay THEN
							 station.iStepAuto:=320;	
						END_IF					
			END_IF
	320://电动夹爪松开
			tsModuleProcess[bXCounter+5].xProcessStarted:=TRUE;
		//	IF  NOT  fbMachine[1].xTryRun THEN
				IF   bXCounter=1 THEN
								fbClamp_2.aReleaseControl[1]:=TRUE;
							IF fbClamp_2.xDone THEN
								fbClamp_2.xExecute:=FALSE;
								 station.iStepAuto:=330;	
							END_IF				
				ELSIF	 bXCounter=2 THEN
							fbClamp_1.aReleaseControl[1]:=TRUE;
							IF fbClamp_1.xDone THEN
								fbClamp_1.xExecute:=FALSE;
								 station.iStepAuto:=330;	
							END_IF			
				END_IF		
		//	ELSE
		//	  	station.iStepAuto:=330;	
		//	 END_IF
	330://传感器检测
				tsModuleProcess[bXCounter+5].xProcessCompleted:=TRUE;
				arClampHavePart[bXCounter]:=FALSE;//夹爪1/2有产品标志位
				IF   xLoadingReachedSensor[bXCounter] OR fbMachine[1].xTryRun THEN
					station.iStepAuto:=340;	
				END_IF
	340://Z轴上升		
				IF   bXCounter=1 THEN
							fbVTCCyl_2.xAuto:=FALSE;
						IF fbVTCCyl_2.xHP_Delay THEN
							 station.iStepAuto:=350;	
						END_IF	
				ELSIF	 bXCounter=2 THEN
							fbVTCCyl_1.xAuto:=FALSE;
						IF fbVTCCyl_1.xHP_Delay THEN
							 station.iStepAuto:=350;	
						END_IF				
				END_IF
	350://Restore_after_Estop_Process8 数据传输流程
			 IF  station.xSingleRunning THEN//OR fbMachine[1].xTryRun THEN
					 station.iStepAuto :=400; 
			ELSIF tsModuleProcess[8].xProcessNotStarted AND NOT  tsModuleProcess[8].xProcessStarted THEN
					 station.iStepAuto :=360; (*process not started*)
			 ELSIF  tsModuleProcess[8].xProcessStarted AND NOT  tsModuleProcess[8].xProcessCompleted THEN
					station.iStepAuto :=370;(*process started*)
			 ELSIF  tsModuleProcess[8].xProcessCompleted AND NOT tsModuleProcess[8].xQDataCompleted  THEN
					 station.iStepAuto :=400 ;(*process completed*)
			 ELSE
					 station.iStepAuto :=360; 
			 END_IF		
		 
	360://任务成功
		 tsModuleProcess[8].xProcessNotStarted:=TRUE;
		 tsModuleProcess[8].xProcessStarted:=TRUE;
		 
		 arProcessDataStation[1].xMaterialOnOff:=TRUE;
		 arProcessDataStation[2].xMaterialOnOff:=TRUE;
		 
		 arProcessDataStation[1].stProduct.xLoading_OK:=TRUE;
		 arProcessDataStation[2].stProduct.xLoading_OK:=TRUE;
			
		 //清空标志位	 
				arProcessDataStation[1].stProduct.xEmptying:=FALSE;
				arProcessDataStation[2].stProduct.xEmptying:=FALSE;		 
		 station.iStepAuto:= 370;
	370://数据unload
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[1]]),ADR(arProcessDataStation[1]),SIZEOF(arProcessDataStation[1]));
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[2]]),ADR(arProcessDataStation[2]),SIZEOF(arProcessDataStation[2]));
			 station.iStepAuto:= 380;
	380://本地数据清除
			 	FOR i:=1 TO gc_ModuleProNo BY 1 DO
				 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			 END_FOR
			 tsModuleProcess[8].xProcessCompleted:=TRUE;
			 station.iStepAuto:= 400;		
			 
			
	400://放料完成
			IF bXCounter =2 THEN
				station.xDone:=TRUE;
			END_IF
			station.iStepAuto:=420;
	420://X轴循环+1
			bXCounter :=bXCounter +1;
			station.iStepAuto:=430;	

	430:  
		IF   bXCounter<=2 THEN
				station.iStepAuto:=295;	
		ELSE
				station.iStepAuto:=440;	
		END_IF

	440://循环+1
			bCounter :=bCounter +1;
			 station.iStepAuto:=450;
	450://
		IF   bCounter <=2  THEN 
		 	  station.iStepAuto:=150;
		ELSIF	 bCounter >2 THEN
		 		station.iStepAuto:=999;
		END_IF
		
	999://----Single Run Finish----
		station.iStepAuto :=0;
		station.xSingleRunFlag:=FALSE;
		station.xCycleEnable:=FALSE;	
	//	station.xDone:=TRUE;
{region "请料程序"}
	1000://进入请料流程
		 		//写入数据
			 	arProcessDataStation[1].xMaterialOnOff:=FALSE;
		 		arProcessDataStation[2].xMaterialOnOff:=FALSE;
				arProcessDataStation[1].stProduct.xLoading_OK:=FALSE;
			  arProcessDataStation[2].stProduct.xLoading_OK:=FALSE;
				//清空标志位	 
				arProcessDataStation[1].stProduct.xEmptying:=TRUE;
				arProcessDataStation[2].stProduct.xEmptying:=TRUE;
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[1]]),ADR(arProcessDataStation[1]),SIZEOF(arProcessDataStation[1]));
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[2]]),ADR(arProcessDataStation[2]),SIZEOF(arProcessDataStation[2]));
			 station.iStepAuto :=1010;
	1010://允许主流线前进
					
		 		station.xDone:=TRUE;
				station.iStepAuto :=1020;
	1020://伺服去待机位置
			 fbXAxisMove.xMoveAuto[1]:=TRUE;
			 fbYAxisMove.xMoveAuto[1]:=TRUE;
			IF fbXAxisMove.xMoveInPos[1] AND 
				 fbYAxisMove.xMoveInPos[1]  THEN
				station.iStepAuto:=1030;	
			END_IF
  1030://电动夹爪初始化
				 fbClamp_1.xInitControl:=TRUE ;
					fbClamp_2.xInitControl:=TRUE ;
				IF  fbClamp_1.xDone   AND
						fbClamp_2.xDone  THEN 
						 fbClamp_1.xExecute :=FALSE;
						 fbClamp_2.xExecute:=FALSE;
						 station.iStepAuto:=1040;
				END_IF				
  1040://电动夹爪去初始位置
						 fbClamp_1.aReleaseControl[1]:=TRUE ;
						 fbClamp_2.aReleaseControl[1]:=TRUE ;
					IF  fbClamp_1.xDone AND
							fbClamp_2.xDone THEN 
								fbClamp_1.xExecute :=FALSE;
								fbClamp_2.xExecute:=FALSE;
								 station.iStepAuto:=1050;
					END_IF						
	1050://链板线初始化
					 fbFlowLine.xIInit:=TRUE;
					 station.iStepAuto:=1060;
  1060://等待完成
					IF  NOT fbFlowLine.xQBusy THEN
							station.iStepAuto:=1100;
					END_IF
	1100://当站清料完成
			 		 station.xEmptying:=FALSE;
			 		 station.xEmptyDone:=TRUE;
					 station.iStepAuto:=0;				
{endregion}
	
	
	
	ELSE
		;	
END_CASE

END_IF


]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowAuto_1" Id="{aff581fc-9b63-454d-b4be-e4b957bf91ee}">
      <Implementation>
        <ST><![CDATA[
//-----------------------------------------初始化是否完成判断----------------------------------------------
IF NOT station.xInitDone THEN
 	station.iStepAuto:=0;
 	station.xDone:=FALSE;
ELSIF station.xRunning  OR 
//(tsModuleProcess[1].xProcessStarted AND  NOT tsModuleProcess[1].xProcessCompleted)  OR//相机拍照流程
(	tsModuleProcess[bCounter+1].xProcessStarted AND  NOT tsModuleProcess[bCounter+1].xProcessCompleted)  OR //电动夹爪夹取流程
(tsModuleProcess[bCounter+3].xProcessStarted AND  NOT tsModuleProcess[bCounter+3].xProcessCompleted)  OR //孔板翻转流程流程
(	tsModuleProcess[bXCounter+5].xProcessStarted AND NOT 	tsModuleProcess[bXCounter+5].xProcessCompleted) //电动夹爪松开流程
THEN
//-----------------------------------------动作步骤--------------------------------------------------------
CASE station.iStepAuto OF	  
	0: //----Home Step，等待启动----
		IF station.xDisabled 
			AND station.xCanRun 
			AND NOT fbMachine[1].xStopped 
			AND NOT station.xSingleRunning 
		THEN
			station.xDone:=TRUE;
		END_IF
		IF  station.xSingleRunning 
			OR station.xCanRun 
			//AND NOT station.xDone 
			AND NOT station.xDisabled 
			AND NOT fbMachine[1].xStopped
		THEN
			station.xCycleEnable:=TRUE;
			//station.xDone:= FALSE;  
			station.iStepAuto:= 10;
		END_IF
	10://复位
			Camera.xlInit:=TRUE;
			FOR  i:=1 TO  4 BY  1 DO
		 		sCamera_To_Plc.iS01Result[i]:=0;
			END_FOR
			MEMSET(ADR(arProcessDataStation[1]),0,SIZEOF(arProcessDataStation[1]));
			MEMSET(ADR(arProcessDataStation[2]),0,SIZEOF(arProcessDataStation[2]));
		
				 FOR i:=1 TO gc_ModuleProNo BY 1 DO
						 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
				 END_FOR
			station.iStepAuto:= 20;
  	20://区分上料还是请料
			 IF  station.xEmptying  THEN
					station.iStepAuto:= 1000;
			 ELSIF station.xEmptyDone THEN
					  station.xDone:=TRUE;
						station.iStepAuto:= 0;
			 ELSE
					station.iStepAuto:= 30;
			 END_IF
		30://Restore_after_Estop_Process1-拍照流程
				IF  axBypassSignal[1] OR fbMachine[1].xTryRun THEN
						station.iStepAuto :=110 ;
				ELSE    
						station.iStepAuto :=40; 
				END_IF
		40://启动链板线
			tsModuleProcess[1].xProcessNotStarted:=TRUE;
			IF   NOT _FirstFlag[3] OR station.xSingleRunning THEN
					fbFlowLine.xIRunningPremit:=TRUE;
			END_IF
				station.iStepAuto:=50;	
	 45://
				 fbFlowLine.xIRunningPremit:=TRUE;
				 station.iStepAuto:=46;	
	 46://判断是否需要拍照
				//IF  NOT	_FirstCycle[3] THEN
					 station.iStepAuto:=50;	
				//ELSE
				//	 station.iStepAuto:=80;
				// END_IF
	 50://Y轴去拍照位置
		 arTonDelay[03](IN:=FALSE);
		 fbYAxisMove.xMoveAuto[2]:=TRUE;
		 IF  fbYAxisMove.xMoveInPos[2] THEN
					station.iStepAuto:=60;	
		 END_IF
	60://等待链板线孔板到位 
			arTonDelay[03](IN:=TRUE , PT:=T#10S , Q=> , ET=> ); 
			IF 	fbFlowLine.xQDone  THEN
					 station.iStepAuto:=65;	
			ELSIF fbFlowLine.xQError OR  	arTonDelay[03].Q THEN
			 		arTonDelay[03](IN:=FALSE);
					fbFlowLine.xIInit:=TRUE;
					 station.iStepAuto:=45;	
					station.adwAlarm[1].31	:=	TRUE;//	S01上料工位-链板线运行超时,请复位
			END_IF
	65://链板线停止
				fbFlowLine.xIMotorStop :=TRUE;
			IF NOT  fbFlowLine.xQMotorStart THEN
			 			 station.iStepAuto:=70;	
			END_IF
	70://第一个循环相机拍照
		//tsModuleProcess[1].xProcessStarted:=TRUE;
			Camera.xlTrigger:=TRUE;
			station.iStepAuto:=75;	
	75://相机触发响应
				IF    Camera.xQBusy THEN
						station.iStepAuto:=80;	
				END_IF
	80://等待相机完成且链板线执行完成
			 IF  Camera.xQDone THEN
				 _FirstCycle[3]:=TRUE;
				 station.iStepAuto:=100;		
			 ELSIF  Camera.xQAlarm THEN
					 Camera.xlInit:=TRUE;
					 station.iStepAuto:=70;		
					 station.adwAlarm[1].30	:=	TRUE;//	S01上料工位-相机拍照超时，请检查
			 END_IF
	100://查看相机结果，判断是否料反
		(*位置1*)		
		//tsModuleProcess[1].xProcessCompleted:=TRUE;
		_AlarmDisable:=FALSE;
		FOR  i:=1 TO 4 BY 1 DO
			IF 	sCamera_TO_Plc.iS01Result[i] >=3 THEN
					station.iStepAuto:=101;
					EXIT;
			ELSIF	i =4 THEN
					station.iStepAuto:=110;
			END_IF
		END_FOR
	101://报警,人工处理后重新拍照
		IF  NOT  _AlarmDisable THEN
					IF   sCamera_TO_Plc.iS01Result[1] =3 (*料反*) THEN
						station.adwAlarm[1].01:=TRUE ;//S01链板线上料位置1相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[1] =4 (*无料*) THEN
					 	station.adwAlarm[1].26:=TRUE ;//S01链板线上料位置1相机未检测到深孔板，请检查
					END_IF
					IF   sCamera_TO_Plc.iS01Result[2] =3 (*料反*) THEN
						station.adwAlarm[1].02:=TRUE ;//S01链板线上料位置2相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[2] =4 (*无料*) THEN
					 	station.adwAlarm[1].27:=TRUE ;//S01链板线上料位置2相机未检到板，请检查
					END_IF	
					IF   sCamera_TO_Plc.iS01Result[3] =3 (*料反*) THEN
 						station.adwAlarm[1].03:= TRUE;//S01链板线上料位置3相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[3] =4 (*无料*) THEN
					 	station.adwAlarm[1].28:=TRUE ;//S01链板线上料位置3相机未检到板，请检查
					END_IF
					IF    sCamera_TO_Plc.iS01Result[4] =3 (*料反*) THEN
 						station.adwAlarm[1].04:= TRUE;//S01链板线上料位置4相机检测到深孔板放反，请检查
					ELSIF  sCamera_TO_Plc.iS01Result[4] =4 (*无料*) THEN
					 	station.adwAlarm[1].29:=TRUE ;//S01链板线上料位置4相机未检到板，请检查
					END_IF
					_AlarmDisable:=TRUE;
		END_IF
			station.iStepAuto:=60;
	110://数据传送完成
			tsModuleProcess[1].xQDataCompleted:=TRUE;
			station.iStepAuto:=140;

///预留复检步骤120-140
	140://开始循环。循环次数=2
			bCounter:=1;
			bXCounter:=1;
			station.iStepAuto :=150; 
	150://循环跳转处
				station.iStepAuto:=160;
	160://Restore_after_Estop_Process2/3 取孔板流程1/2
					station.iStepAuto :=170; 
	170://
			tsModuleProcess[bCounter+1].xProcessNotStarted :=TRUE;
			 station.iStepAuto:=190;		  
	190://XY轴去夹取位置1/2
			fbXAxisMove.xMoveAuto[bCounter +1]:=TRUE;
			fbYAxisMove.xMoveAuto[3]:=TRUE;
			ERG_20C_1.stDeviceOpe.aRotateReleaseControl[1]:=TRUE ;
			ERG_20C_2.stDeviceOpe.aRotateReleaseControl[1]:=TRUE ;	
			IF    ERG_20C_1.stDevice.xQBusy AND 
			 			ERG_20C_2.stDevice.xQBusy THEN
						 station.iStepAuto:=195;	
			END_IF
	195://等待
			IF fbXAxisMove.xMoveInPos[bCounter+1] AND 
			   fbYAxisMove.xMoveInPos[3] AND 
				 ERG_20C_1.stDevice.xQDone AND  
			   ERG_20C_2.stDevice.xQDone THEN
				 station.iStepAuto:=200;	
			END_IF
	200://Z轴气缸下降
		fbVTCCyl_1.xAuto:=TRUE;
		fbVTCCyl_2.xAuto:=TRUE;
		IF  fbVTCCyl_1.xWP_Delay AND 
			fbVTCCyl_2.xWP_Delay THEN
			 station.iStepAuto:=210;		
		END_IF
	210://电动夹爪夹取
			tsModuleProcess[bCounter+1].xProcessStarted :=TRUE;
			ERG_20C_1.stDeviceOpe.aClampControl[1]:=TRUE;
			ERG_20C_2.stDeviceOpe.aClampControl[1]:=TRUE;  
			IF    ERG_20C_1.stDevice.xQBusy AND 
			 			ERG_20C_2.stDevice.xQBusy THEN
						 station.iStepAuto:=215;	
			END_IF
		
	215://电动夹爪夹取完成
				 IF ERG_20C_1.stDevice.xQDone AND 
			 			ERG_20C_2.stDevice.xQDone THEN
						 tsModuleProcess[bCounter+1].xProcessCompleted :=TRUE;
						 station.iStepAuto:=220;	
			END_IF
	220://Z轴上升
			arClampHavePart[2]:=TRUE;//夹爪2有产品标志位
			
				fbVTCCyl_1.xAuto:=FALSE;
				fbVTCCyl_2.xAuto:=FALSE;
			IF  fbVTCCyl_1.xHP_Delay AND 
				fbVTCCyl_2.xHP_Delay THEN
				 station.iStepAuto:=225;		
			END_IF
	225://判断流程	arClampHavePart[1]:=TRUE;//夹爪1有产品标志位
		
			IF bCounter =2 THEN
					xTakeBoxPremit:=TRUE;//允许链板线执行动作
			END_IF
			station.iStepAuto:=230;	
	230://Restore_after_Estop_Process4 /Process5翻转孔板流程1/2
					station.iStepAuto :=240; 	
	240://判断是否需要翻转
			IF  NOT  fbmachine[1].xTryRun THEN
			 		IF   bCounter =1 THEN
					 			IF 	sCamera_To_Plc.iS01Result[2] =2(*角度反*) OR sCamera_To_Plc.iS01Result[4] =2(*角度反*) THEN 
													 station.iStepAuto:=250;
								ELSE
								 							ariPosNum[1]:=4	;	
															ariPosNum[2]:=4	;	
														 station.iStepAuto:=280;			
								END_IF
								
					ELSIF  bCounter =2 THEN
					 			IF 	sCamera_To_Plc.iS01Result[1] =2(*角度反*) OR sCamera_To_Plc.iS01Result[3] =2(*角度反*) THEN 
													 station.iStepAuto:=250;
								ELSE
								 							ariPosNum[1]:=4	;	
															ariPosNum[2]:=4	;	
														 station.iStepAuto:=280;			
								END_IF
	
					END_IF
			ELSE
			 							station.iStepAuto:=280;			
			END_IF
	250://去翻转位
					tsModuleProcess[bCounter+3].xProcessNotStarted :=TRUE;
			 		 fbXAxisMove.xMoveAuto[6]:=TRUE;
					IF fbXAxisMove.xMoveInPos[6] THEN
						 station.iStepAuto:=260;	
					END_IF 	
  260://空跑
					tsModuleProcess[bCounter+3].xProcessStarted :=TRUE;
					station.iStepAuto:=265;	
	265://夹爪1开始校正
				IF  (sCamera_To_Plc.iS01Result[1] =2(*角度反*) AND bCounter =2 ) OR
						(sCamera_To_Plc.iS01Result[2] =2(*角度反*) AND bCounter =1 ) THEN	
								ERG_20C_1.stDeviceOpe.aRotateClampControl[1]:=TRUE ;
							 IF ERG_20C_1.stDevice.xQBusy  THEN					
									station.iStepAuto:= 266;
							END_IF
						ariPosNum[1]:=6	;	
				ELSE
				 		ariPosNum[1]:=4	;	
				 		station.iStepAuto:= 270;
				END_IF
	266://
				IF ERG_20C_1.stDevice.xQDone  THEN					
									station.iStepAuto:= 270;
				END_IF
	270://夹爪2开始校正			
				IF  (sCamera_To_Plc.iS01Result[3] =2(*角度反*) AND bCounter =2 ) OR
						(sCamera_To_Plc.iS01Result[4] =2(*角度反*) AND bCounter =1 ) THEN
							ERG_20C_2.stDeviceOpe.aRotateClampControl[1]:=TRUE ;
							 IF ERG_20C_2.stDevice.xQBusy  THEN					
									station.iStepAuto:= 275;
							END_IF
								ariPosNum[2]:=6	;	
				ELSE	
				 				ariPosNum[2]:=4	;	
				 				station.iStepAuto:= 280;
				END_IF	
  275://
				IF ERG_20C_2.stDevice.xQDone  THEN					
							station.iStepAuto:= 280;
				END_IF
	280://夹爪矫正完成
			tsModuleProcess[bCounter+3].xProcessCompleted:=TRUE;
			station.iStepAuto:=285;		
	285://检查是否允许放料
			IF  NOT  xLoadingReachedSensor[1]  AND
				NOT  xLoadingReachedSensor[2]  AND 
			(( NOT station.xDone 			   AND
			 (NOT _FirstCycle[4] OR  S08_Mainline.station.xDone)) OR station.xSingleRunning) THEN
				 station.iStepAuto:=290;
				 _FirstCycle[4]:=TRUE;
		  END_IF
	290://X轴放料开始循环计数  =2
			IF ( bXCounter >2) OR NOT _FirstCycle[2] THEN
		 		bXCounter:=1;
				_FirstCycle[2]:=TRUE;
			END_IF
			station.iStepAuto :=291;
	291://是否需要启动链板线
			IF   bCounter  =2 THEN
					fbFlowLine.xIRunningPremit:=TRUE;
			END_IF			
			station.iStepAuto:=295;	
	295://Restore_after_Estop_Process6/7 孔板放料流程1/2
				station.iStepAuto :=300; 
	300://X轴去放料位置	
			tsModuleProcess[bXCounter+5].xProcessNotStarted:=TRUE;
			IF   bXCounter=1 THEN
						fbXAxisMove.xMoveAuto[4]:=TRUE;
						fbYAxisMove.xMoveAuto[ariPosNum[2]]:=TRUE;
								IF fbXAxisMove.xMoveInPos[4] AND 
									 fbYAxisMove.xMoveInPos[ariPosNum[2]] THEN
											 station.iStepAuto:=310;	
								END_IF				
			ELSIF	 bXCounter=2 THEN
			 			 fbXAxisMove.xMoveAuto[5]:=TRUE;
						 fbYAxisMove.xMoveAuto[ariPosNum[1]]:=TRUE;
								IF fbXAxisMove.xMoveInPos[5] AND 
									 fbYAxisMove.xMoveInPos[ariPosNum[1]] THEN
											 station.iStepAuto:=310;
								END_IF				
			END_IF
	//305://同时进行拍照
	//			Camera.xlTrigger:=TRUE;
	//			 station.iStepAuto:=306;
	//306://等待相机触发
	//			IF  Camera.xQBusy THEN
	//			 	station.iStepAuto:=310;
	//		   END_IF
	310://Z轴下降
				IF   bXCounter=1 THEN
						fbVTCCyl_2.xAuto:=TRUE;
						IF fbVTCCyl_2.xWP_Delay THEN
							 station.iStepAuto:=320;	
						END_IF
				ELSIF	 bXCounter=2 THEN
								fbVTCCyl_1.xAuto:=TRUE;
						IF fbVTCCyl_1.xWP_Delay THEN
							 station.iStepAuto:=320;	
						END_IF					
			END_IF
	320://电动夹爪松开
			tsModuleProcess[bXCounter+5].xProcessStarted:=TRUE;
				IF   bXCounter=1 THEN
								ERG_20C_2.stDeviceOpe.aReleaseControl[1]:=TRUE;
							IF ERG_20C_2.stDevice.xQBusy  THEN
								 station.iStepAuto:=325;	
							END_IF				
				ELSIF	 bXCounter=2 THEN
							ERG_20C_1.stDeviceOpe.aReleaseControl[1]:=TRUE;
							IF ERG_20C_1.stDevice.xQBusy  THEN
								 station.iStepAuto:=326;	
							END_IF		
				END_IF		
	325: //等待夹爪动作完成
				 IF ERG_20C_2.stDevice.xQDone  THEN
								 station.iStepAuto:=330;	
				 END_IF			
	326: //等待夹爪动作完成
				 IF ERG_20C_1.stDevice.xQDone  THEN
								 station.iStepAuto:=330;	
				 END_IF		  	
	330://传感器检测
				tsModuleProcess[bXCounter+5].xProcessCompleted:=TRUE;
				arClampHavePart[bXCounter]:=FALSE;//夹爪1/2有产品标志位
				IF   xLoadingReachedSensor[bXCounter] OR fbMachine[1].xTryRun THEN
					station.iStepAuto:=340;	
				END_IF
	340://Z轴上升		
				IF   bXCounter=1 THEN
							fbVTCCyl_2.xAuto:=FALSE;
						IF fbVTCCyl_2.xHP_Delay THEN
							 station.iStepAuto:=350;	
						END_IF	
				ELSIF	 bXCounter=2 THEN
							fbVTCCyl_1.xAuto:=FALSE;
						IF fbVTCCyl_1.xHP_Delay THEN
							 station.iStepAuto:=350;	
						END_IF				
				END_IF
	350://Restore_after_Estop_Process8 数据传输流程
			 IF  station.xSingleRunning THEN//OR fbMachine[1].xTryRun THEN
					 station.iStepAuto :=400; 
			ELSIF tsModuleProcess[8].xProcessNotStarted AND NOT  tsModuleProcess[8].xProcessStarted THEN
					 station.iStepAuto :=360; (*process not started*)
			 ELSIF  tsModuleProcess[8].xProcessStarted AND NOT  tsModuleProcess[8].xProcessCompleted THEN
					station.iStepAuto :=370;(*process started*)
			 ELSIF  tsModuleProcess[8].xProcessCompleted AND NOT tsModuleProcess[8].xQDataCompleted  THEN
					 station.iStepAuto :=400 ;(*process completed*)
			 ELSE
					 station.iStepAuto :=360; 
			 END_IF		
		 
	360://任务成功
		 tsModuleProcess[8].xProcessNotStarted:=TRUE;
		 tsModuleProcess[8].xProcessStarted:=TRUE;
		 
		 arProcessDataStation[1].xMaterialOnOff:=TRUE;
		 arProcessDataStation[2].xMaterialOnOff:=TRUE;
		 
		 arProcessDataStation[1].stProduct.xLoading_OK:=TRUE;
		 arProcessDataStation[2].stProduct.xLoading_OK:=TRUE;
			
		 //清空标志位	 
				arProcessDataStation[1].stProduct.xEmptying:=FALSE;
				arProcessDataStation[2].stProduct.xEmptying:=FALSE;		 
		 station.iStepAuto:= 370;
	370://数据unload
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[1]]),ADR(arProcessDataStation[1]),SIZEOF(arProcessDataStation[1]));
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[2]]),ADR(arProcessDataStation[2]),SIZEOF(arProcessDataStation[2]));
			 station.iStepAuto:= 380;
	380://本地数据清除
			 	FOR i:=1 TO gc_ModuleProNo BY 1 DO
				 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			 END_FOR
			 tsModuleProcess[8].xProcessCompleted:=TRUE;
			 station.iStepAuto:= 400;		
			 
			
	400://放料完成
			IF bXCounter =2 THEN
				station.xDone:=TRUE;
			END_IF
			station.iStepAuto:=420;
	420://X轴循环+1
			bXCounter :=bXCounter +1;
			station.iStepAuto:=430;	

	430:  
		IF   bXCounter<=2 THEN
				station.iStepAuto:=295;	
		ELSE
				station.iStepAuto:=440;	
		END_IF

	440://循环+1
			bCounter :=bCounter +1;
			 station.iStepAuto:=450;
	450://
		IF   bCounter <=2  THEN 
		 	  station.iStepAuto:=150;
		ELSIF	 bCounter >2 THEN
		 		station.iStepAuto:=999;
		END_IF
		
	999://----Single Run Finish----
		station.iStepAuto :=0;
		station.xSingleRunFlag:=FALSE;
		station.xCycleEnable:=FALSE;	
	//	station.xDone:=TRUE;
{region "请料程序"}
	1000://进入请料流程
		 		//写入数据
			 	arProcessDataStation[1].xMaterialOnOff:=FALSE;
		 		arProcessDataStation[2].xMaterialOnOff:=FALSE;
				arProcessDataStation[1].stProduct.xLoading_OK:=FALSE;
			  arProcessDataStation[2].stProduct.xLoading_OK:=FALSE;
				//清空标志位	 
				arProcessDataStation[1].stProduct.xEmptying:=TRUE;
				arProcessDataStation[2].stProduct.xEmptying:=TRUE;
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[1]]),ADR(arProcessDataStation[1]),SIZEOF(arProcessDataStation[1]));
			 MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[2]]),ADR(arProcessDataStation[2]),SIZEOF(arProcessDataStation[2]));
			 station.iStepAuto :=1010;
	1010://允许主流线前进
					
		 		station.xDone:=TRUE;
				station.iStepAuto :=1020;
	1020://伺服去待机位置
			 fbXAxisMove.xMoveAuto[1]:=TRUE;
			 fbYAxisMove.xMoveAuto[1]:=TRUE;
			IF fbXAxisMove.xMoveInPos[1] AND 
				 fbYAxisMove.xMoveInPos[1]  THEN
				station.iStepAuto:=1030;	
			END_IF
	1030://电动夹爪初始化
					ERG_20C_1.stDeviceOpe.xInitControl:=TRUE;
					ERG_20C_2.stDeviceOpe.xInitControl:=TRUE;
		 		IF   ERG_20C_1.stDevice.xQBusy AND  ERG_20C_2.stDevice.xQBusy THEN
				 				station.iStepAuto:=1040;		
				END_IF
 1040://等待夹爪初始化完成
				 IF     ERG_20C_1.stDevice.xQDone AND 
								ERG_20C_2.stDevice.xQDone THEN
								station.iStepAuto:=1050;	
				 END_IF
 1050://电动夹爪去打开位置
					 ERG_20C_1.stDeviceOpe.aReleaseControl[1]:=TRUE;
					 ERG_20C_2.stDeviceOpe.aReleaseControl[1]:=TRUE;
				 IF   ERG_20C_1.stDevice.xQBusy AND  ERG_20C_2.stDevice.xQBusy THEN
								 station.iStepAuto:=1060;	
				 END_IF	
 1060://等待夹爪初始化完成
				 IF     ERG_20C_1.stDevice.xQDone AND 
								ERG_20C_2.stDevice.xQDone THEN
								station.iStepAuto:=1070;	
				 END_IF
	1070://链板线初始化
					 fbFlowLine.xIInit:=TRUE;
					 station.iStepAuto:=1080;
  1080://等待完成
					IF  NOT fbFlowLine.xQBusy THEN
							station.iStepAuto:=1100;
					END_IF
	1100://当站清料完成
			 		 station.xEmptying:=FALSE;
			 		 station.xEmptyDone:=TRUE;
					 station.iStepAuto:=0;				
{endregion}
	
	
	
	ELSE
		;	
END_CASE

END_IF


]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowInit" Id="{01519a1d-673c-4ee2-a29a-25e89704e122}">
      <Implementation>
        <ST><![CDATA[IF NOT station.xIniting THEN
  station.iStepInit:=0;    

ELSE
//--------------------------------------------初始化步序----------------------------------
CASE station.iStepInit OF	
 0://  
  	IF station.xIniting THEN	
  	  station.iStepInit:=10;	
  	END_IF	
10://复位数据
		FOR i:=1 TO gc_ModuleProNo BY 1 DO
				MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
		END_FOR
		FOR  i:=1 TO  4 BY  1 DO
		 		sCamera_To_Plc.iS01Result[i]:=0;
		END_FOR
		fbClamp_1.xInitControl:=FALSE;
		fbClamp_1.xInitControl:=FALSE ;
		fbClamp_1.aRotateClampControl[1]:=FALSE ;
		fbClamp_2.aRotateClampControl[1]:=FALSE ;
		fbClamp_1.xExecute :=FALSE;
		fbClamp_2.xExecute:=FALSE;
		IF NOT fbMachine[1].xTryRun THEN
				Camera.xlInit:=TRUE;
		END_IF
    station.iStepInit := 20;
20://Z轴上升
	 fbVTCCyl_1.xinit := TRUE; 
	 fbVTCCyl_2.xInit:=TRUE;
	IF fbVTCCyl_1.xHP_Delay AND fbVTCCyl_2.xHP_Delay  THEN
    		station.iStepInit:=40;	
	END_IF		
40: //伺服上电
  	 fbXAxisMove.xPowerInit := TRUE ;
	 fbYAxisMove.xPowerInit := TRUE ;
	IF fbXAxisMove.xPowerOn AND   fbYAxisMove.xPowerOn THEN 
    	station.iStepInit:=50;	
	END_IF
50://伺服去待机位置
		fbXAxisMove.xMoveAuto[1]:=TRUE;
		fbYAxisMove.xMoveAuto[1]:=TRUE;
		IF fbXAxisMove.xMoveInPos[1] AND fbYAxisMove.xMoveInPos[1]  THEN
			station.iStepInit:=60;	
		END_IF
60://电动夹爪初始化
				 fbClamp_1.xInitControl:=TRUE ;
				 fbClamp_2.xInitControl:=TRUE ;
		 IF  fbClamp_1.xDone   AND  fbClamp_2.xDone  THEN 
			fbClamp_1.xExecute :=FALSE;
			fbClamp_2.xExecute:=FALSE;
			station.iStepInit:=70;
		 END_IF				
70://电动夹爪去初始位置
				fbClamp_1.aReleaseControl[1]:=TRUE ;
				fbClamp_2.aReleaseControl[1]:=TRUE ;
		 IF  fbClamp_1.xDone AND fbClamp_2.xDone THEN 
			fbClamp_1.xExecute :=FALSE;
			fbClamp_2.xExecute:=FALSE;
			station.iStepInit:=80;
		 END_IF						
80://链板线初始化
		fbFlowLine.xIInit:=TRUE;
		station.iStepInit:=90;
90://等待完成
		IF  NOT fbFlowLine.xQBusy THEN
			 	station.iStepInit:=100;
		END_IF
100://
       station.iStepInit:=999;	

999://初始化完成	
	station.iStepInit:=0;
	station.xInitDone:=TRUE;  
END_CASE
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowInit_1" Id="{737815c3-3d44-47dd-9c07-561ee528fd92}">
      <Implementation>
        <ST><![CDATA[IF NOT station.xIniting THEN
  station.iStepInit:=0;    

ELSE
//--------------------------------------------初始化步序----------------------------------
CASE station.iStepInit OF	
 0://  
  	IF station.xIniting THEN	
  	  station.iStepInit:=10;	
  	END_IF	
10://复位数据
		FOR i:=1 TO gc_ModuleProNo BY 1 DO
				MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
		END_FOR
		FOR  i:=1 TO  4 BY  1 DO
		 		sCamera_To_Plc.iS01Result[i]:=0;
		END_FOR
		fbClamp_1.xInitControl:=FALSE;
		fbClamp_1.xInitControl:=FALSE ;
		fbClamp_1.aRotateClampControl[1]:=FALSE ;
		fbClamp_2.aRotateClampControl[1]:=FALSE ;
		fbClamp_1.xExecute :=FALSE;
		fbClamp_2.xExecute:=FALSE;
		IF NOT fbMachine[1].xTryRun THEN
				Camera.xlInit:=TRUE;
		END_IF
    station.iStepInit := 20;
20://Z轴上升
	 fbVTCCyl_1.xinit := TRUE; 
	 fbVTCCyl_2.xInit:=TRUE;
	IF fbVTCCyl_1.xHP_Delay AND fbVTCCyl_2.xHP_Delay  THEN
    		station.iStepInit:=40;	
	END_IF		
40: //伺服上电
  	 fbXAxisMove.xPowerInit := TRUE ;
	 fbYAxisMove.xPowerInit := TRUE ;
	IF fbXAxisMove.xPowerOn AND   fbYAxisMove.xPowerOn THEN 
    	station.iStepInit:=50;	
	END_IF
50://伺服去待机位置
		fbXAxisMove.xMoveAuto[1]:=TRUE;
		fbYAxisMove.xMoveAuto[1]:=TRUE;
		IF fbXAxisMove.xMoveInPos[1] AND fbYAxisMove.xMoveInPos[1]  THEN
			station.iStepInit:=60;	
		END_IF
60://电动夹爪初始化
					ERG_20C_1.stDeviceOpe.xInitControl:=TRUE;
					ERG_20C_2.stDeviceOpe.xInitControl:=TRUE;
		 		IF   ERG_20C_1.stDevice.xQBusy AND  ERG_20C_2.stDevice.xQBusy THEN
				 				station.iStepInit:=65;		
				END_IF
65://等待夹爪初始化完成
				IF     ERG_20C_1.stDevice.xQDone AND 
				 			 ERG_20C_2.stDevice.xQDone THEN
							 	station.iStepInit:=70;
				END_IF
70://电动夹爪去打开位置
					ERG_20C_1.stDeviceOpe.aReleaseControl[1]:=TRUE;
					ERG_20C_2.stDeviceOpe.aReleaseControl[1]:=TRUE;
		 		IF   ERG_20C_1.stDevice.xQBusy AND  ERG_20C_2.stDevice.xQBusy THEN
				 				station.iStepInit:=75;		
				END_IF	
75://等待夹爪初始化完成
			  IF     ERG_20C_1.stDevice.xQDone AND 
				 			 ERG_20C_2.stDevice.xQDone THEN
							 	station.iStepInit:=80;
				END_IF
80://链板线初始化
		fbFlowLine.xIInit:=TRUE;
		station.iStepInit:=90;
90://等待完成
		IF  NOT fbFlowLine.xQBusy THEN
			 	station.iStepInit:=100;
		END_IF
100://
       station.iStepInit:=999;	

999://初始化完成	
	station.iStepInit:=0;
	station.xInitDone:=TRUE;  
END_CASE
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowLine" Id="{b28f4192-39f5-4366-9ebd-07d256861364}">
      <Implementation>
        <ST><![CDATA[	
	fbFlowLine(
	arIReachedSensor:= arFlowLineReachedSensor,
	arIVTCCylHPSensor:=arVTCPressCylHPSensor , 
	arIVTCCylWPSensor:=arVTCPressCylWPSensor , 
	xIRunningPremit:= ,
	xIInit:= ,//station.xIniting,
	xIEmptyDone:=  fbMachine[1].xEmptyDone, 
	xITryRun:= fbMachine[1].xTryRun, 
	xIMotorEstop:=  not  fbMachine[1].xEStop, 
	xIMotorStartButtonHmi:=arFlowLineControl[1] , 
	xIMotorStopButtonHmi:= arFlowLineControl[2], 
	xIManualMode:= fbMachine[1].xManualMode , 
	xIAutoMode	:= fbMachine[1].xAutoMode, 
	xIDeviceRunning:=TRUE,
	arQVTCCylHPValve=> , 
	arQVTCCylWPValve=> , 
	xQMotorEstop=> QxFlowLineSpeedCtrl_1, 
	xQMotorStop=> QxFlowLineStop, 
	xQMotorStart=>QxFlowLineStart , 
	xQBusy=> , 
	xQError=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="General" Id="{853ea6bd-bb20-473d-996d-ff4ed10c4144}">
      <Implementation>
        <ST><![CDATA[MachineInitR_TRIG(CLK:=fbMachine[1].xInitDone OR fbMachine[1].xEmptyDone , Q=> );
IF  MachineInitR_TRIG.Q THEN
 	_FirstCycle[3]:=FALSE;
	_FirstCycle[4]:=FALSE;
END_IF

{region '新建电动夹爪功能块稳定性测试'}
//CASE  itestStep  OF
//0://等待启动
//		 IF   xtestbutton  THEN
//					ERG_20C_1.stDeviceOpe.xInitControl:=TRUE;
//					ERG_20C_2.stDeviceOpe.xInitControl:=TRUE;
//		 END_IF
//		 IF   ERG_20C_1.stDevice.xQBusy  AND
//				  ERG_20C_2.stDevice.xQBusy	THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//1://等待初始化完成
//		IF  ERG_20C_1.stDevice.xQDone  AND
//				ERG_20C_2.stDevice.xQDone THEN
//					 itestStep:=itestStep +1; 
//		 END_IF
//2://夹爪松开
//	 	 ERG_20C_1.stDeviceOpe.aHMIReleaseButton[1]:=TRUE;
//		 ERG_20C_2 .stDeviceOpe.aHMIReleaseButton[1]:=TRUE;		
//		 IF  	ERG_20C_1.stDevice.xQBusy  AND 
//					ERG_20C_2 .stDevice.xQBusy THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//3://等待夹爪松开完成
//	 	 IF   ERG_20C_1.stDevice.xQDone AND 
//					ERG_20C_2.stDevice.xQDone THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//4://夹爪夹紧
//	 	 ERG_20C_1.stDeviceOpe.aHMIClampButton[1]:=TRUE;
//		 ERG_20C_2.stDeviceOpe.aHMIClampButton[1]:=TRUE;		
//		 IF   ERG_20C_1.stDevice.xQBusy AND 
//					ERG_20C_2.stDevice.xQBusy  THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//5://等待夹爪夹紧完成
//	 	 IF   ERG_20C_1.stDevice.xQDone AND 
//					ERG_20C_2.stDevice.xQDone  THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//6://夹爪旋松
//	 	 ERG_20C_1.stDeviceOpe.aHMIRotateReleaseButton[1]:=TRUE;
//		 ERG_20C_2 .stDeviceOpe.aHMIRotateReleaseButton[1]:=TRUE;
//		 IF   ERG_20C_1.stDevice.xQBusy  AND 
//				  ERG_20C_2.stDevice.xQBusy  THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//7://等待夹爪旋松完成
//	 	 IF   ERG_20C_1.stDevice.xQDone  AND 
//					ERG_20C_2.stDevice.xQDone THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//8://夹爪拧精
//	 	 ERG_20C_1.stDeviceOpe.aHMIRotateClampButton[1]:=TRUE;
//		 ERG_20C_2.stDeviceOpe.aHMIRotateClampButton[1]:=TRUE;		
//		 IF   ERG_20C_1.stDevice.xQBusy AND 
//          ERG_20C_2.stDevice.xQBusy  THEN
//					 itestStep:=itestStep +1;
//		 END_IF
//9://夹爪拧紧
//	 	 IF   ERG_20C_1.stDevice.xQDone AND 
//					ERG_20C_2.stDevice.xQDone THEN
//					 itestStep:=2;
//		 END_IF
//	 		
//END_CASE]]></ST>
      </Implementation>
    </Action>
    <Action Name="ILC" Id="{0b3196e9-82f1-46a4-9b14-c04a89d888e7}">
      <Implementation>
        <ST><![CDATA[
//---------------------------------------------------工站可执行-------------------------------------------------------
station.xCanRun := TRUE ;

//---------------------------------------------------气缸动作条件-------------------------------------------
fbVTCPressCyl_1.xOffILC	:=	TRUE	;
fbVTCPressCyl_1.xOnILC	:=	TRUE	;
fbVTCPressCyl_2.xOffILC	:=	TRUE	;
fbVTCPressCyl_2.xOnILC	:=	TRUE	;
fbVTCPressCyl_3.xOffILC	:=	TRUE	;
fbVTCPressCyl_3.xOnILC	:=	TRUE	;
fbVTCPressCyl_4.xOffILC	:=	TRUE	;
fbVTCPressCyl_4.xOnILC	:=	TRUE	;
fbVTCCyl_1.xOffILC	:=	TRUE	;
fbVTCCyl_1.xOnILC	:=	TRUE	;
fbVTCCyl_2.xOffILC	:=	TRUE	;
fbVTCCyl_2.xOnILC	:=	TRUE	;



//---------------------------------------------------伺服动作条件-------------------------------------------
fbXAxisMove.xRunILC 	:= 		
fbXAxisMove.xMoveILC[1]	:= 		
fbXAxisMove.xMoveILC[2] 	:= 		
fbXAxisMove.xMoveILC[3]	:= 		
fbXAxisMove.xMoveILC[4]	:= 		
fbXAxisMove.xMoveILC[5]	:= 
fbXAxisMove.xMoveILC[6]	:= 	fbVTCCyl_1.xHP_Sensor	AND 	fbVTCCyl_2.xHP_Sensor	;
fbYAxisMove.xRunILC 	:= 		
fbYAxisMove.xMoveILC[1]	:= 		
fbYAxisMove.xMoveILC[2]	:= 		
fbYAxisMove.xMoveILC[3]	:= 		
fbYAxisMove.xMoveILC[4]	:= 		
fbYAxisMove.xMoveILC[5]	:= 	fbVTCCyl_1.xHP_Sensor	AND 	fbVTCCyl_2.xHP_Sensor	;
///电动夹爪
fbERG_20_Modbus[1].xDeviceRunning:=
fbERG_20_Modbus[2].xDeviceRunning:=station.xSingleRunning OR station.xRunning OR station.xIniting;

Camera.xIDeviceRunning:=station.xSingleRunning;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipAuto" Id="{aecc5aff-b1ec-43bf-9301-a661c8b5dae6}">
      <Implementation>
        <ST><![CDATA[//------------------------------------------------AutoTip Cylinder--------------------------------
//station.adwAutoTip[1].00	:=	fbVTCPressCyl_1.xAutoTip	;
//station.adwAutoTip[1].01	:=	fbVTCPressCyl_2.xAutoTip	;
//station.adwAutoTip[1].02	:=	fbVTCPressCyl_3.xAutoTip	;
//station.adwAutoTip[1].03	:=	fbVTCPressCyl_4.xAutoTip	;
station.adwAutoTip[1].04	:=	fbVTCCyl_1.xAutoTip	;
station.adwAutoTip[1].05	:=	fbVTCCyl_2.xAutoTip	;

//------------------------------------------------AutoTip Servo--------------------------------
//**************************************
//FOR i:= 1 TO 5 BY 1 DO 
//	IF fbXAxisMove.xMoveAuto[i] THEN
//		fbXAxisMove.iPosNumber := i ;
//	END_IF
//	IF fbYAxisMove.xMoveAuto[i] THEN
//		fbYAxisMove.iPosNumber := i ;
//	END_IF
//END_FOR
//IF fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  AND  arTonDelay[9].Q  THEN 
//		IF fbXAxisMove.iPosNumber=1 AND NOT fbXAxisMove.xMoveInPos[1] THEN station.adwAutoTip[1].10:=TRUE; END_IF//轴伺服自动时位置不在位置1	
//		IF fbXAxisMove.iPosNumber=2 AND NOT fbXAxisMove.xMoveInPos[2] THEN station.adwAutoTip[1].11:=TRUE; END_IF//轴伺服自动时位置不在位置2	
//		IF fbXAxisMove.iPosNumber=3 AND NOT fbXAxisMove.xMoveInPos[3] THEN station.adwAutoTip[1].12:=TRUE; END_IF//轴伺服自动时位置不在位置3	
//		IF fbXAxisMove.iPosNumber=4 AND NOT fbXAxisMove.xMoveInPos[4] THEN station.adwAutoTip[1].13:=TRUE; END_IF//轴伺服自动时位置不在位置4	
//		IF fbXAxisMove.iPosNumber=5 AND NOT fbXAxisMove.xMoveInPos[5] THEN station.adwAutoTip[1].14:=TRUE; END_IF//轴伺服自动时位置不在位置5	
//END_IF
//IF fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  AND  arTonDelay[10].Q  THEN 		
//		
//		IF fbYAxisMove.iPosNumber=1 AND NOT fbYAxisMove.xMoveInPos[1] THEN station.adwAutoTip[1].15:=TRUE; END_IF//轴伺服自动时位置不在位置1	
//		IF fbYAxisMove.iPosNumber=2 AND NOT fbYAxisMove.xMoveInPos[2] THEN station.adwAutoTip[1].16:=TRUE; END_IF//轴伺服自动时位置不在位置2	
//		IF fbYAxisMove.iPosNumber=3 AND NOT fbYAxisMove.xMoveInPos[3] THEN station.adwAutoTip[1].17:=TRUE; END_IF//轴伺服自动时位置不在位置3	
//		IF fbYAxisMove.iPosNumber=4 AND NOT fbYAxisMove.xMoveInPos[4] THEN station.adwAutoTip[1].18:=TRUE; END_IF//轴伺服自动时位置不在位置4	
//		IF fbYAxisMove.iPosNumber=5 AND NOT fbYAxisMove.xMoveInPos[5] THEN station.adwAutoTip[1].19:=TRUE; END_IF//轴伺服自动时位置不在位置5	
//END_IF
//]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipManual" Id="{561a1c1d-e3fd-42a1-bd5f-597305c6c45d}">
      <Implementation>
        <ST><![CDATA[//--------------------------------------------ManualTip------------------------------------------------------

//-------------------------------------------气缸提示---------------------------------------------------------


//-------------------------------------------伺服提示--------------------------------------------------

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Z_Output" Id="{f73574ac-bbd1-4517-bd7c-1b8c56ce8f05}">
      <Implementation>
        <ST><![CDATA[(**************************气缸输出********************************)
QxS01VTCPressCyl_1WP	:=FALSE;//(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_1.xWP_Valve	) OR
											 			//( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylWPValve[1]);
QxS01VTCPressCyl_1HP	:=	(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_1.xHP_Valve	) OR
												 ( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylHPValve[1]);
QxS01VTCPressCyl_2WP	:=FALSE;//	(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_2.xWP_Valve	) OR
															// ( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylWPValve[2]);
QxS01VTCPressCyl_2HP	:=	(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_2.xHP_Valve	) OR
												 ( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylHPValve[2]);
QxS01VTCPressCyl_3WP	:=FALSE;//		(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_3.xWP_Valve	) OR
												//	( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylWPValve[3]);
QxS01VTCPressCyl_3HP	:=	(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_3.xHP_Valve	) OR
												 ( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylHPValve[3]);
QxS01VTCPressCyl_4WP	:=FALSE;//			(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_4.xWP_Valve	) OR
												//( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylWPValve[4]);
QxS01VTCPressCyl_4HP	:=		(NOT  fbMachine[1].xAutoMode AND NOT station.xSingleRunning  AND    fbVTCPressCyl_4.xHP_Valve	) OR
												 ( (fbMachine[1].xAutoMode OR  station.xsingleRunning ) AND  	fbFlowLine.arQVTCCylHPValve[4]);
QxS01VTCCyl_1WP	:=	fbVTCCyl_1.xWP_Valve	;
QxS01VTCCyl_1HP	:=	fbVTCCyl_1.xHP_Valve	;
QxS01VTCCyl_2WP	:=	fbVTCCyl_2.xWP_Valve	;
QxS01VTCCyl_2HP	:=	fbVTCCyl_2.xHP_Valve	;
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="S01_Loading">
      <LineId Id="266" Count="2" />
      <LineId Id="279" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="269" Count="8" />
      <LineId Id="107" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.A_Input">
      <LineId Id="44" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="70" Count="3" />
      <LineId Id="75" Count="1" />
      <LineId Id="74" Count="0" />
      <LineId Id="77" Count="2" />
      <LineId Id="93" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="98" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.Alarm">
      <LineId Id="175" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="190" Count="1" />
      <LineId Id="199" Count="1" />
      <LineId Id="220" Count="19" />
      <LineId Id="194" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="240" Count="3" />
      <LineId Id="245" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="181" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.Delay">
      <LineId Id="64" Count="10" />
      <LineId Id="44" Count="13" />
      <LineId Id="40" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.FlowAuto">
      <LineId Id="1323" Count="2" />
      <LineId Id="1327" Count="2" />
      <LineId Id="3655" Count="0" />
      <LineId Id="3666" Count="0" />
      <LineId Id="3660" Count="0" />
      <LineId Id="3668" Count="0" />
      <LineId Id="3654" Count="0" />
      <LineId Id="1331" Count="2" />
      <LineId Id="1335" Count="6" />
      <LineId Id="1343" Count="9" />
      <LineId Id="1573" Count="0" />
      <LineId Id="1943" Count="0" />
      <LineId Id="3519" Count="1" />
      <LineId Id="3518" Count="0" />
      <LineId Id="3483" Count="1" />
      <LineId Id="3155" Count="3" />
      <LineId Id="1711" Count="0" />
      <LineId Id="1672" Count="0" />
      <LineId Id="3839" Count="1" />
      <LineId Id="3883" Count="0" />
      <LineId Id="3885" Count="0" />
      <LineId Id="3884" Count="0" />
      <LineId Id="3842" Count="1" />
      <LineId Id="3841" Count="0" />
      <LineId Id="1894" Count="0" />
      <LineId Id="3059" Count="0" />
      <LineId Id="3062" Count="0" />
      <LineId Id="2409" Count="2" />
      <LineId Id="3921" Count="7" />
      <LineId Id="3761" Count="0" />
      <LineId Id="3807" Count="1" />
      <LineId Id="3814" Count="0" />
      <LineId Id="3816" Count="0" />
      <LineId Id="3819" Count="0" />
      <LineId Id="3818" Count="0" />
      <LineId Id="1915" Count="0" />
      <LineId Id="3755" Count="0" />
      <LineId Id="1932" Count="0" />
      <LineId Id="1917" Count="2" />
      <LineId Id="3704" Count="0" />
      <LineId Id="3752" Count="0" />
      <LineId Id="3705" Count="1" />
      <LineId Id="3751" Count="0" />
      <LineId Id="3753" Count="0" />
      <LineId Id="3756" Count="0" />
      <LineId Id="3758" Count="0" />
      <LineId Id="3757" Count="0" />
      <LineId Id="3674" Count="0" />
      <LineId Id="3731" Count="3" />
      <LineId Id="3736" Count="0" />
      <LineId Id="1887" Count="0" />
      <LineId Id="2435" Count="0" />
      <LineId Id="2887" Count="0" />
      <LineId Id="3747" Count="0" />
      <LineId Id="3743" Count="0" />
      <LineId Id="3749" Count="1" />
      <LineId Id="3748" Count="0" />
      <LineId Id="1931" Count="0" />
      <LineId Id="2877" Count="0" />
      <LineId Id="3821" Count="0" />
      <LineId Id="2882" Count="0" />
      <LineId Id="3738" Count="0" />
      <LineId Id="3742" Count="0" />
      <LineId Id="3741" Count="0" />
      <LineId Id="3739" Count="0" />
      <LineId Id="3657" Count="0" />
      <LineId Id="2881" Count="0" />
      <LineId Id="2042" Count="0" />
      <LineId Id="3656" Count="0" />
      <LineId Id="2324" Count="0" />
      <LineId Id="2355" Count="1" />
      <LineId Id="2359" Count="0" />
      <LineId Id="2362" Count="0" />
      <LineId Id="2828" Count="1" />
      <LineId Id="2360" Count="0" />
      <LineId Id="2357" Count="0" />
      <LineId Id="2320" Count="0" />
      <LineId Id="2325" Count="0" />
      <LineId Id="2333" Count="1" />
      <LineId Id="3646" Count="1" />
      <LineId Id="2335" Count="2" />
      <LineId Id="3648" Count="1" />
      <LineId Id="2338" Count="2" />
      <LineId Id="3650" Count="1" />
      <LineId Id="2341" Count="2" />
      <LineId Id="3652" Count="1" />
      <LineId Id="2332" Count="0" />
      <LineId Id="2328" Count="0" />
      <LineId Id="2327" Count="0" />
      <LineId Id="2330" Count="0" />
      <LineId Id="2437" Count="2" />
      <LineId Id="2052" Count="1" />
      <LineId Id="3762" Count="0" />
      <LineId Id="3726" Count="0" />
      <LineId Id="3730" Count="0" />
      <LineId Id="3722" Count="0" />
      <LineId Id="3721" Count="0" />
      <LineId Id="2441" Count="0" />
      <LineId Id="2452" Count="0" />
      <LineId Id="2471" Count="0" />
      <LineId Id="2476" Count="0" />
      <LineId Id="2479" Count="0" />
      <LineId Id="2007" Count="0" />
      <LineId Id="2056" Count="1" />
      <LineId Id="3594" Count="1" />
      <LineId Id="2058" Count="1" />
      <LineId Id="3596" Count="1" />
      <LineId Id="3599" Count="0" />
      <LineId Id="3598" Count="0" />
      <LineId Id="2060" Count="0" />
      <LineId Id="2008" Count="0" />
      <LineId Id="3576" Count="0" />
      <LineId Id="2061" Count="3" />
      <LineId Id="2067" Count="1" />
      <LineId Id="2066" Count="0" />
      <LineId Id="2009" Count="0" />
      <LineId Id="2485" Count="0" />
      <LineId Id="2071" Count="0" />
      <LineId Id="2084" Count="1" />
      <LineId Id="2860" Count="1" />
      <LineId Id="2073" Count="0" />
      <LineId Id="2363" Count="0" />
      <LineId Id="2074" Count="0" />
      <LineId Id="2089" Count="0" />
      <LineId Id="2075" Count="0" />
      <LineId Id="2087" Count="0" />
      <LineId Id="2080" Count="0" />
      <LineId Id="3663" Count="2" />
      <LineId Id="2012" Count="0" />
      <LineId Id="3929" Count="7" />
      <LineId Id="2770" Count="0" />
      <LineId Id="3100" Count="0" />
      <LineId Id="2988" Count="1" />
      <LineId Id="2986" Count="0" />
      <LineId Id="3099" Count="0" />
      <LineId Id="2524" Count="0" />
      <LineId Id="2532" Count="0" />
      <LineId Id="3383" Count="0" />
      <LineId Id="3441" Count="0" />
      <LineId Id="3607" Count="0" />
      <LineId Id="3609" Count="0" />
      <LineId Id="3611" Count="0" />
      <LineId Id="3622" Count="0" />
      <LineId Id="3630" Count="1" />
      <LineId Id="3623" Count="0" />
      <LineId Id="3612" Count="0" />
      <LineId Id="3617" Count="0" />
      <LineId Id="3624" Count="0" />
      <LineId Id="3633" Count="6" />
      <LineId Id="3629" Count="0" />
      <LineId Id="3613" Count="0" />
      <LineId Id="3641" Count="0" />
      <LineId Id="3643" Count="1" />
      <LineId Id="3387" Count="0" />
      <LineId Id="3401" Count="0" />
      <LineId Id="3388" Count="2" />
      <LineId Id="3381" Count="0" />
      <LineId Id="3431" Count="0" />
      <LineId Id="3439" Count="0" />
      <LineId Id="3438" Count="0" />
      <LineId Id="3398" Count="0" />
      <LineId Id="3406" Count="4" />
      <LineId Id="3412" Count="1" />
      <LineId Id="3600" Count="0" />
      <LineId Id="3512" Count="0" />
      <LineId Id="3601" Count="0" />
      <LineId Id="3513" Count="0" />
      <LineId Id="3440" Count="0" />
      <LineId Id="2014" Count="0" />
      <LineId Id="3420" Count="4" />
      <LineId Id="3426" Count="1" />
      <LineId Id="3602" Count="0" />
      <LineId Id="3514" Count="0" />
      <LineId Id="3603" Count="0" />
      <LineId Id="3515" Count="0" />
      <LineId Id="3414" Count="0" />
      <LineId Id="2143" Count="0" />
      <LineId Id="3001" Count="0" />
      <LineId Id="2211" Count="0" />
      <LineId Id="2832" Count="0" />
      <LineId Id="2836" Count="0" />
      <LineId Id="2840" Count="1" />
      <LineId Id="2855" Count="0" />
      <LineId Id="2842" Count="0" />
      <LineId Id="2856" Count="0" />
      <LineId Id="2838" Count="0" />
      <LineId Id="3053" Count="4" />
      <LineId Id="3052" Count="0" />
      <LineId Id="3681" Count="0" />
      <LineId Id="3683" Count="0" />
      <LineId Id="3694" Count="0" />
      <LineId Id="3700" Count="0" />
      <LineId Id="3711" Count="0" />
      <LineId Id="3784" Count="0" />
      <LineId Id="3510" Count="0" />
      <LineId Id="2592" Count="0" />
      <LineId Id="3094" Count="0" />
      <LineId Id="2599" Count="0" />
      <LineId Id="3533" Count="0" />
      <LineId Id="3527" Count="0" />
      <LineId Id="3542" Count="2" />
      <LineId Id="3534" Count="0" />
      <LineId Id="2602" Count="0" />
      <LineId Id="3555" Count="0" />
      <LineId Id="3557" Count="4" />
      <LineId Id="3570" Count="0" />
      <LineId Id="3794" Count="0" />
      <LineId Id="3799" Count="0" />
      <LineId Id="3822" Count="4" />
      <LineId Id="2598" Count="0" />
      <LineId Id="2621" Count="0" />
      <LineId Id="3248" Count="2" />
      <LineId Id="2628" Count="0" />
      <LineId Id="2630" Count="0" />
      <LineId Id="3245" Count="2" />
      <LineId Id="3244" Count="0" />
      <LineId Id="2618" Count="0" />
      <LineId Id="2620" Count="0" />
      <LineId Id="3095" Count="0" />
      <LineId Id="3267" Count="0" />
      <LineId Id="2641" Count="0" />
      <LineId Id="3256" Count="3" />
      <LineId Id="2645" Count="0" />
      <LineId Id="2647" Count="0" />
      <LineId Id="3252" Count="3" />
      <LineId Id="3251" Count="0" />
      <LineId Id="2619" Count="0" />
      <LineId Id="3268" Count="2" />
      <LineId Id="2583" Count="0" />
      <LineId Id="3096" Count="0" />
      <LineId Id="2774" Count="0" />
      <LineId Id="2669" Count="0" />
      <LineId Id="2681" Count="0" />
      <LineId Id="2680" Count="0" />
      <LineId Id="2662" Count="0" />
      <LineId Id="2695" Count="0" />
      <LineId Id="3264" Count="2" />
      <LineId Id="2699" Count="0" />
      <LineId Id="2701" Count="0" />
      <LineId Id="3261" Count="2" />
      <LineId Id="3260" Count="0" />
      <LineId Id="2584" Count="0" />
      <LineId Id="3464" Count="10" />
      <LineId Id="3126" Count="10" />
      <LineId Id="3908" Count="0" />
      <LineId Id="3911" Count="1" />
      <LineId Id="3910" Count="0" />
      <LineId Id="3137" Count="1" />
      <LineId Id="3140" Count="2" />
      <LineId Id="3475" Count="0" />
      <LineId Id="3487" Count="1" />
      <LineId Id="3480" Count="1" />
      <LineId Id="3112" Count="2" />
      <LineId Id="2845" Count="0" />
      <LineId Id="2848" Count="0" />
      <LineId Id="2851" Count="0" />
      <LineId Id="2850" Count="0" />
      <LineId Id="2847" Count="0" />
      <LineId Id="2585" Count="0" />
      <LineId Id="2708" Count="1" />
      <LineId Id="2586" Count="1" />
      <LineId Id="2710" Count="0" />
      <LineId Id="2713" Count="0" />
      <LineId Id="2715" Count="1" />
      <LineId Id="2712" Count="0" />
      <LineId Id="2267" Count="0" />
      <LineId Id="2148" Count="0" />
      <LineId Id="2274" Count="0" />
      <LineId Id="3238" Count="0" />
      <LineId Id="2299" Count="0" />
      <LineId Id="3098" Count="0" />
      <LineId Id="3102" Count="0" />
      <LineId Id="3714" Count="1" />
      <LineId Id="2288" Count="0" />
      <LineId Id="3713" Count="0" />
      <LineId Id="1395" Count="0" />
      <LineId Id="1397" Count="2" />
      <LineId Id="2297" Count="0" />
      <LineId Id="3828" Count="0" />
      <LineId Id="3833" Count="0" />
      <LineId Id="3845" Count="0" />
      <LineId Id="3894" Count="1" />
      <LineId Id="3899" Count="1" />
      <LineId Id="3907" Count="0" />
      <LineId Id="3905" Count="1" />
      <LineId Id="3901" Count="1" />
      <LineId Id="3896" Count="1" />
      <LineId Id="3892" Count="0" />
      <LineId Id="3838" Count="0" />
      <LineId Id="3846" Count="1" />
      <LineId Id="3849" Count="2" />
      <LineId Id="3878" Count="0" />
      <LineId Id="3852" Count="5" />
      <LineId Id="3879" Count="0" />
      <LineId Id="3858" Count="7" />
      <LineId Id="3880" Count="0" />
      <LineId Id="3866" Count="11" />
      <LineId Id="3886" Count="0" />
      <LineId Id="3881" Count="0" />
      <LineId Id="3844" Count="0" />
      <LineId Id="3831" Count="0" />
      <LineId Id="3201" Count="0" />
      <LineId Id="3829" Count="1" />
      <LineId Id="1401" Count="4" />
      <LineId Id="1410" Count="1" />
      <LineId Id="1105" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.FlowAuto_1">
      <LineId Id="1323" Count="2" />
      <LineId Id="1327" Count="2" />
      <LineId Id="3655" Count="0" />
      <LineId Id="3666" Count="0" />
      <LineId Id="3660" Count="0" />
      <LineId Id="3668" Count="0" />
      <LineId Id="3654" Count="0" />
      <LineId Id="1331" Count="2" />
      <LineId Id="1335" Count="6" />
      <LineId Id="1343" Count="9" />
      <LineId Id="1573" Count="0" />
      <LineId Id="1943" Count="0" />
      <LineId Id="3519" Count="1" />
      <LineId Id="3518" Count="0" />
      <LineId Id="3483" Count="1" />
      <LineId Id="3155" Count="3" />
      <LineId Id="1711" Count="0" />
      <LineId Id="1672" Count="0" />
      <LineId Id="3839" Count="1" />
      <LineId Id="3883" Count="0" />
      <LineId Id="3885" Count="0" />
      <LineId Id="3884" Count="0" />
      <LineId Id="3842" Count="1" />
      <LineId Id="3841" Count="0" />
      <LineId Id="1894" Count="0" />
      <LineId Id="3059" Count="0" />
      <LineId Id="3062" Count="0" />
      <LineId Id="2409" Count="2" />
      <LineId Id="3921" Count="7" />
      <LineId Id="3761" Count="0" />
      <LineId Id="3807" Count="1" />
      <LineId Id="3814" Count="0" />
      <LineId Id="3816" Count="0" />
      <LineId Id="3819" Count="0" />
      <LineId Id="3818" Count="0" />
      <LineId Id="1915" Count="0" />
      <LineId Id="3755" Count="0" />
      <LineId Id="1932" Count="0" />
      <LineId Id="1917" Count="2" />
      <LineId Id="3704" Count="0" />
      <LineId Id="3752" Count="0" />
      <LineId Id="3705" Count="1" />
      <LineId Id="3751" Count="0" />
      <LineId Id="3753" Count="0" />
      <LineId Id="3756" Count="0" />
      <LineId Id="3758" Count="0" />
      <LineId Id="3757" Count="0" />
      <LineId Id="3674" Count="0" />
      <LineId Id="3731" Count="3" />
      <LineId Id="3736" Count="0" />
      <LineId Id="1887" Count="0" />
      <LineId Id="2435" Count="0" />
      <LineId Id="2887" Count="0" />
      <LineId Id="3747" Count="0" />
      <LineId Id="3743" Count="0" />
      <LineId Id="3749" Count="1" />
      <LineId Id="3748" Count="0" />
      <LineId Id="1931" Count="0" />
      <LineId Id="2877" Count="0" />
      <LineId Id="3821" Count="0" />
      <LineId Id="2882" Count="0" />
      <LineId Id="3738" Count="0" />
      <LineId Id="3742" Count="0" />
      <LineId Id="3741" Count="0" />
      <LineId Id="3739" Count="0" />
      <LineId Id="3657" Count="0" />
      <LineId Id="2881" Count="0" />
      <LineId Id="2042" Count="0" />
      <LineId Id="3656" Count="0" />
      <LineId Id="2324" Count="0" />
      <LineId Id="2355" Count="1" />
      <LineId Id="2359" Count="0" />
      <LineId Id="2362" Count="0" />
      <LineId Id="2828" Count="1" />
      <LineId Id="2360" Count="0" />
      <LineId Id="2357" Count="0" />
      <LineId Id="2320" Count="0" />
      <LineId Id="2325" Count="0" />
      <LineId Id="2333" Count="1" />
      <LineId Id="3646" Count="1" />
      <LineId Id="2335" Count="2" />
      <LineId Id="3648" Count="1" />
      <LineId Id="2338" Count="2" />
      <LineId Id="3650" Count="1" />
      <LineId Id="2341" Count="2" />
      <LineId Id="3652" Count="1" />
      <LineId Id="2332" Count="0" />
      <LineId Id="2328" Count="0" />
      <LineId Id="2327" Count="0" />
      <LineId Id="2330" Count="0" />
      <LineId Id="2437" Count="2" />
      <LineId Id="2052" Count="1" />
      <LineId Id="3762" Count="0" />
      <LineId Id="3726" Count="0" />
      <LineId Id="3937" Count="0" />
      <LineId Id="3730" Count="0" />
      <LineId Id="3722" Count="0" />
      <LineId Id="3721" Count="0" />
      <LineId Id="2441" Count="0" />
      <LineId Id="2452" Count="0" />
      <LineId Id="2471" Count="0" />
      <LineId Id="2476" Count="0" />
      <LineId Id="2479" Count="0" />
      <LineId Id="2007" Count="0" />
      <LineId Id="2056" Count="1" />
      <LineId Id="3594" Count="1" />
      <LineId Id="2008" Count="0" />
      <LineId Id="3946" Count="0" />
      <LineId Id="3948" Count="0" />
      <LineId Id="3947" Count="0" />
      <LineId Id="3576" Count="0" />
      <LineId Id="3941" Count="4" />
      <LineId Id="3940" Count="0" />
      <LineId Id="2061" Count="3" />
      <LineId Id="2067" Count="1" />
      <LineId Id="2066" Count="0" />
      <LineId Id="2009" Count="0" />
      <LineId Id="2485" Count="0" />
      <LineId Id="2860" Count="1" />
      <LineId Id="3952" Count="2" />
      <LineId Id="2080" Count="0" />
      <LineId Id="3951" Count="0" />
      <LineId Id="3663" Count="0" />
      <LineId Id="3956" Count="1" />
      <LineId Id="3959" Count="0" />
      <LineId Id="3958" Count="0" />
      <LineId Id="3955" Count="0" />
      <LineId Id="2012" Count="0" />
      <LineId Id="3929" Count="7" />
      <LineId Id="2770" Count="0" />
      <LineId Id="3100" Count="0" />
      <LineId Id="2988" Count="1" />
      <LineId Id="2986" Count="0" />
      <LineId Id="3099" Count="0" />
      <LineId Id="2524" Count="0" />
      <LineId Id="2532" Count="0" />
      <LineId Id="3383" Count="0" />
      <LineId Id="3441" Count="0" />
      <LineId Id="3607" Count="0" />
      <LineId Id="3609" Count="0" />
      <LineId Id="3611" Count="0" />
      <LineId Id="3622" Count="0" />
      <LineId Id="3630" Count="1" />
      <LineId Id="3623" Count="0" />
      <LineId Id="3612" Count="0" />
      <LineId Id="3617" Count="0" />
      <LineId Id="3624" Count="0" />
      <LineId Id="3633" Count="6" />
      <LineId Id="3629" Count="0" />
      <LineId Id="3613" Count="0" />
      <LineId Id="3641" Count="0" />
      <LineId Id="3643" Count="1" />
      <LineId Id="3387" Count="0" />
      <LineId Id="3401" Count="0" />
      <LineId Id="3388" Count="2" />
      <LineId Id="3381" Count="0" />
      <LineId Id="3431" Count="0" />
      <LineId Id="3439" Count="0" />
      <LineId Id="3438" Count="0" />
      <LineId Id="3398" Count="0" />
      <LineId Id="3406" Count="3" />
      <LineId Id="3412" Count="1" />
      <LineId Id="3600" Count="0" />
      <LineId Id="3512" Count="0" />
      <LineId Id="3601" Count="0" />
      <LineId Id="3513" Count="0" />
      <LineId Id="3440" Count="0" />
      <LineId Id="3964" Count="0" />
      <LineId Id="3968" Count="1" />
      <LineId Id="3965" Count="0" />
      <LineId Id="2014" Count="0" />
      <LineId Id="3420" Count="1" />
      <LineId Id="3960" Count="2" />
      <LineId Id="3427" Count="0" />
      <LineId Id="3602" Count="0" />
      <LineId Id="3514" Count="0" />
      <LineId Id="3603" Count="0" />
      <LineId Id="3515" Count="0" />
      <LineId Id="3414" Count="0" />
      <LineId Id="3971" Count="2" />
      <LineId Id="3970" Count="0" />
      <LineId Id="2143" Count="0" />
      <LineId Id="3001" Count="0" />
      <LineId Id="2211" Count="0" />
      <LineId Id="2832" Count="0" />
      <LineId Id="2836" Count="0" />
      <LineId Id="2840" Count="1" />
      <LineId Id="2855" Count="0" />
      <LineId Id="2842" Count="0" />
      <LineId Id="2856" Count="0" />
      <LineId Id="2838" Count="0" />
      <LineId Id="3053" Count="4" />
      <LineId Id="3052" Count="0" />
      <LineId Id="3681" Count="0" />
      <LineId Id="3683" Count="0" />
      <LineId Id="3694" Count="0" />
      <LineId Id="3700" Count="0" />
      <LineId Id="3711" Count="0" />
      <LineId Id="3784" Count="0" />
      <LineId Id="3510" Count="0" />
      <LineId Id="2592" Count="0" />
      <LineId Id="3094" Count="0" />
      <LineId Id="2599" Count="0" />
      <LineId Id="3533" Count="0" />
      <LineId Id="3527" Count="0" />
      <LineId Id="3542" Count="2" />
      <LineId Id="3534" Count="0" />
      <LineId Id="2602" Count="0" />
      <LineId Id="3555" Count="0" />
      <LineId Id="3557" Count="4" />
      <LineId Id="3570" Count="0" />
      <LineId Id="3794" Count="0" />
      <LineId Id="3799" Count="0" />
      <LineId Id="3822" Count="4" />
      <LineId Id="2598" Count="0" />
      <LineId Id="2621" Count="0" />
      <LineId Id="3248" Count="2" />
      <LineId Id="2628" Count="0" />
      <LineId Id="2630" Count="0" />
      <LineId Id="3245" Count="2" />
      <LineId Id="3244" Count="0" />
      <LineId Id="2618" Count="0" />
      <LineId Id="2620" Count="0" />
      <LineId Id="3095" Count="0" />
      <LineId Id="2641" Count="0" />
      <LineId Id="3256" Count="1" />
      <LineId Id="3259" Count="0" />
      <LineId Id="2645" Count="0" />
      <LineId Id="2647" Count="0" />
      <LineId Id="3252" Count="0" />
      <LineId Id="3977" Count="1" />
      <LineId Id="3251" Count="0" />
      <LineId Id="2619" Count="0" />
      <LineId Id="3975" Count="0" />
      <LineId Id="3979" Count="0" />
      <LineId Id="3976" Count="0" />
      <LineId Id="3270" Count="0" />
      <LineId Id="3982" Count="2" />
      <LineId Id="3981" Count="0" />
      <LineId Id="2583" Count="0" />
      <LineId Id="3096" Count="0" />
      <LineId Id="2774" Count="0" />
      <LineId Id="2669" Count="0" />
      <LineId Id="2681" Count="0" />
      <LineId Id="2680" Count="0" />
      <LineId Id="2662" Count="0" />
      <LineId Id="2695" Count="0" />
      <LineId Id="3264" Count="2" />
      <LineId Id="2699" Count="0" />
      <LineId Id="2701" Count="0" />
      <LineId Id="3261" Count="2" />
      <LineId Id="3260" Count="0" />
      <LineId Id="2584" Count="0" />
      <LineId Id="3464" Count="10" />
      <LineId Id="3126" Count="10" />
      <LineId Id="3908" Count="0" />
      <LineId Id="3911" Count="1" />
      <LineId Id="3910" Count="0" />
      <LineId Id="3137" Count="1" />
      <LineId Id="3140" Count="2" />
      <LineId Id="3475" Count="0" />
      <LineId Id="3487" Count="1" />
      <LineId Id="3480" Count="1" />
      <LineId Id="3112" Count="2" />
      <LineId Id="2845" Count="0" />
      <LineId Id="2848" Count="0" />
      <LineId Id="2851" Count="0" />
      <LineId Id="2850" Count="0" />
      <LineId Id="2847" Count="0" />
      <LineId Id="2585" Count="0" />
      <LineId Id="2708" Count="1" />
      <LineId Id="2586" Count="1" />
      <LineId Id="2710" Count="0" />
      <LineId Id="2713" Count="0" />
      <LineId Id="2715" Count="1" />
      <LineId Id="2712" Count="0" />
      <LineId Id="2267" Count="0" />
      <LineId Id="2148" Count="0" />
      <LineId Id="2274" Count="0" />
      <LineId Id="3238" Count="0" />
      <LineId Id="2299" Count="0" />
      <LineId Id="3098" Count="0" />
      <LineId Id="3102" Count="0" />
      <LineId Id="3714" Count="1" />
      <LineId Id="2288" Count="0" />
      <LineId Id="3713" Count="0" />
      <LineId Id="1395" Count="0" />
      <LineId Id="1397" Count="2" />
      <LineId Id="2297" Count="0" />
      <LineId Id="3828" Count="0" />
      <LineId Id="3833" Count="0" />
      <LineId Id="3845" Count="0" />
      <LineId Id="3894" Count="1" />
      <LineId Id="3899" Count="1" />
      <LineId Id="3907" Count="0" />
      <LineId Id="3905" Count="1" />
      <LineId Id="3901" Count="1" />
      <LineId Id="3896" Count="1" />
      <LineId Id="3892" Count="0" />
      <LineId Id="3838" Count="0" />
      <LineId Id="3846" Count="1" />
      <LineId Id="3849" Count="2" />
      <LineId Id="3878" Count="0" />
      <LineId Id="3852" Count="1" />
      <LineId Id="3986" Count="20" />
      <LineId Id="3985" Count="0" />
      <LineId Id="3870" Count="7" />
      <LineId Id="3886" Count="0" />
      <LineId Id="3881" Count="0" />
      <LineId Id="3844" Count="0" />
      <LineId Id="3831" Count="0" />
      <LineId Id="3201" Count="0" />
      <LineId Id="3829" Count="1" />
      <LineId Id="1401" Count="4" />
      <LineId Id="1410" Count="1" />
      <LineId Id="1105" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.FlowInit">
      <LineId Id="437" Count="1" />
      <LineId Id="440" Count="8" />
      <LineId Id="635" Count="1" />
      <LineId Id="634" Count="0" />
      <LineId Id="669" Count="1" />
      <LineId Id="672" Count="0" />
      <LineId Id="612" Count="0" />
      <LineId Id="614" Count="0" />
      <LineId Id="674" Count="1" />
      <LineId Id="632" Count="1" />
      <LineId Id="616" Count="0" />
      <LineId Id="615" Count="0" />
      <LineId Id="617" Count="0" />
      <LineId Id="450" Count="0" />
      <LineId Id="532" Count="0" />
      <LineId Id="547" Count="0" />
      <LineId Id="551" Count="0" />
      <LineId Id="548" Count="1" />
      <LineId Id="545" Count="0" />
      <LineId Id="527" Count="1" />
      <LineId Id="592" Count="0" />
      <LineId Id="529" Count="1" />
      <LineId Id="523" Count="1" />
      <LineId Id="594" Count="3" />
      <LineId Id="593" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="622" Count="0" />
      <LineId Id="625" Count="0" />
      <LineId Id="627" Count="0" />
      <LineId Id="629" Count="2" />
      <LineId Id="618" Count="0" />
      <LineId Id="650" Count="0" />
      <LineId Id="652" Count="0" />
      <LineId Id="656" Count="1" />
      <LineId Id="659" Count="2" />
      <LineId Id="619" Count="0" />
      <LineId Id="637" Count="0" />
      <LineId Id="663" Count="5" />
      <LineId Id="485" Count="0" />
      <LineId Id="507" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="466" Count="4" />
      <LineId Id="436" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.FlowInit_1">
      <LineId Id="437" Count="1" />
      <LineId Id="440" Count="8" />
      <LineId Id="635" Count="1" />
      <LineId Id="634" Count="0" />
      <LineId Id="669" Count="1" />
      <LineId Id="672" Count="0" />
      <LineId Id="612" Count="0" />
      <LineId Id="614" Count="0" />
      <LineId Id="674" Count="1" />
      <LineId Id="632" Count="1" />
      <LineId Id="616" Count="0" />
      <LineId Id="615" Count="0" />
      <LineId Id="617" Count="0" />
      <LineId Id="450" Count="0" />
      <LineId Id="532" Count="0" />
      <LineId Id="547" Count="0" />
      <LineId Id="551" Count="0" />
      <LineId Id="548" Count="1" />
      <LineId Id="545" Count="0" />
      <LineId Id="527" Count="1" />
      <LineId Id="592" Count="0" />
      <LineId Id="529" Count="1" />
      <LineId Id="523" Count="1" />
      <LineId Id="594" Count="3" />
      <LineId Id="593" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="677" Count="1" />
      <LineId Id="618" Count="0" />
      <LineId Id="679" Count="4" />
      <LineId Id="685" Count="0" />
      <LineId Id="684" Count="0" />
      <LineId Id="650" Count="0" />
      <LineId Id="686" Count="3" />
      <LineId Id="619" Count="0" />
      <LineId Id="690" Count="0" />
      <LineId Id="692" Count="2" />
      <LineId Id="691" Count="0" />
      <LineId Id="637" Count="0" />
      <LineId Id="663" Count="5" />
      <LineId Id="485" Count="0" />
      <LineId Id="507" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="466" Count="4" />
      <LineId Id="436" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.FlowLine">
      <LineId Id="34" Count="0" />
      <LineId Id="15" Count="4" />
      <LineId Id="42" Count="0" />
      <LineId Id="20" Count="5" />
      <LineId Id="44" Count="0" />
      <LineId Id="26" Count="6" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.General">
      <LineId Id="601" Count="0" />
      <LineId Id="603" Count="0" />
      <LineId Id="606" Count="0" />
      <LineId Id="509" Count="0" />
      <LineId Id="604" Count="0" />
      <LineId Id="608" Count="1" />
      <LineId Id="607" Count="0" />
      <LineId Id="610" Count="0" />
      <LineId Id="616" Count="1" />
      <LineId Id="664" Count="0" />
      <LineId Id="618" Count="0" />
      <LineId Id="622" Count="0" />
      <LineId Id="665" Count="0" />
      <LineId Id="623" Count="1" />
      <LineId Id="613" Count="1" />
      <LineId Id="666" Count="0" />
      <LineId Id="627" Count="0" />
      <LineId Id="626" Count="0" />
      <LineId Id="615" Count="0" />
      <LineId Id="628" Count="0" />
      <LineId Id="667" Count="0" />
      <LineId Id="629" Count="0" />
      <LineId Id="668" Count="0" />
      <LineId Id="630" Count="0" />
      <LineId Id="612" Count="0" />
      <LineId Id="632" Count="0" />
      <LineId Id="634" Count="0" />
      <LineId Id="670" Count="0" />
      <LineId Id="635" Count="0" />
      <LineId Id="633" Count="0" />
      <LineId Id="638" Count="1" />
      <LineId Id="671" Count="0" />
      <LineId Id="640" Count="0" />
      <LineId Id="672" Count="0" />
      <LineId Id="641" Count="3" />
      <LineId Id="673" Count="0" />
      <LineId Id="645" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="647" Count="1" />
      <LineId Id="674" Count="0" />
      <LineId Id="649" Count="0" />
      <LineId Id="675" Count="0" />
      <LineId Id="650" Count="3" />
      <LineId Id="677" Count="0" />
      <LineId Id="654" Count="3" />
      <LineId Id="678" Count="0" />
      <LineId Id="658" Count="0" />
      <LineId Id="679" Count="0" />
      <LineId Id="659" Count="3" />
      <LineId Id="681" Count="0" />
      <LineId Id="663" Count="0" />
      <LineId Id="646" Count="0" />
      <LineId Id="637" Count="0" />
      <LineId Id="611" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.ILC">
      <LineId Id="234" Count="4" />
      <LineId Id="312" Count="11" />
      <LineId Id="290" Count="0" />
      <LineId Id="269" Count="1" />
      <LineId Id="295" Count="0" />
      <LineId Id="324" Count="5" />
      <LineId Id="348" Count="0" />
      <LineId Id="332" Count="5" />
      <LineId Id="262" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="349" Count="0" />
      <LineId Id="344" Count="0" />
      <LineId Id="341" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.TipAuto">
      <LineId Id="121" Count="0" />
      <LineId Id="197" Count="5" />
      <LineId Id="123" Count="2" />
      <LineId Id="203" Count="7" />
      <LineId Id="131" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="133" Count="3" />
      <LineId Id="212" Count="0" />
      <LineId Id="167" Count="1" />
      <LineId Id="170" Count="3" />
      <LineId Id="169" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="105" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.TipManual">
      <LineId Id="137" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="262" Count="2" />
      <LineId Id="156" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="S01_Loading.Z_Output">
      <LineId Id="2" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="41" Count="2" />
      <LineId Id="76" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
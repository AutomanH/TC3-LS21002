<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="S03_LidChecking" Id="{77a9bd2b-7da1-438e-b565-cc8f27eee63e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM S03_LidChecking
VAR
	//工站
	station					: REFERENCE TO FB_Station:=fbstation[3];
	//气缸
	fbHOZAdjustCyl_1	:REFERENCE TO FB_Cylinder:=fbCylinder[12];	//	上层水平调整气缸1（小）
	fbHOZAdjustCyl_2	:REFERENCE TO FB_Cylinder:=fbCylinder[13];	//	上层水平调整气缸2（小）
	fbHOZAdjustCyl_3	:REFERENCE TO FB_Cylinder:=fbCylinder[14];	//	下层水平调整气缸1（小）
	fbHOZAdjustCyl_4	:REFERENCE TO FB_Cylinder:=fbCylinder[15];	//	下层水平调整气缸2（小）
	fbHOZAdjustCyl_5	:REFERENCE TO FB_Cylinder:=fbCylinder[16];	//	上层水平调整气缸1（大）
	fbHOZAdjustCyl_6	:REFERENCE TO FB_Cylinder:=fbCylinder[17];	//	上层水平调整气缸2（大）
	fbHOZAdjustCyl_7	:REFERENCE TO FB_Cylinder:=fbCylinder[18];	//	下层水平调整气缸1（大）
	fbHOZAdjustCyl_8	:REFERENCE TO FB_Cylinder:=fbCylinder[19];	//	下层水平调整气缸2（大）
	//伺服
	fbXAxisMove	 :REFERENCE TO FB_Axis:=fbAxis[6];	//	相机检测工位X轴伺服
	fbYAxisMove	 :REFERENCE TO FB_Axis:=fbAxis[7];	//	相机检测工位Y轴伺服
	fbZAxisMove	 :REFERENCE TO FB_Axis:=fbAxis[8];	//	相机检测工位Z轴伺服
	//相机

	
		//延时
		arTonDelay :ARRAY[1..20] OF TON;
	//返回值
		UdiReturnValue :ARRAY[1..20] OF UDINT;
	//本地过程数据
	arProcessDataStation : ARRAY [1..5] OF DUT_MainlineFixture;
	
	i,j,k: INT;
	//循环使用
	i_b_REPEAT:BOOL;
	i_i_Counter:INT;
	//相机拍照结果步骤
	bResultStep:BYTE;
	// 循环计数
	bCounter: BYTE;
	// 临时变量
	_FirstCycle:ARRAY[1..10] OF BOOL;
	them: INT;
	// X轴伺服循环次数
	bXCounter: BYTE;
	// Y轴伺服循环次数
	bYCounter: BYTE;
	// 结束时循环次数
	bEndCounter: INT;
	//相机检测工位检测结果
	arCameraResult:ARRAY[1..5,1..4,1..12] OF INT;
	//过程记录
	tsModuleProcess:ARRAY[1..gc_ModuleProNo] OF DUT_Process;
	xClearModuleProcessDone:BOOL;
	bClearProcessStep	:BYTE;
	// 测试使用，待删
	xtest: BOOL;
	// //待删
	xnext: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Input();
Alarm();
Delay();
FlowAuto();
FlowInit();
General();
ILC();
TipAuto();
TipManual();
Z_Output();]]></ST>
    </Implementation>
    <Action Name="A_Input" Id="{b6530cbb-368d-4144-89d4-ce2dff9991be}">
      <Implementation>
        <ST><![CDATA[//气缸
//S03上层水平调整气缸1(小)
fbHOZAdjustCyl_1.xWP_Sensor	:=	IxS03HOZAdjustCyl_1WP	;
fbHOZAdjustCyl_1.xHP_Sensor	:=	IxS03HOZAdjustCyl_1HP 	;
//	上层水平调整气缸2（小）
fbHOZAdjustCyl_2.xWP_Sensor	:=	IxS03HOZAdjustCyl_2WP ;
fbHOZAdjustCyl_2.xHP_Sensor	:=	IxS03HOZAdjustCyl_2HP 	;

//S03下层水平调整气缸1(小)
fbHOZAdjustCyl_3.xWP_Sensor	:=	IxS03HOZAdjustCyl_5WP	;  
fbHOZAdjustCyl_3.xHP_Sensor	:=	IxS03HOZAdjustCyl_5HP ;
//下层水平调整气缸2（小）
fbHOZAdjustCyl_4.xWP_Sensor	:=	  IxS03HOZAdjustCyl_6WP;  
fbHOZAdjustCyl_4.xHP_Sensor	:=	  IxS03HOZAdjustCyl_6HP;
  
//S03上层水平调整气缸1(大）
fbHOZAdjustCyl_5.xWP_Sensor	:=IxS03HOZAdjustCyl_3WP ;										
fbHOZAdjustCyl_5.xHP_Sensor	:=IxS03HOZAdjustCyl_3HP	; 
//	上层水平调整气缸2（大）
fbHOZAdjustCyl_6.xWP_Sensor	:=IxS03HOZAdjustCyl_4WP ;										
fbHOZAdjustCyl_6.xHP_Sensor	:=IxS03HOZAdjustCyl_4HP	; 

//S03下层水平调整气缸1(大） 									 
fbHOZAdjustCyl_7.xWP_Sensor	:=	IxS03HOZAdjustCyl_7WP	;  
fbHOZAdjustCyl_7.xHP_Sensor	:=	IxS03HOZAdjustCyl_7HP	;  
//	下层水平调整气缸2（大）
fbHOZAdjustCyl_8.xWP_Sensor	:=		IxS03HOZAdjustCyl_8WP;  
fbHOZAdjustCyl_8.xHP_Sensor	:=		IxS03HOZAdjustCyl_8HP;  
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Alarm" Id="{a083e1a6-5ad3-41b2-bcc4-4b4a15412287}">
      <Implementation>
        <ST><![CDATA[station.adwAlarm[1].00	:=	station.xInitTimeout	;//	S03 初始化超时
station.adwAlarm[1].01	:=	fbHOZAdjustCyl_1.xHP_Off 	;//	S03上层水平调整气缸1(小)原点未到位
station.adwAlarm[1].02	:=	fbHOZAdjustCyl_1.xWP_Off 	;//	S03上层水平调整气缸1(小)动点未到位
station.adwAlarm[1].03	:=	fbHOZAdjustCyl_3.xHP_Off	;//	S03下层水平调整气缸1(小)原点未到位
station.adwAlarm[1].04	:=	fbHOZAdjustCyl_3.xWP_Off	;//	S03下层水平调整气缸1(小)动点未到位
station.adwAlarm[1].05	:=	fbHOZAdjustCyl_5.xHP_Off	;//	S03上层水平调整气缸1(大)原点未到位
station.adwAlarm[1].06	:=	fbHOZAdjustCyl_5.xWP_Off	;//	S03上层水平调整气缸1(大)动点未到位
station.adwAlarm[1].07	:=	fbHOZAdjustCyl_7.xHP_Off	;//	S03下层水平调整气缸1(大)原点未到位
station.adwAlarm[1].08	:=	fbHOZAdjustCyl_7.xWP_Off	;//	S03下层水平调整气缸1(大)动点未到位
station.adwAlarm[1].09	:=	fbXAxisMove.xError	;//	S03液位检测X轴伺服报错
station.adwAlarm[1].10	:=	fbXAxisMove.xNotPowerOn	;//	S03液位检测X轴伺服未使能
station.adwAlarm[1].11	:=	fbXAxisMove.xMoveTimeout	;//	S03液位检测X轴伺服移动超时
station.adwAlarm[1].12	:=	fbYAxisMove.xError	;//	S03液位检测Y轴伺服报错
station.adwAlarm[1].13	:=	fbYAxisMove.xNotPowerOn	;//	S03液位检测Y轴伺服未使能
station.adwAlarm[1].14	:=	fbYAxisMove.xMoveTimeout	;//	S03液位检测Y轴伺服移动超时
station.adwAlarm[1].15	:=	fbZAxisMove.xError	;//	S03液位检测Z轴伺服报错
station.adwAlarm[1].16	:=	fbZAxisMove.xNotPowerOn	;//	S03液位检测Z轴伺服未使能
station.adwAlarm[1].17	:=	fbZAxisMove.xMoveTimeout	;//	S03液位检测Z轴伺服移动超时
//station.adwAlarm[1].18	:=	true;//	S03液位检测工位-相机检测超时报警,请检查]]></ST>
      </Implementation>
    </Action>
    <Action Name="Delay" Id="{c3be7dc0-30a5-4d49-9e30-1bde31c71398}">
      <Implementation>
        <ST><![CDATA[arTonDelay[01](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[02](IN:=  , PT:=T#1S , Q=> , ET=> );
arTonDelay[03](IN:=   , PT:=T#1S , Q=> , ET=> );
arTonDelay[04](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[05](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[06](IN:= , PT:=T#0.1S , Q=> , ET=> );
(*arTonDelay[07](IN:= , PT:=T#200MS , Q=> , ET=> );*)//已使用
arTonDelay[08](IN:=NOT fbXAxisMove.xbusy , PT:=T#0.1S , Q=> , ET=> );//TipAuto使用
arTonDelay[09](IN:= NOT fbYAxisMove.xbusy, PT:=T#0.1S , Q=> , ET=> );//TipAuto使用
arTonDelay[10](IN:=NOT fbZAxisMove.xbusy , PT:=T#0.1S , Q=> , ET=> );//TipAuto使用

















]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowAuto" Id="{07295eb9-26b2-4b33-8e3f-eeb1088e4f36}">
      <Implementation>
        <ST><![CDATA[
//-----------------------------------------初始化是否完成判断----------------------------------------------
IF NOT station.xInitDone 
THEN
 	station.iStepAuto:=0;
 	station.xDone:=FALSE;
	station.xRunningOffProhibit := FALSE ;//运行中信号Off禁止
ELSIF station.xRunning // OR (tsModuleProcess[bXCounter+1].xProcessStarted AND NOT tsModuleProcess[bXCounter+1].xProcessCompleted )//相机检测流程
THEN
//-----------------------------------------动作步骤--------------------------------------------------------
CASE station.iStepAuto OF	  
	0: //----Home Step，等待启动----
		IF station.xDisabled 
			AND station.xCanRun 
			AND NOT fbMachine[1].xStopped 
			AND NOT station.xSingleRunning 
		THEN
			station.xDone:=TRUE;
		END_IF
		
		IF  station.xSingleRunning 
			OR station.xCanRun 
			AND NOT station.xDone 
			AND NOT station.xDisabled 
			AND NOT fbMachine[1].xStopped
		THEN
			station.xCycleEnable:=TRUE;
			station.xDone:= FALSE;  
			station.iStepAuto:= 5;
		END_IF		
	 5://复位数据
			FOR i:=1 TO gc_ModuleProNo BY 1 DO
				 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			END_FOR
			station.iStepAuto:= 10;
	 10: //判断产品是否到该工位
		IF  station.xSingleRunning THEN
			station.iStepAuto:= 11;
		ELSE
		 			IF    station.xEmptyDone THEN
										station.iStepAuto:= 999;		
					//清料程序
					ELSIF   arMainlineFixtureData[arCurFixtureNumStation[5]].stProduct.xEmptying AND    
				    	arMainlineFixtureData[arCurFixtureNumStation[6]].stProduct.xEmptying  AND 
							arMainlineFixtureData[arCurFixtureNumStation[7]].xMaterialOnOff AND 
							arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff AND
							arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff  THEN
										 bEndCounter:=1;
										 bCounter:=0;
								 		 station.iStepAuto:= 11;
					ELSIF   arMainlineFixtureData[arCurFixtureNumStation[5]].stProduct.xEmptying AND    
									arMainlineFixtureData[arCurFixtureNumStation[6]].stProduct.xEmptying  AND 
									arMainlineFixtureData[arCurFixtureNumStation[7]].stProduct.xEmptying AND 
									arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xEmptying AND
									arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff  THEN
												 bEndCounter:=2;
												 bCounter:=0;
												 station.iStepAuto:= 11;							 
					ELSIF   arMainlineFixtureData[arCurFixtureNumStation[5]].stProduct.xEmptying AND    
									arMainlineFixtureData[arCurFixtureNumStation[6]].stProduct.xEmptying  AND 
									arMainlineFixtureData[arCurFixtureNumStation[7]].stProduct.xEmptying AND 
									arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xEmptying AND
									arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xEmptying  THEN
												 station.xEmptying:=TRUE;
												 station.iStepAuto:= 1010;														
			//正常程序
				 ELSIF   NOT  arMainlineFixtureData[arCurFixtureNumStation[5]].xMaterialOnOff AND
								 NOT arMainlineFixtureData[arCurFixtureNumStation[6]].xMaterialOnOff  AND 
								 NOT arMainlineFixtureData[arCurFixtureNumStation[7]].xMaterialOnOff AND 
								 NOT	arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff AND
								 NOT arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff  THEN
											bCounter:=0;
											bEndCounter :=0;
											_FirstCycle[6]:=FALSE;
											station.iStepAuto:= 999;
				 ELSIF	 arMainlineFixtureData[arCurFixtureNumStation[5]].xMaterialOnOff AND    
							 arMainlineFixtureData[arCurFixtureNumStation[6]].xMaterialOnOff  AND 
							 NOT arMainlineFixtureData[arCurFixtureNumStation[7]].xMaterialOnOff AND 
							 NOT	arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff AND
							 NOT arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff   THEN
												bCounter:=1;
												bEndCounter :=0;
												station.iStepAuto:= 11;
				ELSIF	arMainlineFixtureData[arCurFixtureNumStation[5]].xMaterialOnOff AND    
							 arMainlineFixtureData[arCurFixtureNumStation[6]].xMaterialOnOff  AND 
							 arMainlineFixtureData[arCurFixtureNumStation[7]].xMaterialOnOff AND 
							 arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff AND
							 NOT arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff   THEN
												 bCounter:=2;
												 bEndCounter :=0;
												 station.iStepAuto:= 11;
				ELSIF  arMainlineFixtureData[arCurFixtureNumStation[5]].xMaterialOnOff AND      
							 arMainlineFixtureData[arCurFixtureNumStation[6]].xMaterialOnOff  AND 
							 arMainlineFixtureData[arCurFixtureNumStation[7]].xMaterialOnOff AND 
							 arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff AND
							 arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff   THEN
												 bCounter:=3;
												 bEndCounter :=0;
												 station.iStepAuto:= 11;
			 END_IF
	END_IF
	11://手动NOK按钮
			IF   arManualNOKHmiButton[3]  AND NOT station.xSingleRunning THEN
				station.iStepAuto:= 280;
			ELSE	
				station.iStepAuto:= 20;
			END_IF

	20:////Restore_after_Estop_Process1 上载数据流程
			IF   station.xSingleRunning  THEN//OR  fbMachine[1].xTryRun THEN
				    station.iStepAuto :=40;
			ELSIF tsModuleProcess[1].xProcessNotStarted AND NOT  tsModuleProcess[1].xProcessStarted THEN
					station.iStepAuto :=21; (*process not started*)
			ELSIF  tsModuleProcess[1].xProcessStarted AND NOT  tsModuleProcess[1].xProcessCompleted THEN
				 station.iStepAuto := 21;(*process started*)
			ELSIF  tsModuleProcess[1].xProcessCompleted AND NOT tsModuleProcess[1].xQDataCompleted  THEN
					station.iStepAuto := 40 ;(*process completed*)
			ELSIF tsModuleProcess[1].xQDataCompleted THEN
					station.iStepAuto :=40;(*Qdata completed *)
			ELSE
					station.iStepAuto :=21; 
			END_IF	
	21://
				tsModuleProcess[1].xProcessNotStarted:=TRUE;
				station.iStepAuto:= 30;
	30://上载产品数据
			tsModuleProcess[1].xProcessStarted	:=TRUE;
			IF  bCounter =1 OR bCounter =2 OR bCounter=3 THEN
				MEMCPY(ADR(arProcessDataStation[1]),ADR(arMainlineFixtureData[arCurFixtureNumStation[5]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[5]]));
				MEMCPY(ADR(arProcessDataStation[2]),ADR(arMainlineFixtureData[arCurFixtureNumStation[6]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[6]]))	;
			END_IF
			IF bCounter =2 OR bCounter =3 OR bEndCounter =1 THEN
				MEMCPY(ADR(arProcessDataStation[3]),ADR(arMainlineFixtureData[arCurFixtureNumStation[7]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[7]]));
				MEMCPY(ADR(arProcessDataStation[4]),ADR(arMainlineFixtureData[arCurFixtureNumStation[8]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[8]]))	;
			END_IF
			IF bCounter =3 OR bEndCounter =2 THEN
				MEMCPY(ADR(arProcessDataStation[5]),ADR(arMainlineFixtureData[arCurFixtureNumStation[9]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[9]]))	;
			END_IF
			tsModuleProcess[1].xProcessCompleted:=TRUE;
			station.iStepAuto:= 40;
	/////产品流程开始	
		40://设定X轴循环为1，总次数2
				 bXCounter:=1;
				station.iStepAuto:= 45;		
		45://测试所用
					//以下为测试所用
					IF   bCounter =3 THEN 
				 			FOR j:=1 TO 4 BY 1 DO
									 FOR k:=1 TO 12 BY 1 DO
											 MEMCPY(ADR(arCameraResultHmi[5,j,k]),ADR(arCameraResultHmi[3,j,k]),SIZEOF(arCameraResultHmi[3,j,k]));
								END_FOR
							END_FOR	
					 END_IF	
					IF  bCounter =2 OR bCounter =3  THEN 
							FOR j:=1 TO 4 BY 1 DO
									 FOR k:=1 TO 12 BY 1 DO
											 MEMCPY(ADR(arCameraResultHmi[3,j,k]),ADR(arCameraResultHmi[1,j,k]),SIZEOF(arCameraResultHmi[1,j,k]));
											 MEMCPY(ADR(arCameraResultHmi[4,j,k]),ADR(arCameraResultHmi[2,j,k]),SIZEOF(arCameraResultHmi[2,j,k]));
											 MEMSET(ADR(arCameraResultHmi[1,j,k]),0,SIZEOF(arCameraResultHmi[1,j,k]));	
											 MEMSET(ADR(arCameraResultHmi[2,j,k]),0,SIZEOF(arCameraResultHmi[2,j,k]));	
								END_FOR
							END_FOR	
					END_IF
			
			
					station.iStepAuto:= 50;			
		50:////Restore_after_Estop_Process2/3 X轴位置1/2拍照流程
			 IF  station.xSingleRunning OR fbMachine[1].xTryRun THEN
					 station.iStepAuto :=70; 
			 ELSIF tsModuleProcess[bXCounter+1].xProcessNotStarted AND NOT  tsModuleProcess[bXCounter+1].xProcessStarted THEN
					 station.iStepAuto :=70; (*process not started*)
			 ELSIF  tsModuleProcess[bXCounter+1].xProcessStarted AND NOT  tsModuleProcess[bXCounter+1].xProcessCompleted THEN
					station.iStepAuto := 70;(*process started*)
			 ELSIF  tsModuleProcess[bXCounter+1].xProcessCompleted AND NOT tsModuleProcess[bXCounter+1].xQDataCompleted  THEN
					 station.iStepAuto :=200;(*process completed*)
			 ELSIF tsModuleProcess[bXCounter+1].xQDataCompleted THEN
					 station.iStepAuto :=200;(*Qdata completed *)
			 ELSE
					 station.iStepAuto :=70; 
			 END_IF	
		70://流程未开始
				tsModuleProcess[bXCounter+1].xProcessNotStarted :=TRUE;
				station.iStepAuto :=80; 
		80://水平调整气缸伸出		
			IF   bCounter =1 THEN
					IF  iBoxChoose =1 THEN
						(*上层水平调整气缸*)
						fbHOZAdjustCyl_1.xAuto :=TRUE;
						fbHOZAdjustCyl_2.xAuto :=TRUE;
						IF  fbHOZAdjustCyl_1.xWP_Delay  AND fbHOZAdjustCyl_2.xWP_Delay  THEN
								station.iStepAuto:= 90;
						END_IF
					ELSIF  iBoxChoose= 2 THEN
						(*下层水平调整气缸*)
						fbHOZAdjustCyl_3.xAuto :=TRUE;
						fbHOZAdjustCyl_4.xAuto :=TRUE;
						IF  fbHOZAdjustCyl_3.xWP_Delay AND fbHOZAdjustCyl_4.xWP_Delay  THEN
								station.iStepAuto:= 90;
						END_IF
					END_IF
			ELSIF  bCounter =2 OR  bCounter =3 OR bEndCounter =1 OR bEndCounter =2 THEN
					IF  iBoxChoose =1 THEN
						(*上层水平调整气缸*)
						fbHOZAdjustCyl_1.xAuto :=TRUE;
						fbHOZAdjustCyl_2.xAuto :=TRUE;
						fbHOZAdjustCyl_5.xAuto :=TRUE;
						fbHOZAdjustCyl_6.xAuto :=TRUE;
						IF  fbHOZAdjustCyl_1.xWP_Delay  AND 
								fbHOZAdjustCyl_2.xWP_Delay  AND
								 fbHOZAdjustCyl_5.xWP_Delay AND
								 fbHOZAdjustCyl_6.xWP_Delay THEN
								station.iStepAuto:= 90;
						END_IF
					ELSIF  iBoxChoose= 2 THEN
						(*下层水平调整气缸*)
						fbHOZAdjustCyl_3.xAuto :=TRUE;
						fbHOZAdjustCyl_4.xAuto :=TRUE;
						fbHOZAdjustCyl_7.xAuto :=TRUE;
						fbHOZAdjustCyl_8.xAuto :=TRUE;
						IF  fbHOZAdjustCyl_3.xWP_Delay AND 
								fbHOZAdjustCyl_4.xWP_Delay AND 
								fbHOZAdjustCyl_7.xWP_Delay AND 
								fbHOZAdjustCyl_8.xWP_Delay  THEN
								station.iStepAuto:= 90;
						END_IF
					END_IF
			END_IF
		90://Z轴下降
			fbZAxisMove.xMoveAuto[2]:=TRUE;
			IF  fbZAxisMove.xMoveInPos[2] THEN
				station.iStepAuto:= 95;
			END_IF			 
		95://X轴移动到拍照位置1/2,Y轴到拍照位置1
				fbXAxisMove.xMoveAuto[bXCounter+1]:=TRUE;
				fbYAxisMove.xMoveAuto[2]:=TRUE;
				IF  fbXAxisMove.xMoveInPos[bXCounter+1]  AND 
					  fbYAxisMove.xMoveInPos[2]   THEN
					station.iStepAuto:= 100;
				END_IF
			
		100://设定Y轴循环开始 总次数为3
				 bYCounter:=1;
				station.iStepAuto:= 110;	
		110://Y轴移动到位置1/2/3	
				fbYAxisMove.xMoveAuto[bYCounter+1]:=TRUE;
				IF  fbYAxisMove.xMoveInPos[bYCounter+1] THEN
					station.iStepAuto:= 120;
				END_IF
		120://屏蔽拍照
			IF axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
 					station.iStepAuto:= 150;	
			ELSE
					station.iStepAuto:= 140;		
			END_IF
		140://触发拍照
			(*开始循环*)
			tsModuleProcess[bXCounter+1].xProcessStarted :=TRUE;
			IF   bCounter =1  (*17.18位置有产品*)  THEN
							IF  bXCounter =1 THEN
									FOR i:=2 TO  9 BY 1 DO
										fbCamera[i].xlTrigger:=TRUE;
									END_FOR
							ELSIF bXCounter =2 THEN
									FOR i:=2 TO  5 BY 1 DO
										fbCamera[i].xlTrigger:=TRUE;
									END_FOR
							END_IF
			ELSIF  bCounter=2  THEN
							IF  bXCounter =1 THEN
										FOR i:=2 TO 17 BY 1 DO
											fbCamera[i].xlTrigger:=TRUE;
										END_FOR
							ELSIF   bXCounter =2 THEN
										FOR i:=2 TO 13 BY 1 DO
											fbCamera[i].xlTrigger:=TRUE;
										END_FOR	
							END_IF
			ELSIF   bCounter=3 THEN
							FOR i:=2 TO 17 BY 1 DO
								fbCamera[i].xlTrigger:=TRUE;
							END_FOR
			(*结束循环*)
			ELSIF   bEndCounter =1 (*17.18位置无产品*)  THEN
							IF  bXCounter =1 THEN
										FOR i:=6 TO  17 BY 1 DO
											fbCamera[i].xlTrigger:=TRUE;
										END_FOR
							ELSIF bXCounter =2 THEN
										FOR i:=2 TO  17 BY 1 DO
											fbCamera[i].xlTrigger:=TRUE;
										END_FOR
							END_IF
			ELSIF  bEndCounter =2 THEN
							IF  bXCounter =2 THEN
									FOR i:=14 TO  17 BY 1 DO
											fbCamera[i].xlTrigger:=TRUE;
									END_FOR	
							END_IF
			END_IF
			arTonDelay[07](IN:=FALSE);
			station.iStepAuto:=145;
	145://等待相机触发
				arTonDelay[07](IN:=TRUE , PT:=T#100MS , Q=> , ET=> );
				IF	 arTonDelay[07].Q THEN
				 		arTonDelay[07](IN:=FALSE);
				 		station.iStepAuto:=150;
				END_IF
	150://检查相机完成信号并储存
		(*开始循环*)
{region "bCounter =1 and bXCounter =1"}
			 IF   bCounter =1 (*17.18位置有产品*)  THEN	
				  	IF  bXCounter =1 THEN
								IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
													arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,bYCounter]:=
													arCameraResultHmi[1,3,bYCounter]:=1;	
													arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,6+bYCounter]:=
													arCameraResultHmi[1,3,6+bYCounter]:=1;	
													arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,3+bYCounter]:=
													arCameraResultHmi[1,1,3+bYCounter]:=1;
													arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,9+bYCounter]:=
													arCameraResultHmi[1,1,9+bYCounter]:=1;
													arProcessDataStation[2].stProcessData.arCameraResult[4,bYCounter]:=
													arCameraResultHmi[2,4,bYCounter]:=1;
													arProcessDataStation[2].stProcessData.arCameraResult[4,6+bYCounter]:=
													arCameraResultHmi[2,4,6+bYCounter]:=1;
													arProcessDataStation[2].stProcessData.arCameraResult[2,3+bYCounter]:=
													arCameraResultHmi[2,2,3+bYCounter]:=1;
													 arProcessDataStation[2].stProcessData.arCameraResult[2,9+bYCounter]:=
													arCameraResultHmi[2,2,9+bYCounter]:=1;	
													station.iStepAuto:=160;
								ELSE
										CASE  bResultStep OF
												0: //
														i_i_Counter:=1;
														bResultStep:=bResultStep +1;
												1://等待相机完成
														IF  fbCamera[i_i_Counter+1].xQDone THEN
																IF  i_i_Counter =1 THEN
																	arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,bYCounter]:=																	
																arCameraResultHmi[1,3,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
															 ELSIF i_i_Counter =2 THEN
																 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,6+bYCounter]:=
																 arCameraResultHmi[1,3,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
															 ELSIF i_i_Counter =3 THEN
																 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,3+bYCounter]:=
																 arCameraResultHmi[1,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
															 ELSIF i_i_Counter =4 THEN
																 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,9+bYCounter]:=
																 arCameraResultHmi[1,1,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
															 ELSIF i_i_Counter =5 THEN
																	arProcessDataStation[2].stProcessData.arCameraResult[4,bYCounter]:= 
																 arCameraResultHmi[2,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
															 ELSIF i_i_Counter =6 THEN
																 arProcessDataStation[2].stProcessData.arCameraResult[4,6+bYCounter]:=
																 arCameraResultHmi[2,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
															 ELSIF i_i_Counter =7 THEN
																 arProcessDataStation[2].stProcessData.arCameraResult[2,3+bYCounter]:=
																 arCameraResultHmi[2,2,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
															 ELSIF i_i_Counter =8 THEN
																 arProcessDataStation[2].stProcessData.arCameraResult[2,9+bYCounter]:=
																 arCameraResultHmi[2,2,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
															 END_IF	
															 bResultStep:=bResultStep +1;
													ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		bResultStep:=0;
																		fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		station.iStepAuto:=140;
																		station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
													END_IF
												2://循环计数
														 IF  i_i_Counter <8 THEN
																	i_i_Counter:=i_i_Counter+1;
																	bResultStep:=1;
														 ELSE
																
																bResultStep:=0;
																station.iStepAuto:=160;
														 END_IF											
										 END_CASE
								END_IF
					
{endregion}
{region "bCounter =1 and bXCounter =2"}
				 	ELSIF   bXCounter =2 THEN
									IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
															 arProcessDataStation[2].stProcessData.arCameraResult[3,bYCounter]:=
															 arCameraResultHmi[2,3,bYCounter]:=1;	
															arProcessDataStation[2].stProcessData.arCameraResult[3,6+bYCounter]:=
															arCameraResultHmi[2,3,6+bYCounter]:=1;	
															arProcessDataStation[2].stProcessData.arCameraResult[1,3+bYCounter]:=
															arCameraResultHmi[2,1,3+bYCounter]:=1;
															arProcessDataStation[2].stProcessData.arCameraResult[1,9+bYCounter]:=
															arCameraResultHmi[2,1,9+bYCounter]:=1;
															station.iStepAuto:=160;
																	
									ELSE
														CASE  bResultStep OF
																 0: //
																		i_i_Counter:=1;
																		bResultStep:=bResultStep +1;
																1://等待相机完成
																		IF  fbCamera[i_i_Counter+1].xQDone THEN
																				 IF  i_i_Counter =1 THEN
																					 arProcessDataStation[2].stProcessData.arCameraResult[3,bYCounter]:=
																					 arCameraResultHmi[2,3,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																				 ELSIF	i_i_Counter =2 THEN
																					 arProcessDataStation[2].stProcessData.arCameraResult[3,6+bYCounter]:=
																					 arCameraResultHmi[2,3,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																				 ELSIF i_i_Counter =3 THEN
																					  arProcessDataStation[2].stProcessData.arCameraResult[1,3+bYCounter]:=
																					 arCameraResultHmi[2,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				 ELSIF i_i_Counter =4 THEN
																						arProcessDataStation[2].stProcessData.arCameraResult[1,9+bYCounter]:=
																					 	arCameraResultHmi[2,1,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				 END_IF
																			 bResultStep:=bResultStep +1;
																	ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																				bResultStep:=0;
																				fbCamera[i_i_Counter+1].xlInit:=TRUE;
																				station.iStepAuto:=140;
																				station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
																	END_IF
																2://循环计数
																		 IF  i_i_Counter <4 THEN
																					i_i_Counter:=i_i_Counter+1;
																					bResultStep:=1;
																		 ELSE
																			
																				bResultStep:=0;
																				station.iStepAuto:=160;
																		 END_IF											
														 END_CASE
									END_IF		
						END_IF
{endregion}
{region "bCounter =2 and bXCounter =1"}
			 ELSIF  bCounter=2 THEN
					IF bXCounter =1 THEN
										 IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
												 							arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,bYCounter]:=
																			arCameraResultHmi[1,3,bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,6+bYCounter]:=
																			arCameraResultHmi[1,3,6+bYCounter]:=1;	
																			arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,3+bYCounter]:=
																			arCameraResultHmi[1,1,3+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,9+bYCounter]:=
																			arCameraResultHmi[1,1,9+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,bYCounter]:=
																			arCameraResultHmi[2,4,bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,6+bYCounter]:=
																			arCameraResultHmi[2,4,6+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,3+bYCounter]:=
																			arCameraResultHmi[2,2,3+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,9+bYCounter]:=
																			arCameraResultHmi[2,2,9+bYCounter]:=1;	
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,3+bYCounter]:=
																			arCameraResultHmi[3,3,3+bYCounter]:=1;	
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,9+bYCounter]:=
																			arCameraResultHmi[3,3,9+bYCounter]:=1;	
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,bYCounter]:=
																			arCameraResultHmi[3,1,bYCounter]:= 1;
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,6+bYCounter]:=
																			arCameraResultHmi[3,1,6+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,3+bYCounter]:=
																			arCameraResultHmi[4,4,3+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,9+bYCounter]:=
																			arCameraResultHmi[4,4,9+bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,bYCounter]:=
																			arCameraResultHmi[4,2,bYCounter]:=1;
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,6+bYCounter]:=
																			arCameraResultHmi[4,2,6+bYCounter]:=1;	
																			station.iStepAuto:=160;
										 ELSE
																		 CASE  bResultStep OF
																						0: //
																							 i_i_Counter:=1;
																							 bResultStep:=bResultStep +1;
																					 1://等待相机完成
																							 IF  fbCamera[i_i_Counter+1].xQDone THEN
																										 IF  i_i_Counter =1 THEN
																											 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,bYCounter]:=
																											 arCameraResultHmi[1,3,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	 
																										 ELSIF i_i_Counter =2 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,6+bYCounter]:=
																											 arCameraResultHmi[1,3,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	 
																										 ELSIF i_i_Counter =3 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,3+bYCounter]:=
																											 arCameraResultHmi[1,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =4 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,9+bYCounter]:=
																											 arCameraResultHmi[1,1,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =5 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,bYCounter]:=
																											 arCameraResultHmi[2,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =6 THEN
																											 arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,6+bYCounter]:=
																											 arCameraResultHmi[2,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =7 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,3+bYCounter]:=
																											 arCameraResultHmi[2,2,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =8 THEN 
																											  arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,9+bYCounter]:=
																											 arCameraResultHmi[2,2,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	 
																										 ELSIF i_i_Counter =9 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,3+bYCounter]:=
																											 arCameraResultHmi[3,3,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	 
																										 ELSIF i_i_Counter =10 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,9+bYCounter]:=
																											 arCameraResultHmi[3,3,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	 
																										 ELSIF i_i_Counter =11 THEN	
																											 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,bYCounter]:= 
																											 arCameraResultHmi[3,1,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =12 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,6+bYCounter]:= 
																											 arCameraResultHmi[3,1,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =13 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,3+bYCounter]:= 
																											 arCameraResultHmi[4,4,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =14 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,9+bYCounter]:= 
																											 arCameraResultHmi[4,4,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =15 THEN 
																											 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,bYCounter]:= 
																											 arCameraResultHmi[4,2,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter]; 
																										 ELSIF i_i_Counter =16 THEN 
																											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,6+bYCounter]:= 
																											 arCameraResultHmi[4,2,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	 
																										 END_IF	 
																										bResultStep:=bResultStep +1;
																						 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																									 bResultStep:=0;
																									 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																									 station.iStepAuto:=140;
																									 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
																						 END_IF
																					 2://循环计数
																								IF  i_i_Counter <16 THEN
																										 i_i_Counter:=i_i_Counter+1;
																										 bResultStep:=1;
																								ELSE
																									 bResultStep:=0;
																									 station.iStepAuto:=160;
																								END_IF											
																				END_CASE
										 END_IF
{endregion}		
{region "bCounter =2 and bXCounter =2"}
			   ELSIF bXCounter =2 THEN
							IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,bYCounter]:= 
											arCameraResultHmi[2,3,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,6+bYCounter]:= 															           
											arCameraResultHmi[2,3,6+bYCounter]:=1;	  
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,3+bYCounter]:=   											
											arCameraResultHmi[2,1,3+bYCounter]:=1; 
    									arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,9+bYCounter]:=  		
											arCameraResultHmi[2,1,9+bYCounter]:=1;    
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,bYCounter]:=  	 											
											arCameraResultHmi[3,4,bYCounter]:=1;     
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,6+bYCounter]:=    											
											arCameraResultHmi[3,4,6+bYCounter]:=1;  
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,3+bYCounter]:=   											
											arCameraResultHmi[3,2,3+bYCounter]:=1;   
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,9+bYCounter]:=  											
											arCameraResultHmi[3,2,9+bYCounter]:=1;			
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,3+bYCounter]:=    											
											arCameraResultHmi[4,3,3+bYCounter]:=1;	 
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,9+bYCounter]:=   											
											arCameraResultHmi[4,3,9+bYCounter]:=1;	    	
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,bYCounter]:=  										
											arCameraResultHmi[4,1,bYCounter]:=1;  
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,6+bYCounter]:=  	     											
											arCameraResultHmi[4,1,6+bYCounter]:=1;     											
											station.iStepAuto:=160;
							ELSE
												 CASE  bResultStep OF
															0: //
																 i_i_Counter:=1;
																 bResultStep:=bResultStep +1;
														 1://等待相机完成
																 IF  fbCamera[i_i_Counter+1].xQDone THEN
																			 	 IF  i_i_Counter =1 THEN
																						arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,bYCounter]:= 
																						 arCameraResultHmi[2,3,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];		
																					 ELSIF i_i_Counter =2 THEN   
																						arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,6+bYCounter]:=     		 
																						 arCameraResultHmi[2,3,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];					
																					 ELSIF i_i_Counter =3 THEN  
																						 arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,3+bYCounter]:=      					 
																						 arCameraResultHmi[2,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];							
																					 ELSIF i_i_Counter =4 THEN     
																						 arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,9+bYCounter]:=   								 
																						 arCameraResultHmi[2,1,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];										
																					 ELSIF i_i_Counter =5 THEN  
																						 	arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,bYCounter]:=  	     											 
																						 arCameraResultHmi[3,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];													
																					 ELSIF i_i_Counter =6 THEN 
																						 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,6+bYCounter]:=    														 
																						 arCameraResultHmi[3,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																
																					 ELSIF i_i_Counter =7 THEN 
																						 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,3+bYCounter]:=     																	 
																						 arCameraResultHmi[3,2,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																			
																					 ELSIF i_i_Counter =8 THEN      	
																						 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,9+bYCounter]:= 																			 
																						 arCameraResultHmi[3,2,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																							
																					 ELSIF i_i_Counter =9 THEN 
																							arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,3+bYCounter]:=      																							 
																						 arCameraResultHmi[4,3,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																										
																					 ELSIF i_i_Counter =10 THEN     
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,9+bYCounter]:=  																										 
																						 arCameraResultHmi[4,3,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																													
																					 ELSIF i_i_Counter =11 THEN      	
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,bYCounter]:=																												 
																						 arCameraResultHmi[4,1,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																															
																					 ELSIF i_i_Counter =12 THEN      		
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,6+bYCounter]:= 																														 
																						 arCameraResultHmi[4,1,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];																																		
																					 END_IF																																				 																																									 
																			bResultStep:=bResultStep +1;
															 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		 bResultStep:=0;
																		 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		 station.iStepAuto:=140;
																		 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
															 END_IF
														 2://循环计数
																	IF  i_i_Counter <12 THEN
																			 i_i_Counter:=i_i_Counter+1;
																			 bResultStep:=1;
																	ELSE
																		 bResultStep:=0;
																		 station.iStepAuto:=160;
																	END_IF											
											END_CASE
							END_IF
				END_IF
{endregion}	
 {region	"bCounter =3 and bXCounter =1"}              
			ELSIF  bCounter =3 THEN
					IF bXCounter =1 THEN
							IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
											arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,bYCounter]:=
											arCameraResultHmi[1,3,bYCounter]:=	1;
											arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,6+bYCounter]:=	
											arCameraResultHmi[1,3,6+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,3+bYCounter]:=
											arCameraResultHmi[1,1,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,9+bYCounter]:=
											arCameraResultHmi[1,1,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,bYCounter]:=
											arCameraResultHmi[2,4,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,6+bYCounter]:=
											arCameraResultHmi[2,4,6+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,3+bYCounter]:=	 
											arCameraResultHmi[2,2,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,9+bYCounter]:=
											arCameraResultHmi[2,2,9+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,3+bYCounter]:=	
											arCameraResultHmi[3,3,3+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,9+bYCounter]:=		
											arCameraResultHmi[3,3,9+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,bYCounter]:=	
											arCameraResultHmi[3,1,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,6+bYCounter]:=
											arCameraResultHmi[3,1,6+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,3+bYCounter]:=
											arCameraResultHmi[4,4,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,9+bYCounter]:=
											arCameraResultHmi[4,4,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,bYCounter]:=
											arCameraResultHmi[4,2,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,6+bYCounter]:=
											arCameraResultHmi[4,2,6+bYCounter]:=1;	
											station.iStepAuto:=160;
							ELSE
							 		CASE  bResultStep OF
															0: //
																 i_i_Counter:=1;
																 bResultStep:=bResultStep +1;
														 1://等待相机完成
																 IF  fbCamera[i_i_Counter+1].xQDone THEN
																		IF  i_i_Counter =1 THEN
																				arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,bYCounter]:=
																			arCameraResultHmi[1,3,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																		ELSIF i_i_Counter =2 THEN  
																			arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[3,6+bYCounter]:=	
																			arCameraResultHmi[1,3,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																		ELSIF i_i_Counter =3 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,3+bYCounter]:= 
																			arCameraResultHmi[1,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =4 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[5]].stProcessData.arCameraResult[1,9+bYCounter]:= 
																			arCameraResultHmi[1,1,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =5 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,bYCounter]:= 
																			arCameraResultHmi[2,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =6 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[4,6+bYCounter]:= 
																			arCameraResultHmi[2,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =7 THEN 
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,3+bYCounter]:=	     
																			arCameraResultHmi[2,2,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =8 THEN  
																			arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[2,9+bYCounter]:=   
																			arCameraResultHmi[2,2,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																		ELSIF i_i_Counter =9 THEN  
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,3+bYCounter]:=   
																			arCameraResultHmi[3,3,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																		ELSIF i_i_Counter =10 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,9+bYCounter]:=	 
																			arCameraResultHmi[3,3,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																		ELSIF i_i_Counter =11 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,bYCounter]:=	 
																			arCameraResultHmi[3,1,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =12 THEN    
																			arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,6+bYCounter]:=
																			arCameraResultHmi[3,1,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =13 THEN 
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,3+bYCounter]:=   
																			arCameraResultHmi[4,4,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =14 THEN   
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,9+bYCounter]:= 
																			arCameraResultHmi[4,4,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =15 THEN    
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,bYCounter]:=
																			arCameraResultHmi[4,2,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																		ELSIF i_i_Counter =16 THEN	
																			arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,6+bYCounter]:=   
																			arCameraResultHmi[4,2,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    END_IF																																								 
																			bResultStep:=bResultStep +1;
															 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		 bResultStep:=0;
																		 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		 station.iStepAuto:=140;
																		 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
															 END_IF
														 2://循环计数
																	IF  i_i_Counter <16 THEN
																			 i_i_Counter:=i_i_Counter+1;
																			 bResultStep:=1;
																	ELSE
																		 bResultStep:=0;
																		 station.iStepAuto:=160;
																	END_IF											
											END_CASE
							END_IF
{endregion}
{region "bCounter =3 and bxCounter =2"}
					ELSIF bXCounter =2 THEN
							IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,bYCounter]:= 
											arCameraResultHmi[2,3,bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,6+bYCounter]:=
											arCameraResultHmi[2,3,6+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,3+bYCounter]:=
											arCameraResultHmi[2,1,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,9+bYCounter]:=
											arCameraResultHmi[2,1,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,bYCounter]:=
											arCameraResultHmi[3,4,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,6+bYCounter]:=
											arCameraResultHmi[3,4,6+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,3+bYCounter]:=
											arCameraResultHmi[3,2,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,9+bYCounter]:=
											arCameraResultHmi[3,2,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,3+bYCounter]:=	
											arCameraResultHmi[4,3,3+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,9+bYCounter]:=	
											arCameraResultHmi[4,3,9+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,bYCounter]:=	
											arCameraResultHmi[4,1,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,6+bYCounter]:=	
											arCameraResultHmi[4,1,6+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,3+bYCounter]:=	
											arCameraResultHmi[5,4,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,9+bYCounter]:=	
											arCameraResultHmi[5,4,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,bYCounter]:=	
											arCameraResultHmi[5,2,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,6+bYCounter]:=	
											arCameraResultHmi[5,2,6+bYCounter]:=1;	
											station.iStepAuto:=160;
							ELSE
							 				CASE  bResultStep OF
															0: //
																 i_i_Counter:=1;
																 bResultStep:=bResultStep +1;
														 1://等待相机完成
																 IF  fbCamera[i_i_Counter+1].xQDone THEN
																			IF  i_i_Counter=1 THEN
																				arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,bYCounter]:= 
                                    		arCameraResultHmi[2,3,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    	ELSIF i_i_Counter =2 THEN 
																				arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[3,6+bYCounter]:=  
                                    		arCameraResultHmi[2,3,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    	ELSIF i_i_Counter =3 THEN    
																				arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,3+bYCounter]:=
                                    		arCameraResultHmi[2,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =4 THEN
																			  arMainlineFixtureData[arCurFixtureNumStation[6]].stProcessData.arCameraResult[1,9+bYCounter]:=     
                                    		arCameraResultHmi[2,1,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =5 THEN   
																				arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,bYCounter]:=  
                                    		arCameraResultHmi[3,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =6 THEN  
																				arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,6+bYCounter]:=  
                                    		arCameraResultHmi[3,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =7 THEN
																				arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,3+bYCounter]:=   
                                    		arCameraResultHmi[3,2,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =8 THEN  
																				arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,9+bYCounter]:=   
                                    		arCameraResultHmi[3,2,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    	ELSIF i_i_Counter =9 THEN  
																				arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,3+bYCounter]:=	  
                                    		arCameraResultHmi[4,3,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    	ELSIF i_i_Counter =10 THEN 
																				arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,9+bYCounter]:=	   
                                    		arCameraResultHmi[4,3,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    	ELSIF i_i_Counter =11 THEN 
																				arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,bYCounter]:=	   
                                    		arCameraResultHmi[4,1,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =12 THEN
																				arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,6+bYCounter]:=	    
                                    		arCameraResultHmi[4,1,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =13 THEN 
																				arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,3+bYCounter]:=	  
                                    		arCameraResultHmi[5,4,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =14 THEN   
																				arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,9+bYCounter]:=	 
                                    		arCameraResultHmi[5,4,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF i_i_Counter =15 THEN    
                                    		arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,bYCounter]:=	
                                    		arCameraResultHmi[5,2,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
                                    	ELSIF	i_i_Counter =16 THEN  
																				arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,6+bYCounter]:=	 
                                    		arCameraResultHmi[5,2,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
                                    	END_IF	
																			bResultStep:=bResultStep +1;
															 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		 bResultStep:=0;
																		 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		 station.iStepAuto:=140;
																		 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
															 END_IF
														 2://循环计数
																	IF  i_i_Counter <16 THEN
																			 i_i_Counter:=i_i_Counter+1;
																			 bResultStep:=1;
																	ELSE
																		 bResultStep:=0;
																		 station.iStepAuto:=160;
																	END_IF											
											END_CASE
						 END_IF		
					END_IF											 
{endregion}
{region "bEndCounter =1 and bXCounter =1"}
		(*结束循环*)
			ELSIF   bEndCounter =1 (*17.18位置无产品*)  THEN	
				  	IF  bXCounter =1 THEN
							IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,3+bYCounter]:=	
											arCameraResultHmi[3,3,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,9+bYCounter]:=	
											arCameraResultHmi[3,3,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,bYCounter]:=	
											arCameraResultHmi[3,1,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,3+bYCounter]:=	
											arCameraResultHmi[3,1,3+bYCounter]:=1; 
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,3+bYCounter]:=                
											arCameraResultHmi[4,4,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,9+bYCounter]:=    	
											arCameraResultHmi[4,4,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,bYCounter]:=   
											arCameraResultHmi[4,2,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,6+bYCounter]:=  
											arCameraResultHmi[4,2,6+bYCounter]:=1;
											station.iStepAuto:=160;
							ELSE
									CASE  bResultStep OF
															0: //
																 i_i_Counter:=9;
																 bResultStep:=bResultStep +1;
														 1://等待相机完成
																 IF  fbCamera[i_i_Counter+1].xQDone THEN
																				IF i_i_Counter =9 THEN
																					arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,3+bYCounter]:=	
																					arCameraResultHmi[3,3,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =10 THEN  
																					arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[3,9+bYCounter]:=	 
																					arCameraResultHmi[3,3,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =11 THEN  
																					arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,bYCounter]:=	 
																					arCameraResultHmi[3,1,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =12 THEN
																					arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[1,3+bYCounter]:=	    
																					arCameraResultHmi[3,1,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =13 THEN
																					arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,3+bYCounter]:=       
																					arCameraResultHmi[4,4,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =14 THEN    
																					arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[4,9+bYCounter]:=   
																					arCameraResultHmi[4,4,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =15 THEN    
																				  arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,bYCounter]:=  
																					arCameraResultHmi[4,2,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				ELSIF i_i_Counter =16 THEN  
																					arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[2,6+bYCounter]:=   
																					arCameraResultHmi[4,2,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				END_IF
																			bResultStep:=bResultStep +1;
															 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		 bResultStep:=0;
																		 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		 station.iStepAuto:=140;
																		 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
															 END_IF
														 2://循环计数
																	IF  i_i_Counter <16 THEN
																			 i_i_Counter:=i_i_Counter+1;
																			 bResultStep:=1;
																	ELSE
																		 bResultStep:=0;
																		 station.iStepAuto:=160;
																	END_IF											
											END_CASE 
							END_IF
{endregion}
{region "bEndCounter =1 and bXCounter =2"}		
				 	ELSIF   bXCounter =2 THEN
							IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,bYCounter]:=  
											arCameraResultHmi[3,4,bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,6+bYCounter]:=
											arCameraResultHmi[3,4,6+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,3+bYCounter]:=
											arCameraResultHmi[3,2,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,9+bYCounter]:=
											arCameraResultHmi[3,2,9+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,3+bYCounter]:=
											arCameraResultHmi[4,3,3+bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,9+bYCounter]:=	
											arCameraResultHmi[4,3,9+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,bYCounter]:=
											arCameraResultHmi[4,1,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,6+bYCounter]:=
											arCameraResultHmi[4,1,6+bYCounter]:=1;		
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,3+bYCounter]:=
											arCameraResultHmi[5,4,3+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,9+bYCounter]:=
											arCameraResultHmi[5,4,9+bYCounter]:=1;	
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,bYCounter]:=
											arCameraResultHmi[5,2,bYCounter]:=1;
											arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,6+bYCounter]:=
											arCameraResultHmi[5,2,6+bYCounter]:=1;
											station.iStepAuto:=160;
							ELSE
											CASE  bResultStep OF
															0: //
																 i_i_Counter:=5;
																 bResultStep:=bResultStep +1;
														 1://等待相机完成
																 IF  fbCamera[i_i_Counter+1].xQDone THEN
																					 IF  i_i_Counter =5 THEN
																						 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,bYCounter]:= 
																						 arCameraResultHmi[3,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																					 ELSIF i_i_Counter =6 THEN  
																					   arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[4,6+bYCounter]:=  
																						 arCameraResultHmi[3,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																					 ELSIF i_i_Counter =7 THEN  			
																						 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,3+bYCounter]:=  
																						 arCameraResultHmi[3,2,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																					 ELSIF i_i_Counter =8 THEN  
																						 arMainlineFixtureData[arCurFixtureNumStation[7]].stProcessData.arCameraResult[2,9+bYCounter]:=  
																						 arCameraResultHmi[3,2,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																					 ELSIF  i_i_Counter =9 THEN 
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,3+bYCounter]:=   
																						 arCameraResultHmi[4,3,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																					 ELSIF i_i_Counter =10 THEN   
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[3,9+bYCounter]:=	 
																						 arCameraResultHmi[4,3,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																					 ELSIF i_i_Counter =11 THEN 
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,bYCounter]:=   
																						 arCameraResultHmi[4,1,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																					 ELSIF i_i_Counter =12 THEN 
																						 arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[1,6+bYCounter]:= 
																						 arCameraResultHmi[4,1,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];		
																					 ELSIF i_i_Counter=13 THEN 
																						 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,3+bYCounter]:=
																						 arCameraResultHmi[5,4,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																					 ELSIF i_i_Counter =14 THEN
																						 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,9+bYCounter]:=   
																						 arCameraResultHmi[5,4,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																					 ELSIF i_i_Counter =15 THEN
																						 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,bYCounter]:=   
																						 arCameraResultHmi[5,2,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																					 ELSIF i_i_Counter =16 THEN  
																						 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[2,6+bYCounter]:=
																						 arCameraResultHmi[5,2,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																					 END_IF																																																 
																			bResultStep:=bResultStep +1;
															 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		 bResultStep:=0;
																		 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		 station.iStepAuto:=140;
																		 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
															 END_IF
														 2://循环计数
																	IF  i_i_Counter <16 THEN
																			 i_i_Counter:=i_i_Counter+1;
																			 bResultStep:=1;
																	ELSE
																		 bResultStep:=0;
																		 station.iStepAuto:=160;
																	END_IF											
											END_CASE 
							END_IF
					END_IF
{endregion}
{region "bEndCounter=2 and bXCounter =1"}
			ELSIF  bEndCounter=2 THEN
					IF  bXCounter =1 THEN
							;//需要添加内容
{endregion}	
{region "bEndCounter=2 and bXCounter =1"}
					ELSIF bXCounter =2 THEN
							IF   axBypassSignal[3] OR  fbMachine[1].xTryRun THEN
												arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,3+bYCounter]:=
												arCameraResultHmi[5,4,3+bYCounter]:=1;	
											  arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,9+bYCounter]:=
												arCameraResultHmi[5,4,9+bYCounter]:=1;	
												arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,bYCounter]:=
												arCameraResultHmi[5,4,bYCounter]:=1;
												arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,6+bYCounter]:=
												arCameraResultHmi[5,4,6+bYCounter]:=1;
												station.iStepAuto:=160;
							ELSE
									CASE  bResultStep OF
															0: //
																 i_i_Counter:=13;
																 bResultStep:=bResultStep +1;
														 1://等待相机完成
																 IF  fbCamera[i_i_Counter+1].xQDone THEN
																					IF  i_i_Counter =13 THEN
																						
																					 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,3+bYCounter]:=																				
																					 arCameraResultHmi[5,4,3+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																				 ELSIF i_i_Counter =14 THEN
																					 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,9+bYCounter]:=
																					 arCameraResultHmi[5,4,9+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];	
																				 ELSIF i_i_Counter =15 THEN
																					 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,bYCounter]:=
																					 arCameraResultHmi[5,4,bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				 ELSIF i_i_Counter =16 THEN
																					 arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[4,6+bYCounter]:=
																					 arCameraResultHmi[5,4,6+bYCounter]:=sCamera_To_Plc.iS03Result[i_i_Counter];
																				 END_IF																			 
																				bResultStep:=bResultStep +1;
															 ELSIF   fbCamera[i_i_Counter+1].xQAlarm THEN
																		 bResultStep:=0;
																		 fbCamera[i_i_Counter+1].xlInit:=TRUE;
																		 station.iStepAuto:=140;
																		 station.adwAlarm[1].18	:=	TRUE;//	S03液位检测工位-相机检测超时报警,请检查
															 END_IF
														 2://循环计数
																	IF  i_i_Counter <16 THEN
																			 i_i_Counter:=i_i_Counter+1;
																			 bResultStep:=1;
																	ELSE
																		 bResultStep:=0;
																		 station.iStepAuto:=160;
																	END_IF											
											END_CASE 
							END_IF								
						END_IF
			END_IF	
{endregion}	
		160://Y循环+1
			bYCounter :=bYCounter +1 ;
			station.iStepAuto:=180;
			
		180://判断循环次数是否已到
			IF   bYCounter<=3 THEN
				station.iStepAuto:=110;
			ELSE
				station.iStepAuto:=190; 
			END_IF
		190:///X轴拍照流程完成
				 tsModuleProcess[bXCounter+1].xProcessCompleted:=TRUE;
				 tsModuleProcess[bXCounter+1].xQDataCompleted:=TRUE;
					station.iStepAuto:=210; 
	//	200://Y轴回拍照位置1
	//			fbYAxisMove.xMoveAuto[2]:=TRUE;
	//			IF  fbYAxisMove.xMoveInPos[2] THEN
	//				station.iStepAuto:=210;
	//			END_IF
		210://X循环 +1 
			bXCounter :=bXCounter +1;
			station.iStepAuto:=220;
		220://X循环判断
			IF   bXCounter<=2 THEN
				station.iStepAuto:=50;
			ELSE
				station.iStepAuto:=230; 
			END_IF	
		230://Z轴上升
				fbZAxisMove.xMoveAuto[1]:=TRUE;
			IF  fbZAxisMove.xMoveInPos[1] THEN
					station.iStepAuto:= 240;
			END_IF
		240://水平调整气缸松开
					fbHOZAdjustCyl_1.xAuto:=FALSE;
					fbHOZAdjustCyl_2.xAuto:=FALSE;
					fbHOZAdjustCyl_3.xAuto:=FALSE;
					fbHOZAdjustCyl_4.xAuto:=FALSE;
					fbHOZAdjustCyl_5.xAuto:=false;
					fbHOZAdjustCyl_6.xAuto:=FALSE;
					fbHOZAdjustCyl_7.xAuto:=false;
					fbHOZAdjustCyl_8.xAuto:=FALSE;
			IF  fbHOZAdjustCyl_1.xHP_Delay AND 
					fbHOZAdjustCyl_2.xHP_Delay AND
					fbHOZAdjustCyl_3.xHP_Delay AND
					fbHOZAdjustCyl_4.xHP_Delay AND 
					fbHOZAdjustCyl_5.xHP_Delay AND 
					fbHOZAdjustCyl_6.xHP_Delay AND
					fbHOZAdjustCyl_7.xHP_Delay AND
					fbHOZAdjustCyl_8.xHP_Delay THEN
					station.iStepAuto:=260;	
				END_IF

		260:////Restore_after_Estop_Process4 数据传输流程
			IF  station.xSingleRunning  THEN //OR fbMachine[1].xTryRun THEN
						station.iStepAuto :=999;
			ELSIF tsModuleProcess[4].xProcessNotStarted AND NOT  tsModuleProcess[4].xProcessStarted THEN
					station.iStepAuto :=270; (*process not started*)
			ELSIF  tsModuleProcess[4].xProcessStarted AND NOT  tsModuleProcess[4].xProcessCompleted THEN
				 station.iStepAuto := 275;(*process started*)
			ELSIF  tsModuleProcess[4].xProcessCompleted AND NOT tsModuleProcess[4].xQDataCompleted  THEN
					station.iStepAuto :=350;(*process completed*)
			ELSIF tsModuleProcess[4].xQDataCompleted THEN
					station.iStepAuto :=360;(*Qdata completed *)
			ELSE
					station.iStepAuto :=270; 
			END_IF		
		270://		
				tsModuleProcess[4].xProcessNotStarted:=TRUE;
				station.iStepAuto :=280;
		280://汇总结果【4】
				FOR i:=1 TO 4 BY 1 DO
					FOR j :=1 TO 12 BY 1 DO 
						IF bCounter = 2 OR bCounter = 3 OR bEndCounter =1 THEN
							IF arMainlineFixtureData[arCurFixtureNumStation[8]].stProcessData.arCameraResult[i,j]<> 1 THEN
							 	arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff:=TRUE;//待删
								arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xLidChecking_NOK:=TRUE;
								arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xLidChecking_OK:=FALSE;
								EXIT;
							ELSIF   i=4 AND j =12 THEN
							 	arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff:=TRUE;//待删
								arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xLidChecking_NOK:=FALSE;
								arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xLidChecking_OK:=TRUE;
							END_IF
						END_IF
					END_FOR
				END_FOR
				station.iStepAuto:=290;
		290://汇总结果【5】	
				FOR i:=1 TO 4 BY 1 DO
					FOR j :=1 TO 12 BY 1 DO 
						IF bCounter = 3  OR bEndCounter =2 THEN
							IF arMainlineFixtureData[arCurFixtureNumStation[9]].stProcessData.arCameraResult[i,j]<>1 THEN
							 	 arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff:=TRUE;//待删
								 arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xLidChecking_NOK:=TRUE;
							 	 arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xLidChecking_OK:=FALSE;
								EXIT;
							ELSIF  i=4 AND j =12 THEN
							 	 arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff:=TRUE;//待删
								 arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xLidChecking_NOK:=FALSE;
								 arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xLidChecking_OK:=TRUE; 
							END_IF
						END_IF
					END_FOR
				END_FOR
				tsModuleProcess[4].xProcessCompleted:=TRUE;
				station.iStepAuto:=999;
	////产品流程结束
	999://----Single Run Finish----
		arManualNOKHmiButton[3]:=FALSE;
		station.iStepAuto :=1000;
		IF NOT station.xSingleContinuousRun THEN
			station.xSingleRunFlag:=FALSE;
		END_IF
		
		station.xCycleEnable:=FALSE;	
		station.xDone:=TRUE;
		station.xRunningOffProhibit := FALSE ;//运行中信号Off禁止
	1000://XY轴回参考点
				fbXAxisMove.xMoveAuto[1]:=TRUE;
				fbYAxisMove.xMoveAuto[1]:=TRUE;
			IF	fbxAxisMove.xMoveInPos[1] AND 
				fbYAxisMove.xMoveInPos[1] THEN
					station.iStepAuto:= 0;
			END_IF		
{region "清料程序"}
  1010://开始请料
		 //写入数据
			arMainlineFixtureData[arCurFixtureNumStation[5]].xMaterialOnOff:=FALSE;
			arMainlineFixtureData[arCurFixtureNumStation[6]].xMaterialOnOff:=FALSE;
			arMainlineFixtureData[arCurFixtureNumStation[7]].xMaterialOnOff:=FALSE;
			arMainlineFixtureData[arCurFixtureNumStation[8]].xMaterialOnOff:=FALSE;
			arMainlineFixtureData[arCurFixtureNumStation[9]].xMaterialOnOff:=FALSE;		
			arMainlineFixtureData[arCurFixtureNumStation[5]].stProduct.xLidChecking_NOK:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[5]].stProduct.xLidChecking_OK:=FALSE;	
			arMainlineFixtureData[arCurFixtureNumStation[6]].stProduct.xLidChecking_NOK:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[6]].stProduct.xLidChecking_OK:=FALSE;	
			arMainlineFixtureData[arCurFixtureNumStation[7]].stProduct.xLidChecking_NOK:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[7]].stProduct.xLidChecking_OK:=FALSE;	
			arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xLidChecking_NOK:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xLidChecking_OK:=FALSE;	
			arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xLidChecking_NOK:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xLidChecking_OK:=FALSE;	
			arMainlineFixtureData[arCurFixtureNumStation[5]].stProduct.xEmptying:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[6]].stProduct.xEmptying:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[7]].stProduct.xEmptying:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[8]].stProduct.xEmptying:=TRUE;
			arMainlineFixtureData[arCurFixtureNumStation[9]].stProduct.xEmptying:=TRUE;		
			station.iStepAuto:=1020;
 1020://XY轴回参考点
				fbXAxisMove.xMoveAuto[1]:=TRUE;
				fbYAxisMove.xMoveAuto[1]:=TRUE;
			IF	fbxAxisMove.xMoveInPos[1] AND 
				fbYAxisMove.xMoveInPos[1] THEN
					station.iStepAuto:= 1100;
			END_IF			
 1100://清料完成
			station.xEmptying:=FALSE;
			station.xEmptyDone:=TRUE;
			station.iStepAuto:=0;
{endregion}			
			
			
			
			
			
		
	ELSE
		;	
END_CASE



END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowInit" Id="{50953df4-ff4f-4c49-ba0d-1f4d4bb7faa6}">
      <Implementation>
        <ST><![CDATA[IF NOT station.xIniting THEN
  station.iStepInit:=0;    
ELSE
//--------------------------------------------初始化步序----------------------------------
CASE station.iStepInit OF	
 0://  
 
  	IF station.xIniting THEN	
  	  station.iStepInit:=10;	
  	END_IF	
10://复位数据
		MEMSET(ADR(arCameraResult),0,SIZEOF(arCameraResult));
		MEMSET(ADR(arCameraResultHmi),0,SIZEOF(arCameraResultHmi));
		FOR i:=2 TO 17 BY 1 DO
			fbCamera[i].xlInit:=TRUE;
			fbCamera[i].xlTrigger:=FALSE;
		END_FOR
		FOR i:=1 TO gc_ModuleProNo BY 1 DO
					MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
				END_FOR
		station.iStepInit :=20;
	 
20://伺服上电
  	fbXAxisMove.xPowerInit := TRUE ;
	 fbYAxisMove.xPowerInit := TRUE ;
	 fbZAxisMove.xPowerInit := TRUE ;
	IF fbXAxisMove.xPowerOn AND   fbYAxisMove.xPowerOn AND  fbZAxisMove.xPowerOn THEN 
    	station.iStepInit:=30;	
	END_IF
30://Z轴伺服上升
		fbZAxisMove.xMoveAuto[1]:=TRUE;
		IF fbZAxisMove.xMoveInPos[1]   THEN
			station.iStepInit:=40;	
		END_IF
40://XY轴回参考位置
		fbXAxisMove.xMoveAuto[1]:=TRUE;
		fbYAxisMove.xMoveAuto[1]:=TRUE;
		IF fbXAxisMove.xMoveInPos[1]  AND   fbYAxisMove.xMoveInPos[1]  THEN
			station.iStepInit:=50;	
		END_IF
50://水平调整气缸回原位
				fbHOZAdjustCyl_1.xinit:=TRUE;
        fbHOZAdjustCyl_2.xinit:=TRUE;
        fbHOZAdjustCyl_3.xinit:=true;
       	fbHOZAdjustCyl_4.xinit:=TRUE;
        fbHOZAdjustCyl_5.xinit:=true;
      	fbHOZAdjustCyl_6.xinit:=TRUE;
        fbHOZAdjustCyl_7.xinit:=true;
      	 fbHOZAdjustCyl_8.xinit:=TRUE;
	IF  fbHOZAdjustCyl_1.xHP_Delay AND 
			fbHOZAdjustCyl_2.xHP_Delay AND
			fbHOZAdjustCyl_3.xHP_Delay AND
			fbHOZAdjustCyl_4.xHP_Delay AND 
			fbHOZAdjustCyl_5.xHP_Delay AND 
			fbHOZAdjustCyl_6.xHP_Delay AND
			fbHOZAdjustCyl_7.xHP_Delay AND
			fbHOZAdjustCyl_8.xHP_Delay THEN
		station.iStepInit:=60;	
	END_IF

60://
	station.iStepInit:=100;

100://	
    station.iStepInit:=999;	
999://初始化完成	
	station.iStepInit:=0;
	station.xInitDone:=TRUE;  
END_CASE
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="General" Id="{173921ed-8271-4b09-9710-611e1cae1f98}">
      <Implementation>
        <ST><![CDATA[{region "清除过程记录"}
CASE bClearProcessStep OF
	0:	
		IF	 S08_MainLine.xClearProcessStatus THEN
			FOR i:=1 TO gc_ModuleProNo BY 1 DO
				MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			END_FOR
			bClearProcessStep:=10;
		END_IF
	10:
		xClearModuleProcessDone:=TRUE;
		bClearProcessStep:=20;
	20:
		IF NOT S08_MainLine.xClearProcessStatus THEN
			xClearModuleProcessDone:=FALSE;
			bClearProcessStep:=30;
		END_IF
	30:  
			bClearProcessStep:=0;
	
END_CASE
{endregion}

{region "HMI中操作bCounter计数"}
IF station.xSingleRunning THEN
bCounter:=bS03Counter;
END_IF
{endregion}]]></ST>
      </Implementation>
    </Action>
    <Action Name="ILC" Id="{b7f5a1ac-a880-4cb0-819a-4a4442b7778e}">
      <Implementation>
        <ST><![CDATA[
//---------------------------------------------------工站可执行-------------------------------------------------------
station.xCanRun :=TRUE ;

//---------------------------------------------------气缸动作条件-------------------------------------------
fbHOZAdjustCyl_1.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_1.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_2.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_2.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_3.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_3.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_4.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_4.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_5.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_5.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_6.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_6.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_7.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_7.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_8.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_8.xOnILC	:=	TRUE	;


//---------------------------------------------------伺服动作条件-------------------------------------------

fbXAxisMove.xRunILC := 		
fbXAxisMove.xMoveILC[1] :=		
fbxAxisMove.xMoveILC[2] :=		
fbxAxisMove.xMoveILC[3] :=		
fbxAxisMove.xMoveILC[4] :=		
fbxAxisMove.xMoveILC[5] := 		TRUE ;//fbZAxisMove.xMoveInPos[1] OR fbZAxisMove.xMoveInPos[2] ;
fbYAxisMove.xRunILC := 		
fbYAxisMove.xMoveILC[1] :=		
fbYAxisMove.xMoveILC[2] :=		
fbYAxisMove.xMoveILC[3] :=		
fbYAxisMove.xMoveILC[4] :=		
fbYAxisMove.xMoveILC[5] := 	TRUE ;//	fbZAxisMove.xMoveInPos[1] OR fbZAxisMove.xMoveInPos[2] ;
fbZAxisMove.xRunILC := 		
fbZAxisMove.xMoveILC[1] :=		
fbZAxisMove.xMoveILC[2] :=		
fbZAxisMove.xMoveILC[3] :=		
fbZAxisMove.xMoveILC[4] :=		
fbZAxisMove.xMoveILC[5] := 		TRUE;

//相机
IF  station.xSingleRunning THEN 
	 FOR  i:=2 TO 17 BY 1 DO
			fbCamera[i].xIDeviceRunning:=TRUE;
	 END_FOR
 ELSE
	 FOR  i:=2 TO 17 BY 1 DO
			fbCamera[i].xIDeviceRunning:=FALSE;
	 END_FOR
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipAuto" Id="{22541172-1c77-494b-a7c8-1c43ec47b24b}">
      <Implementation>
        <ST><![CDATA[
//------------------------------------------------AutoTip Cylinder--------------------------------
station.adwAutoTip[1].00	:=	fbHOZAdjustCyl_1.xAutoTip	;
//station.adwAutoTip[1].01	:=	fbHOZAdjustCyl_2.xAutoTip	;
station.adwAutoTip[1].02	:=	fbHOZAdjustCyl_3.xAutoTip	;
//station.adwAutoTip[1].03	:=	fbHOZAdjustCyl_4.xAutoTip	;
station.adwAutoTip[1].04	:=	fbHOZAdjustCyl_5.xAutoTip	;
//station.adwAutoTip[1].05	:=	fbHOZAdjustCyl_6.xAutoTip	;
station.adwAutoTip[1].06	:=	fbHOZAdjustCyl_7.xAutoTip	;
//station.adwAutoTip[1].07	:=	fbHOZAdjustCyl_8.xAutoTip	;

//------------------------------------------------AutoTip Servo--------------------------------
//**************************************
FOR i:= 1 TO 5 BY 1 DO 
	IF fbXAxisMove.xMoveAuto[i] THEN
		fbXAxisMove.iPosNumber := i ;
	END_IF
	IF fbYAxisMove.xMoveAuto[i] THEN
		fbYAxisMove.iPosNumber := i ;
	END_IF
	IF fbZAxisMove.xMoveAuto[i] THEN
		fbZAxisMove.iPosNumber := i ;
	END_IF
END_FOR
IF  fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  AND arTonDelay[08].Q  THEN
		IF fbXAxisMove.iPosNumber=1 AND NOT fbXAxisMove.xMoveInPos[1] THEN station.adwAutoTip[1].10:=TRUE; END_IF//轴伺服自动时位置不在位置1	
		IF fbXAxisMove.iPosNumber=2 AND NOT fbXAxisMove.xMoveInPos[2] THEN station.adwAutoTip[1].11:=TRUE; END_IF//轴伺服自动时位置不在位置2	
		IF fbXAxisMove.iPosNumber=3 AND NOT fbXAxisMove.xMoveInPos[3] THEN station.adwAutoTip[1].12:=TRUE; END_IF//轴伺服自动时位置不在位置3	
		IF fbXAxisMove.iPosNumber=4 AND NOT fbXAxisMove.xMoveInPos[4] THEN station.adwAutoTip[1].13:=TRUE; END_IF//轴伺服自动时位置不在位置4	
		IF fbXAxisMove.iPosNumber=5 AND NOT fbXAxisMove.xMoveInPos[5] THEN station.adwAutoTip[1].14:=TRUE; END_IF//轴伺服自动时位置不在位置5	
END_IF 		
IF  fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  AND arTonDelay[09].Q  THEN		
		IF fbYAxisMove.iPosNumber=1 AND NOT fbYAxisMove.xMoveInPos[1] THEN station.adwAutoTip[1].15:=TRUE; END_IF//轴伺服自动时位置不在位置1	
		IF fbYAxisMove.iPosNumber=2 AND NOT fbYAxisMove.xMoveInPos[2] THEN station.adwAutoTip[1].16:=TRUE; END_IF//轴伺服自动时位置不在位置2	
		IF fbYAxisMove.iPosNumber=3 AND NOT fbYAxisMove.xMoveInPos[3] THEN station.adwAutoTip[1].17:=TRUE; END_IF//轴伺服自动时位置不在位置3	
		IF fbYAxisMove.iPosNumber=4 AND NOT fbYAxisMove.xMoveInPos[4] THEN station.adwAutoTip[1].18:=TRUE; END_IF//轴伺服自动时位置不在位置4	
		IF fbYAxisMove.iPosNumber=5 AND NOT fbYAxisMove.xMoveInPos[5] THEN station.adwAutoTip[1].19:=TRUE; END_IF//轴伺服自动时位置不在位置5	
END_IF 
IF  fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  AND arTonDelay[10].Q  THEN		
		IF fbZAxisMove.iPosNumber=1 AND NOT fbZAxisMove.xMoveInPos[1] THEN station.adwAutoTip[1].20:=TRUE; END_IF//轴伺服自动时位置不在位置1	
		IF fbZAxisMove.iPosNumber=2 AND NOT fbZAxisMove.xMoveInPos[2] THEN station.adwAutoTip[1].21:=TRUE; END_IF//轴伺服自动时位置不在位置2	
		IF fbZAxisMove.iPosNumber=3 AND NOT fbZAxisMove.xMoveInPos[3] THEN station.adwAutoTip[1].22:=TRUE; END_IF//轴伺服自动时位置不在位置3	
		IF fbZAxisMove.iPosNumber=4 AND NOT fbZAxisMove.xMoveInPos[4] THEN station.adwAutoTip[1].23:=TRUE; END_IF//轴伺服自动时位置不在位置4	
		IF fbZAxisMove.iPosNumber=5 AND NOT fbZAxisMove.xMoveInPos[5] THEN station.adwAutoTip[1].24:=TRUE; END_IF//轴伺服自动时位置不在位置5			
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipManual" Id="{dbaa108a-e0d4-4501-933e-e36048ea6f81}">
      <Implementation>
        <ST><![CDATA[//--------------------------------------------ManualTip------------------------------------------------------

//-------------------------------------------气缸提示---------------------------------------------------------




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Z_Output" Id="{110cf067-dbbf-4e5d-8ee0-386447e50660}">
      <Implementation>
        <ST><![CDATA[(**************************气缸输出********************************)
//S03上层水平调整气缸1(小)
QxS03HOZAdjustCyl_1WP	:=	fbHOZAdjustCyl_1.xWP_Valve	;
QxS03HOZAdjustCyl_1HP	:=	fbHOZAdjustCyl_1.xHP_Valve	;

QxS03HOZAdjustCyl_2WP	:=	fbHOZAdjustCyl_2.xWP_Valve	;
QxS03HOZAdjustCyl_2HP	:=	fbHOZAdjustCyl_2.xHP_Valve	;

//S03下层水平调整气缸1(小)
QxS03HOZAdjustCyl_3WP	:=	fbHOZAdjustCyl_3.xWP_Valve	;
QxS03HOZAdjustCyl_3HP	:=	fbHOZAdjustCyl_3.xHP_Valve	;

QxS03HOZAdjustCyl_4WP	:=	fbHOZAdjustCyl_4.xWP_Valve	;
QxS03HOZAdjustCyl_4HP	:=	fbHOZAdjustCyl_4.xHP_Valve	;
//S03上层水平调整气缸1(大）
QxS03HOZAdjustCyl_5WP	:=	fbHOZAdjustCyl_5.xWP_Valve	;
QxS03HOZAdjustCyl_5HP	:=	fbHOZAdjustCyl_5.xHP_Valve	;

QxS03HOZAdjustCyl_6WP	:=	fbHOZAdjustCyl_6.xWP_Valve	;
QxS03HOZAdjustCyl_6HP	:=	fbHOZAdjustCyl_6.xHP_Valve	;
//S03下层水平调整气缸1(大）
QxS03HOZAdjustCyl_7WP	:=	fbHOZAdjustCyl_7.xWP_Valve	;
QxS03HOZAdjustCyl_7HP	:=	fbHOZAdjustCyl_7.xHP_Valve	;

QxS03HOZAdjustCyl_8WP	:=	fbHOZAdjustCyl_8.xWP_Valve	;
QxS03HOZAdjustCyl_8HP	:=	fbHOZAdjustCyl_8.xHP_Valve	;

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="S03_LidChecking">
      <LineId Id="49" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.A_Input">
      <LineId Id="28" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="82" Count="1" />
      <LineId Id="107" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="116" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="94" Count="1" />
      <LineId Id="120" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="123" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.Alarm">
      <LineId Id="361" Count="17" />
      <LineId Id="266" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.Delay">
      <LineId Id="64" Count="8" />
      <LineId Id="78" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="44" Count="13" />
      <LineId Id="40" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.FlowAuto">
      <LineId Id="1155" Count="5" />
      <LineId Id="1253" Count="0" />
      <LineId Id="1161" Count="4" />
      <LineId Id="1167" Count="17" />
      <LineId Id="3236" Count="0" />
      <LineId Id="3725" Count="2" />
      <LineId Id="1890" Count="0" />
      <LineId Id="1536" Count="0" />
      <LineId Id="3730" Count="1" />
      <LineId Id="1539" Count="0" />
      <LineId Id="5419" Count="0" />
      <LineId Id="5361" Count="0" />
      <LineId Id="5366" Count="0" />
      <LineId Id="5396" Count="22" />
      <LineId Id="5360" Count="0" />
      <LineId Id="1546" Count="0" />
      <LineId Id="1717" Count="2" />
      <LineId Id="1721" Count="0" />
      <LineId Id="3703" Count="1" />
      <LineId Id="3706" Count="1" />
      <LineId Id="1724" Count="0" />
      <LineId Id="2201" Count="3" />
      <LineId Id="1731" Count="0" />
      <LineId Id="5330" Count="0" />
      <LineId Id="2221" Count="0" />
      <LineId Id="5309" Count="0" />
      <LineId Id="5313" Count="2" />
      <LineId Id="5310" Count="1" />
      <LineId Id="5331" Count="0" />
      <LineId Id="5316" Count="6" />
      <LineId Id="5332" Count="0" />
      <LineId Id="5325" Count="0" />
      <LineId Id="1550" Count="0" />
      <LineId Id="5420" Count="0" />
      <LineId Id="3234" Count="0" />
      <LineId Id="3239" Count="0" />
      <LineId Id="3242" Count="1" />
      <LineId Id="3240" Count="1" />
      <LineId Id="3245" Count="0" />
      <LineId Id="2961" Count="0" />
      <LineId Id="3252" Count="2" />
      <LineId Id="2963" Count="8" />
      <LineId Id="2952" Count="0" />
      <LineId Id="2959" Count="0" />
      <LineId Id="2972" Count="0" />
      <LineId Id="2974" Count="0" />
      <LineId Id="1715" Count="0" />
      <LineId Id="3211" Count="0" />
      <LineId Id="2726" Count="0" />
      <LineId Id="1741" Count="1" />
      <LineId Id="2740" Count="0" />
      <LineId Id="2728" Count="0" />
      <LineId Id="2735" Count="1" />
      <LineId Id="2742" Count="0" />
      <LineId Id="2732" Count="1" />
      <LineId Id="2729" Count="0" />
      <LineId Id="2976" Count="0" />
      <LineId Id="1750" Count="0" />
      <LineId Id="1552" Count="0" />
      <LineId Id="3256" Count="0" />
      <LineId Id="3258" Count="0" />
      <LineId Id="3255" Count="0" />
      <LineId Id="4954" Count="0" />
      <LineId Id="4957" Count="0" />
      <LineId Id="5001" Count="6" />
      <LineId Id="4977" Count="0" />
      <LineId Id="4960" Count="2" />
      <LineId Id="4978" Count="0" />
      <LineId Id="4963" Count="0" />
      <LineId Id="4979" Count="0" />
      <LineId Id="4964" Count="1" />
      <LineId Id="4993" Count="0" />
      <LineId Id="4985" Count="0" />
      <LineId Id="4955" Count="1" />
      <LineId Id="2990" Count="0" />
      <LineId Id="3275" Count="1" />
      <LineId Id="2991" Count="9" />
      <LineId Id="2986" Count="0" />
      <LineId Id="3003" Count="0" />
      <LineId Id="3010" Count="0" />
      <LineId Id="3005" Count="0" />
      <LineId Id="3172" Count="19" />
      <LineId Id="3732" Count="0" />
      <LineId Id="3840" Count="0" />
      <LineId Id="3192" Count="2" />
      <LineId Id="3842" Count="2" />
      <LineId Id="3195" Count="3" />
      <LineId Id="3733" Count="0" />
      <LineId Id="3845" Count="0" />
      <LineId Id="3199" Count="2" />
      <LineId Id="3846" Count="2" />
      <LineId Id="3202" Count="3" />
      <LineId Id="3207" Count="3" />
      <LineId Id="3164" Count="0" />
      <LineId Id="1761" Count="0" />
      <LineId Id="1771" Count="0" />
      <LineId Id="3815" Count="0" />
      <LineId Id="1772" Count="0" />
      <LineId Id="3816" Count="0" />
      <LineId Id="1773" Count="0" />
      <LineId Id="1769" Count="0" />
      <LineId Id="3817" Count="0" />
      <LineId Id="1765" Count="0" />
      <LineId Id="1944" Count="0" />
      <LineId Id="1781" Count="0" />
      <LineId Id="1783" Count="0" />
      <LineId Id="1790" Count="2" />
      <LineId Id="1784" Count="0" />
      <LineId Id="3261" Count="1" />
      <LineId Id="3266" Count="0" />
      <LineId Id="3268" Count="0" />
      <LineId Id="3280" Count="0" />
      <LineId Id="3264" Count="0" />
      <LineId Id="1556" Count="0" />
      <LineId Id="2511" Count="0" />
      <LineId Id="3723" Count="0" />
      <LineId Id="1807" Count="0" />
      <LineId Id="2463" Count="0" />
      <LineId Id="2466" Count="1" />
      <LineId Id="2464" Count="0" />
      <LineId Id="2468" Count="0" />
      <LineId Id="2470" Count="1" />
      <LineId Id="2469" Count="0" />
      <LineId Id="2465" Count="0" />
      <LineId Id="1813" Count="0" />
      <LineId Id="2472" Count="0" />
      <LineId Id="2476" Count="1" />
      <LineId Id="2473" Count="1" />
      <LineId Id="2479" Count="1" />
      <LineId Id="2478" Count="0" />
      <LineId Id="2475" Count="0" />
      <LineId Id="2481" Count="0" />
      <LineId Id="2484" Count="1" />
      <LineId Id="2483" Count="0" />
      <LineId Id="2486" Count="0" />
      <LineId Id="2455" Count="0" />
      <LineId Id="2487" Count="7" />
      <LineId Id="2462" Count="0" />
      <LineId Id="2495" Count="0" />
      <LineId Id="2505" Count="0" />
      <LineId Id="2509" Count="1" />
      <LineId Id="2508" Count="0" />
      <LineId Id="2500" Count="0" />
      <LineId Id="5426" Count="0" />
      <LineId Id="3854" Count="0" />
      <LineId Id="3227" Count="0" />
      <LineId Id="3849" Count="1" />
      <LineId Id="3231" Count="0" />
      <LineId Id="3853" Count="0" />
      <LineId Id="3851" Count="1" />
      <LineId Id="1558" Count="0" />
      <LineId Id="2517" Count="0" />
      <LineId Id="4907" Count="0" />
      <LineId Id="1840" Count="0" />
      <LineId Id="1894" Count="0" />
      <LineId Id="3282" Count="0" />
      <LineId Id="5190" Count="0" />
      <LineId Id="3314" Count="0" />
      <LineId Id="5020" Count="0" />
      <LineId Id="3637" Count="0" />
      <LineId Id="5021" Count="0" />
      <LineId Id="3317" Count="0" />
      <LineId Id="5022" Count="0" />
      <LineId Id="3319" Count="0" />
      <LineId Id="5023" Count="0" />
      <LineId Id="3321" Count="0" />
      <LineId Id="5024" Count="0" />
      <LineId Id="3323" Count="0" />
      <LineId Id="5025" Count="0" />
      <LineId Id="3325" Count="0" />
      <LineId Id="5026" Count="0" />
      <LineId Id="3327" Count="0" />
      <LineId Id="3685" Count="0" />
      <LineId Id="3283" Count="0" />
      <LineId Id="3942" Count="0" />
      <LineId Id="3947" Count="0" />
      <LineId Id="3950" Count="0" />
      <LineId Id="3994" Count="0" />
      <LineId Id="3953" Count="0" />
      <LineId Id="3957" Count="0" />
      <LineId Id="3960" Count="0" />
      <LineId Id="5028" Count="0" />
      <LineId Id="3961" Count="1" />
      <LineId Id="5029" Count="0" />
      <LineId Id="3963" Count="1" />
      <LineId Id="5030" Count="0" />
      <LineId Id="3965" Count="1" />
      <LineId Id="5031" Count="0" />
      <LineId Id="3967" Count="1" />
      <LineId Id="5032" Count="0" />
      <LineId Id="3969" Count="1" />
      <LineId Id="5033" Count="0" />
      <LineId Id="3971" Count="1" />
      <LineId Id="5034" Count="0" />
      <LineId Id="3973" Count="1" />
      <LineId Id="5035" Count="0" />
      <LineId Id="3975" Count="0" />
      <LineId Id="3958" Count="0" />
      <LineId Id="3976" Count="0" />
      <LineId Id="3986" Count="0" />
      <LineId Id="3991" Count="0" />
      <LineId Id="3987" Count="2" />
      <LineId Id="3985" Count="0" />
      <LineId Id="3955" Count="0" />
      <LineId Id="3977" Count="0" />
      <LineId Id="3981" Count="0" />
      <LineId Id="3995" Count="0" />
      <LineId Id="3984" Count="0" />
      <LineId Id="3993" Count="0" />
      <LineId Id="3997" Count="0" />
      <LineId Id="3996" Count="0" />
      <LineId Id="3980" Count="0" />
      <LineId Id="3948" Count="1" />
      <LineId Id="4910" Count="0" />
      <LineId Id="4123" Count="0" />
      <LineId Id="4126" Count="0" />
      <LineId Id="1921" Count="0" />
      <LineId Id="3329" Count="0" />
      <LineId Id="5016" Count="0" />
      <LineId Id="3357" Count="0" />
      <LineId Id="5008" Count="0" />
      <LineId Id="3358" Count="0" />
      <LineId Id="5009" Count="0" />
      <LineId Id="3360" Count="0" />
      <LineId Id="5010" Count="0" />
      <LineId Id="3362" Count="0" />
      <LineId Id="3687" Count="0" />
      <LineId Id="4911" Count="0" />
      <LineId Id="3330" Count="0" />
      <LineId Id="4003" Count="5" />
      <LineId Id="4042" Count="0" />
      <LineId Id="5014" Count="0" />
      <LineId Id="4043" Count="1" />
      <LineId Id="5015" Count="0" />
      <LineId Id="4045" Count="1" />
      <LineId Id="5017" Count="0" />
      <LineId Id="4047" Count="1" />
      <LineId Id="5018" Count="0" />
      <LineId Id="4049" Count="0" />
      <LineId Id="4025" Count="16" />
      <LineId Id="3998" Count="0" />
      <LineId Id="3332" Count="0" />
      <LineId Id="4913" Count="0" />
      <LineId Id="4142" Count="0" />
      <LineId Id="4908" Count="0" />
      <LineId Id="1844" Count="0" />
      <LineId Id="5427" Count="0" />
      <LineId Id="3369" Count="0" />
      <LineId Id="5036" Count="0" />
      <LineId Id="3420" Count="0" />
      <LineId Id="5037" Count="0" />
      <LineId Id="3421" Count="0" />
      <LineId Id="5038" Count="0" />
      <LineId Id="3423" Count="0" />
      <LineId Id="5040" Count="0" />
      <LineId Id="3425" Count="0" />
      <LineId Id="5041" Count="0" />
      <LineId Id="3427" Count="0" />
      <LineId Id="5042" Count="0" />
      <LineId Id="3429" Count="0" />
      <LineId Id="5043" Count="0" />
      <LineId Id="3431" Count="0" />
      <LineId Id="5044" Count="0" />
      <LineId Id="3433" Count="0" />
      <LineId Id="5045" Count="0" />
      <LineId Id="3435" Count="0" />
      <LineId Id="5046" Count="0" />
      <LineId Id="3437" Count="0" />
      <LineId Id="5047" Count="0" />
      <LineId Id="3439" Count="0" />
      <LineId Id="5048" Count="0" />
      <LineId Id="3441" Count="0" />
      <LineId Id="5049" Count="0" />
      <LineId Id="3443" Count="0" />
      <LineId Id="5050" Count="0" />
      <LineId Id="3445" Count="0" />
      <LineId Id="5051" Count="0" />
      <LineId Id="3447" Count="0" />
      <LineId Id="5052" Count="0" />
      <LineId Id="3449" Count="0" />
      <LineId Id="3688" Count="0" />
      <LineId Id="3370" Count="0" />
      <LineId Id="4052" Count="5" />
      <LineId Id="4083" Count="0" />
      <LineId Id="5053" Count="0" />
      <LineId Id="4084" Count="1" />
      <LineId Id="5054" Count="0" />
      <LineId Id="4086" Count="1" />
      <LineId Id="5055" Count="0" />
      <LineId Id="4088" Count="1" />
      <LineId Id="5056" Count="0" />
      <LineId Id="4090" Count="1" />
      <LineId Id="5057" Count="0" />
      <LineId Id="4092" Count="1" />
      <LineId Id="5058" Count="0" />
      <LineId Id="4094" Count="1" />
      <LineId Id="5059" Count="0" />
      <LineId Id="4096" Count="1" />
      <LineId Id="5060" Count="0" />
      <LineId Id="4098" Count="1" />
      <LineId Id="5061" Count="0" />
      <LineId Id="4100" Count="1" />
      <LineId Id="5062" Count="0" />
      <LineId Id="4102" Count="1" />
      <LineId Id="5064" Count="0" />
      <LineId Id="4104" Count="1" />
      <LineId Id="5065" Count="0" />
      <LineId Id="4106" Count="1" />
      <LineId Id="5066" Count="0" />
      <LineId Id="4108" Count="1" />
      <LineId Id="5067" Count="0" />
      <LineId Id="4110" Count="1" />
      <LineId Id="5068" Count="0" />
      <LineId Id="4112" Count="1" />
      <LineId Id="5069" Count="0" />
      <LineId Id="4114" Count="1" />
      <LineId Id="4067" Count="11" />
      <LineId Id="4080" Count="2" />
      <LineId Id="4050" Count="0" />
      <LineId Id="3372" Count="1" />
      <LineId Id="4146" Count="0" />
      <LineId Id="2016" Count="0" />
      <LineId Id="3456" Count="0" />
      <LineId Id="5070" Count="0" />
      <LineId Id="2079" Count="0" />
      <LineId Id="5073" Count="0" />
      <LineId Id="2081" Count="0" />
      <LineId Id="5075" Count="0" />
      <LineId Id="2083" Count="0" />
      <LineId Id="5077" Count="0" />
      <LineId Id="2085" Count="0" />
      <LineId Id="5079" Count="0" />
      <LineId Id="2087" Count="0" />
      <LineId Id="5081" Count="0" />
      <LineId Id="2089" Count="0" />
      <LineId Id="5083" Count="0" />
      <LineId Id="2091" Count="0" />
      <LineId Id="5085" Count="0" />
      <LineId Id="2093" Count="0" />
      <LineId Id="5088" Count="0" />
      <LineId Id="2095" Count="0" />
      <LineId Id="5090" Count="0" />
      <LineId Id="2097" Count="0" />
      <LineId Id="5092" Count="0" />
      <LineId Id="2099" Count="0" />
      <LineId Id="5094" Count="0" />
      <LineId Id="2101" Count="0" />
      <LineId Id="3689" Count="0" />
      <LineId Id="3457" Count="0" />
      <LineId Id="4150" Count="5" />
      <LineId Id="4188" Count="0" />
      <LineId Id="5071" Count="0" />
      <LineId Id="4237" Count="1" />
      <LineId Id="5074" Count="0" />
      <LineId Id="4239" Count="1" />
      <LineId Id="5076" Count="0" />
      <LineId Id="4241" Count="1" />
      <LineId Id="5078" Count="0" />
      <LineId Id="4243" Count="1" />
      <LineId Id="5080" Count="0" />
      <LineId Id="4245" Count="1" />
      <LineId Id="5082" Count="0" />
      <LineId Id="4247" Count="1" />
      <LineId Id="5084" Count="0" />
      <LineId Id="4249" Count="1" />
      <LineId Id="5086" Count="0" />
      <LineId Id="4251" Count="1" />
      <LineId Id="5089" Count="0" />
      <LineId Id="4253" Count="1" />
      <LineId Id="5091" Count="0" />
      <LineId Id="4255" Count="1" />
      <LineId Id="5093" Count="0" />
      <LineId Id="4257" Count="1" />
      <LineId Id="5095" Count="0" />
      <LineId Id="4259" Count="1" />
      <LineId Id="4189" Count="11" />
      <LineId Id="4202" Count="2" />
      <LineId Id="4149" Count="0" />
      <LineId Id="2011" Count="0" />
      <LineId Id="4914" Count="0" />
      <LineId Id="4428" Count="0" />
      <LineId Id="4426" Count="0" />
      <LineId Id="4269" Count="0" />
      <LineId Id="2117" Count="0" />
      <LineId Id="3494" Count="0" />
      <LineId Id="5191" Count="0" />
      <LineId Id="2123" Count="0" />
      <LineId Id="5194" Count="0" />
      <LineId Id="2125" Count="0" />
      <LineId Id="5195" Count="0" />
      <LineId Id="2127" Count="0" />
      <LineId Id="5196" Count="0" />
      <LineId Id="2129" Count="0" />
      <LineId Id="5200" Count="0" />
      <LineId Id="2131" Count="0" />
      <LineId Id="5202" Count="0" />
      <LineId Id="2133" Count="0" />
      <LineId Id="5204" Count="0" />
      <LineId Id="2135" Count="0" />
      <LineId Id="5206" Count="0" />
      <LineId Id="2137" Count="0" />
      <LineId Id="5209" Count="0" />
      <LineId Id="2139" Count="0" />
      <LineId Id="5212" Count="0" />
      <LineId Id="2141" Count="0" />
      <LineId Id="5214" Count="0" />
      <LineId Id="2143" Count="0" />
      <LineId Id="5216" Count="0" />
      <LineId Id="2145" Count="0" />
      <LineId Id="5218" Count="0" />
      <LineId Id="3638" Count="0" />
      <LineId Id="5220" Count="0" />
      <LineId Id="2149" Count="0" />
      <LineId Id="5222" Count="0" />
      <LineId Id="2151" Count="0" />
      <LineId Id="5223" Count="0" />
      <LineId Id="2153" Count="0" />
      <LineId Id="3690" Count="0" />
      <LineId Id="3495" Count="0" />
      <LineId Id="4271" Count="5" />
      <LineId Id="4318" Count="0" />
      <LineId Id="5192" Count="0" />
      <LineId Id="4348" Count="1" />
      <LineId Id="5197" Count="0" />
      <LineId Id="4350" Count="1" />
      <LineId Id="5198" Count="0" />
      <LineId Id="4352" Count="1" />
      <LineId Id="5199" Count="0" />
      <LineId Id="4354" Count="1" />
      <LineId Id="5201" Count="0" />
      <LineId Id="4356" Count="1" />
      <LineId Id="5203" Count="0" />
      <LineId Id="4358" Count="1" />
      <LineId Id="5205" Count="0" />
      <LineId Id="4360" Count="1" />
      <LineId Id="5207" Count="0" />
      <LineId Id="4362" Count="1" />
      <LineId Id="5210" Count="0" />
      <LineId Id="4364" Count="1" />
      <LineId Id="5213" Count="0" />
      <LineId Id="4366" Count="1" />
      <LineId Id="5215" Count="0" />
      <LineId Id="4368" Count="0" />
      <LineId Id="4380" Count="0" />
      <LineId Id="5217" Count="0" />
      <LineId Id="4370" Count="1" />
      <LineId Id="5219" Count="0" />
      <LineId Id="4372" Count="1" />
      <LineId Id="5221" Count="0" />
      <LineId Id="4374" Count="4" />
      <LineId Id="5225" Count="0" />
      <LineId Id="4379" Count="0" />
      <LineId Id="4320" Count="0" />
      <LineId Id="4302" Count="14" />
      <LineId Id="4270" Count="0" />
      <LineId Id="3497" Count="0" />
      <LineId Id="4429" Count="0" />
      <LineId Id="4486" Count="0" />
      <LineId Id="2158" Count="0" />
      <LineId Id="3539" Count="0" />
      <LineId Id="5096" Count="0" />
      <LineId Id="2165" Count="0" />
      <LineId Id="5098" Count="0" />
      <LineId Id="2166" Count="0" />
      <LineId Id="5100" Count="0" />
      <LineId Id="2168" Count="0" />
      <LineId Id="5102" Count="0" />
      <LineId Id="2170" Count="0" />
      <LineId Id="5105" Count="0" />
      <LineId Id="2172" Count="0" />
      <LineId Id="5107" Count="0" />
      <LineId Id="2174" Count="0" />
      <LineId Id="5109" Count="0" />
      <LineId Id="2176" Count="0" />
      <LineId Id="5112" Count="0" />
      <LineId Id="3639" Count="0" />
      <LineId Id="5114" Count="0" />
      <LineId Id="2180" Count="0" />
      <LineId Id="5116" Count="0" />
      <LineId Id="2182" Count="0" />
      <LineId Id="5118" Count="0" />
      <LineId Id="2184" Count="0" />
      <LineId Id="5120" Count="0" />
      <LineId Id="2186" Count="0" />
      <LineId Id="5122" Count="0" />
      <LineId Id="2192" Count="0" />
      <LineId Id="5124" Count="0" />
      <LineId Id="2194" Count="0" />
      <LineId Id="5126" Count="0" />
      <LineId Id="2196" Count="0" />
      <LineId Id="5127" Count="0" />
      <LineId Id="2198" Count="0" />
      <LineId Id="3691" Count="0" />
      <LineId Id="3540" Count="0" />
      <LineId Id="4431" Count="5" />
      <LineId Id="4470" Count="0" />
      <LineId Id="5097" Count="0" />
      <LineId Id="4490" Count="1" />
      <LineId Id="5099" Count="0" />
      <LineId Id="4492" Count="1" />
      <LineId Id="5101" Count="0" />
      <LineId Id="4494" Count="1" />
      <LineId Id="5104" Count="0" />
      <LineId Id="4496" Count="1" />
      <LineId Id="5106" Count="0" />
      <LineId Id="4498" Count="1" />
      <LineId Id="5108" Count="0" />
      <LineId Id="4500" Count="1" />
      <LineId Id="5111" Count="0" />
      <LineId Id="4502" Count="1" />
      <LineId Id="5113" Count="0" />
      <LineId Id="4504" Count="1" />
      <LineId Id="5115" Count="0" />
      <LineId Id="4506" Count="1" />
      <LineId Id="5117" Count="0" />
      <LineId Id="4508" Count="1" />
      <LineId Id="5119" Count="0" />
      <LineId Id="4510" Count="1" />
      <LineId Id="5121" Count="0" />
      <LineId Id="4512" Count="1" />
      <LineId Id="5123" Count="0" />
      <LineId Id="4514" Count="1" />
      <LineId Id="5125" Count="0" />
      <LineId Id="4516" Count="4" />
      <LineId Id="5128" Count="0" />
      <LineId Id="4521" Count="1" />
      <LineId Id="4471" Count="14" />
      <LineId Id="4430" Count="0" />
      <LineId Id="4530" Count="0" />
      <LineId Id="4916" Count="0" />
      <LineId Id="4488" Count="0" />
      <LineId Id="4634" Count="0" />
      <LineId Id="2516" Count="0" />
      <LineId Id="2244" Count="1" />
      <LineId Id="3586" Count="0" />
      <LineId Id="5129" Count="0" />
      <LineId Id="2260" Count="0" />
      <LineId Id="5131" Count="0" />
      <LineId Id="2261" Count="0" />
      <LineId Id="5133" Count="0" />
      <LineId Id="2263" Count="0" />
      <LineId Id="5135" Count="0" />
      <LineId Id="2265" Count="0" />
      <LineId Id="5138" Count="0" />
      <LineId Id="2531" Count="0" />
      <LineId Id="5140" Count="0" />
      <LineId Id="2533" Count="0" />
      <LineId Id="5142" Count="0" />
      <LineId Id="2535" Count="0" />
      <LineId Id="5144" Count="0" />
      <LineId Id="2537" Count="0" />
      <LineId Id="3692" Count="0" />
      <LineId Id="3587" Count="0" />
      <LineId Id="4540" Count="5" />
      <LineId Id="4596" Count="0" />
      <LineId Id="5130" Count="0" />
      <LineId Id="4604" Count="1" />
      <LineId Id="5132" Count="0" />
      <LineId Id="4606" Count="1" />
      <LineId Id="5134" Count="0" />
      <LineId Id="4608" Count="1" />
      <LineId Id="5136" Count="0" />
      <LineId Id="4610" Count="1" />
      <LineId Id="5139" Count="0" />
      <LineId Id="4612" Count="1" />
      <LineId Id="5141" Count="0" />
      <LineId Id="4614" Count="1" />
      <LineId Id="5143" Count="0" />
      <LineId Id="4616" Count="1" />
      <LineId Id="5145" Count="0" />
      <LineId Id="4618" Count="1" />
      <LineId Id="4580" Count="14" />
      <LineId Id="4531" Count="0" />
      <LineId Id="3589" Count="1" />
      <LineId Id="4635" Count="0" />
      <LineId Id="2270" Count="0" />
      <LineId Id="3641" Count="0" />
      <LineId Id="5146" Count="0" />
      <LineId Id="2276" Count="0" />
      <LineId Id="5147" Count="0" />
      <LineId Id="2278" Count="0" />
      <LineId Id="5150" Count="0" />
      <LineId Id="2280" Count="0" />
      <LineId Id="5153" Count="0" />
      <LineId Id="2282" Count="0" />
      <LineId Id="5155" Count="0" />
      <LineId Id="2556" Count="0" />
      <LineId Id="5158" Count="0" />
      <LineId Id="2558" Count="0" />
      <LineId Id="5160" Count="0" />
      <LineId Id="2560" Count="0" />
      <LineId Id="5161" Count="0" />
      <LineId Id="2562" Count="0" />
      <LineId Id="5164" Count="0" />
      <LineId Id="2564" Count="0" />
      <LineId Id="5166" Count="0" />
      <LineId Id="2566" Count="0" />
      <LineId Id="5168" Count="0" />
      <LineId Id="2568" Count="0" />
      <LineId Id="5170" Count="0" />
      <LineId Id="2570" Count="0" />
      <LineId Id="3693" Count="0" />
      <LineId Id="3642" Count="0" />
      <LineId Id="4694" Count="5" />
      <LineId Id="4791" Count="0" />
      <LineId Id="5148" Count="0" />
      <LineId Id="4792" Count="1" />
      <LineId Id="5149" Count="0" />
      <LineId Id="4794" Count="1" />
      <LineId Id="5152" Count="0" />
      <LineId Id="4796" Count="1" />
      <LineId Id="5154" Count="0" />
      <LineId Id="4798" Count="1" />
      <LineId Id="5156" Count="0" />
      <LineId Id="4800" Count="1" />
      <LineId Id="5159" Count="0" />
      <LineId Id="4802" Count="1" />
      <LineId Id="5162" Count="0" />
      <LineId Id="4804" Count="1" />
      <LineId Id="5163" Count="0" />
      <LineId Id="4806" Count="1" />
      <LineId Id="5165" Count="0" />
      <LineId Id="4808" Count="1" />
      <LineId Id="5167" Count="0" />
      <LineId Id="4810" Count="1" />
      <LineId Id="5169" Count="0" />
      <LineId Id="4812" Count="1" />
      <LineId Id="5172" Count="0" />
      <LineId Id="4814" Count="0" />
      <LineId Id="4716" Count="15" />
      <LineId Id="4639" Count="0" />
      <LineId Id="2287" Count="0" />
      <LineId Id="4917" Count="0" />
      <LineId Id="4636" Count="0" />
      <LineId Id="4815" Count="0" />
      <LineId Id="2288" Count="0" />
      <LineId Id="4918" Count="0" />
      <LineId Id="4923" Count="0" />
      <LineId Id="4926" Count="0" />
      <LineId Id="4924" Count="0" />
      <LineId Id="2330" Count="0" />
      <LineId Id="3616" Count="0" />
      <LineId Id="5181" Count="0" />
      <LineId Id="2337" Count="0" />
      <LineId Id="5184" Count="0" />
      <LineId Id="2338" Count="0" />
      <LineId Id="5186" Count="0" />
      <LineId Id="2340" Count="0" />
      <LineId Id="5188" Count="0" />
      <LineId Id="2342" Count="0" />
      <LineId Id="3694" Count="0" />
      <LineId Id="2362" Count="0" />
      <LineId Id="4853" Count="5" />
      <LineId Id="4899" Count="0" />
      <LineId Id="5182" Count="1" />
      <LineId Id="4900" Count="1" />
      <LineId Id="5185" Count="0" />
      <LineId Id="4902" Count="1" />
      <LineId Id="5187" Count="0" />
      <LineId Id="4904" Count="1" />
      <LineId Id="5189" Count="0" />
      <LineId Id="4906" Count="0" />
      <LineId Id="4883" Count="15" />
      <LineId Id="4816" Count="0" />
      <LineId Id="4818" Count="0" />
      <LineId Id="2228" Count="0" />
      <LineId Id="4928" Count="0" />
      <LineId Id="3233" Count="0" />
      <LineId Id="1892" Count="0" />
      <LineId Id="2586" Count="4" />
      <LineId Id="2593" Count="0" />
      <LineId Id="2595" Count="0" />
      <LineId Id="2599" Count="0" />
      <LineId Id="2592" Count="0" />
      <LineId Id="3101" Count="0" />
      <LineId Id="3108" Count="0" />
      <LineId Id="3110" Count="0" />
      <LineId Id="3114" Count="0" />
      <LineId Id="2610" Count="2" />
      <LineId Id="2616" Count="0" />
      <LineId Id="2614" Count="0" />
      <LineId Id="1893" Count="0" />
      <LineId Id="2600" Count="1" />
      <LineId Id="2603" Count="0" />
      <LineId Id="2605" Count="2" />
      <LineId Id="2609" Count="0" />
      <LineId Id="2604" Count="0" />
      <LineId Id="2618" Count="3" />
      <LineId Id="1864" Count="0" />
      <LineId Id="2623" Count="0" />
      <LineId Id="2625" Count="16" />
      <LineId Id="2624" Count="0" />
      <LineId Id="2650" Count="0" />
      <LineId Id="3132" Count="0" />
      <LineId Id="3270" Count="0" />
      <LineId Id="3273" Count="0" />
      <LineId Id="3272" Count="0" />
      <LineId Id="3134" Count="8" />
      <LineId Id="3128" Count="0" />
      <LineId Id="3130" Count="0" />
      <LineId Id="3144" Count="1" />
      <LineId Id="2808" Count="4" />
      <LineId Id="3736" Count="0" />
      <LineId Id="2813" Count="2" />
      <LineId Id="3118" Count="0" />
      <LineId Id="3737" Count="0" />
      <LineId Id="3120" Count="1" />
      <LineId Id="2816" Count="0" />
      <LineId Id="2840" Count="2" />
      <LineId Id="2775" Count="0" />
      <LineId Id="2838" Count="0" />
      <LineId Id="2844" Count="3" />
      <LineId Id="3738" Count="0" />
      <LineId Id="2848" Count="2" />
      <LineId Id="3123" Count="0" />
      <LineId Id="3739" Count="0" />
      <LineId Id="3125" Count="1" />
      <LineId Id="2851" Count="3" />
      <LineId Id="3146" Count="0" />
      <LineId Id="2839" Count="0" />
      <LineId Id="1577" Count="0" />
      <LineId Id="1212" Count="2" />
      <LineId Id="1453" Count="2" />
      <LineId Id="1215" Count="2" />
      <LineId Id="1451" Count="0" />
      <LineId Id="3823" Count="5" />
      <LineId Id="3818" Count="0" />
      <LineId Id="5226" Count="0" />
      <LineId Id="5233" Count="0" />
      <LineId Id="5276" Count="0" />
      <LineId Id="5285" Count="0" />
      <LineId Id="5284" Count="0" />
      <LineId Id="5283" Count="0" />
      <LineId Id="5282" Count="0" />
      <LineId Id="5281" Count="0" />
      <LineId Id="5279" Count="0" />
      <LineId Id="5277" Count="0" />
      <LineId Id="5286" Count="7" />
      <LineId Id="5422" Count="3" />
      <LineId Id="5421" Count="0" />
      <LineId Id="5296" Count="1" />
      <LineId Id="5299" Count="4" />
      <LineId Id="5298" Count="0" />
      <LineId Id="5271" Count="0" />
      <LineId Id="5305" Count="2" />
      <LineId Id="5232" Count="0" />
      <LineId Id="5227" Count="4" />
      <LineId Id="3822" Count="0" />
      <LineId Id="1218" Count="6" />
    </LineIds>
    <LineIds Name="S03_LidChecking.FlowInit">
      <LineId Id="437" Count="5" />
      <LineId Id="535" Count="0" />
      <LineId Id="443" Count="3" />
      <LineId Id="538" Count="1" />
      <LineId Id="475" Count="0" />
      <LineId Id="530" Count="0" />
      <LineId Id="537" Count="0" />
      <LineId Id="531" Count="0" />
      <LineId Id="533" Count="1" />
      <LineId Id="532" Count="0" />
      <LineId Id="472" Count="0" />
      <LineId Id="470" Count="0" />
      <LineId Id="482" Count="10" />
      <LineId Id="477" Count="0" />
      <LineId Id="493" Count="0" />
      <LineId Id="496" Count="0" />
      <LineId Id="499" Count="0" />
      <LineId Id="497" Count="1" />
      <LineId Id="495" Count="0" />
      <LineId Id="500" Count="0" />
      <LineId Id="503" Count="7" />
      <LineId Id="518" Count="3" />
      <LineId Id="523" Count="3" />
      <LineId Id="522" Count="0" />
      <LineId Id="512" Count="2" />
      <LineId Id="529" Count="0" />
      <LineId Id="459" Count="7" />
      <LineId Id="436" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.General">
      <LineId Id="382" Count="21" />
      <LineId Id="521" Count="0" />
      <LineId Id="523" Count="0" />
      <LineId Id="529" Count="0" />
      <LineId Id="525" Count="0" />
      <LineId Id="530" Count="0" />
      <LineId Id="524" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.ILC">
      <LineId Id="234" Count="4" />
      <LineId Id="308" Count="15" />
      <LineId Id="302" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="324" Count="17" />
      <LineId Id="343" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="345" Count="1" />
      <LineId Id="344" Count="0" />
      <LineId Id="348" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="353" Count="1" />
      <LineId Id="351" Count="1" />
    </LineIds>
    <LineIds Name="S03_LidChecking.TipAuto">
      <LineId Id="118" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="205" Count="7" />
      <LineId Id="145" Count="0" />
      <LineId Id="148" Count="8" />
      <LineId Id="185" Count="1" />
      <LineId Id="184" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="166" Count="11" />
      <LineId Id="190" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="192" Count="4" />
      <LineId Id="178" Count="0" />
      <LineId Id="183" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.TipManual">
      <LineId Id="137" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="262" Count="1" />
      <LineId Id="246" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="S03_LidChecking.Z_Output">
      <LineId Id="2" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="74" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="40" Count="2" />
      <LineId Id="78" Count="1" />
      <LineId Id="77" Count="0" />
      <LineId Id="44" Count="2" />
      <LineId Id="81" Count="1" />
      <LineId Id="80" Count="0" />
      <LineId Id="48" Count="2" />
      <LineId Id="85" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="70" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>
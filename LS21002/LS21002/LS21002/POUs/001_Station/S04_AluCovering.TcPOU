<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="S04_AluCovering" Id="{9f04510a-7cb9-4290-b624-ad41194a4509}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM S04_AluCovering
VAR
	//工站
	station					: REFERENCE TO FB_Station:=fbstation[4];
	//气缸
	fbHOZAdjustCyl_1	:REFERENCE TO FB_Cylinder:=fbCylinder[20];	//	上层水平调整气缸1
//	fbHOZAdjustCyl_2	:REFERENCE TO FB_Cylinder:=fbCylinder[21];	//	上层水平调整气缸2
	fbHOZAdjustCyl_3	:REFERENCE TO FB_Cylinder:=fbCylinder[22];	//	下层水平调整气缸1
//	fbHOZAdjustCyl_4	:REFERENCE TO FB_Cylinder:=fbCylinder[23];	//	下层水平调整气缸2
	//伺服
	fbZAxisMove_1	 :REFERENCE TO FB_Axis:=fbAxis[10];	//	热熔工位-Z轴伺服1（右）
	fbZAxisMove_2	 :REFERENCE TO FB_Axis:=fbAxis[11];	//		热熔工位-Z轴伺服2
	//温控器
	fbThermostat_1			 :REFERENCE TO FB_TempControl_FUSHI:=fbTempretureControl[1];//温控器1
  fbThermostat_2			 :REFERENCE TO FB_TempControl_FUSHI:=fbTempretureControl[2];//温控器2
	//延时
	arTonDelay :ARRAY[1..20] OF TON;
	//返回值
	UdiReturnValue :ARRAY[1..20] OF UDINT;
	//本地过程数据
	arProcessDataStation : ARRAY [1..2] OF DUT_MainlineFixture;
	i: INT;
	//过程记录
	tsModuleProcess:ARRAY[1..gc_ModuleProNo] OF DUT_Process;
	xClearModuleProcessDone:BOOL;
	bClearProcessStep	:BYTE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Input();
Alarm();
Delay();
FlowAuto();
FlowInit();
General();
ILC();
TipAuto();
TipManual();
Z_Output();]]></ST>
    </Implementation>
    <Action Name="A_Input" Id="{65b47811-5915-4744-a63e-96ca1ba2a959}">
      <Implementation>
        <ST><![CDATA[//气缸
fbHOZAdjustCyl_1.xWP_Sensor	:=	IxS04HOZAdjustCyl_1WP AND IxS04HOZAdjustCyl_2WP	;
fbHOZAdjustCyl_1.xHP_Sensor	:=	IxS04HOZAdjustCyl_1HP	 AND IxS04HOZAdjustCyl_2hP;
fbHOZAdjustCyl_3.xWP_Sensor	:=	IxS04HOZAdjustCyl_3WP	 AND IxS04HOZAdjustCyl_4WP;
fbHOZAdjustCyl_3.xHP_Sensor	:=	IxS04HOZAdjustCyl_3HP	AND IxS04HOZAdjustCyl_4HP;




  



]]></ST>
      </Implementation>
    </Action>
    <Action Name="Alarm" Id="{4b5e4421-5305-4405-b11b-0af4cd39b3da}">
      <Implementation>
        <ST><![CDATA[station.adwAlarm[1].00	:=	station.xInitTimeout	;//	S04 初始化超时
station.adwAlarm[1].01	:=	fbHOZAdjustCyl_1.xHP_Off 	;//	S04上层水平调整气缸1原点未到位
station.adwAlarm[1].02	:=	fbHOZAdjustCyl_1.xWP_Off 	;//	S04上层水平调整气缸1动点未到位
station.adwAlarm[1].03	:=	fbHOZAdjustCyl_3.xHP_Off	;//	S04下层水平调整气缸1原点未到位
station.adwAlarm[1].04	:=	fbHOZAdjustCyl_3.xWP_Off	;//	S04下层水平调整气缸1动点未到位
station.adwAlarm[1].05	:=	fbZAxisMove_1.xError	;//	S04热封铝膜工位Z轴伺服1报错
station.adwAlarm[1].06	:=	fbZAxisMove_1.xNotPowerOn	;//	S04热封铝膜工位Z轴伺服1未使能
station.adwAlarm[1].07	:=	fbZAxisMove_1.xMoveTimeout	;//	S04热封铝膜工位Z轴伺服1移动超时
station.adwAlarm[1].08	:=	fbZAxisMove_2.xError	;//	S04热封铝膜工位Z轴伺服2报错
station.adwAlarm[1].09	:=	fbZAxisMove_2.xNotPowerOn	;//	S04热封铝膜工位Z轴伺服2未使能
station.adwAlarm[1].10	:=	fbZAxisMove_2.xMoveTimeout	;//	S04热封铝膜工位Z轴伺服2移动超时
station.adwAlarm[1].11	:=	fbThermostat_1.xError	;//	S04热封铝膜工位温控器1报错
station.adwAlarm[1].12	:=	fbThermostat_2.xError	;//	S04热封铝膜工位温控器2报错
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Delay" Id="{26e43c03-7b70-412e-9d66-6498126722fc}">
      <Implementation>
        <ST><![CDATA[(*arTonDelay[01](IN:= , PT:=T#0.1S , Q=> , ET=> );*)//TipAuto使用
arTonDelay[02](IN:=  , PT:=stData.Thermostat[1].tTON_Delay , Q=> , ET=> );//热熔延时时间
arTonDelay[03](IN:=   , PT:=T#1S , Q=> , ET=> );
arTonDelay[04](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[05](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[06](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[07](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[08](IN:= , PT:=T#0.1S , Q=> , ET=> );
arTonDelay[09](IN:= , PT:=T#0.1S , Q=> , ET=> );
















]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowAuto" Id="{e3e998e8-11c4-417d-bceb-b9a63717ba8e}">
      <Implementation>
        <ST><![CDATA[
//-----------------------------------------初始化是否完成判断----------------------------------------------
IF NOT station.xInitDone 
THEN
 	station.iStepAuto:=0;
 	station.xDone:=FALSE;
	station.xRunningOffProhibit := FALSE ;//运行中信号Off禁止
ELSIF station.xRunning  OR (  tsModuleProcess[2].xProcessStarted AND   NOT tsModuleProcess[2].xProcessCompleted)
THEN
//-----------------------------------------动作步骤--------------------------------------------------------
CASE station.iStepAuto OF	  
	0: //----Home Step，等待启动----
		IF station.xDisabled 
			AND station.xCanRun 
			AND NOT fbMachine[1].xStopped 
			AND NOT station.xSingleRunning 
		THEN
			station.xDone:=TRUE;
		END_IF
		
		IF  station.xSingleRunning 
			OR station.xCanRun 
			AND NOT station.xDone 
			AND NOT station.xDisabled 
			AND NOT fbMachine[1].xStopped
		THEN
			station.xCycleEnable:=TRUE;
			station.xDone:= FALSE;  
			station.xRunningOffProhibit := TRUE ;//运行中信号Off禁止
			station.iStepAuto:= 10;
		END_IF
    10: //复位数据
			(*开启控温系统*) 
			fbThermostat_1.xStart :=TRUE;
			fbThermostat_2.xStart :=TRUE;
			arTonDelay[02](IN:= FALSE);
				 FOR i:=1 TO gc_ModuleProNo BY 1 DO
						 MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
				 END_FOR
			station.iStepAuto:=20;	
	20:////Restore_after_Estop_Process1 上载数据流程
			IF  station.xSingleRunning THEN // OR  fbMachine[1].xTryRun THEN
					station.iStepAuto:=50;
			ELSIF tsModuleProcess[1].xProcessNotStarted AND NOT  tsModuleProcess[1].xProcessStarted THEN
					station.iStepAuto :=21; (*process not started*)
			ELSIF  tsModuleProcess[1].xProcessStarted AND NOT  tsModuleProcess[1].xProcessCompleted THEN
				 station.iStepAuto := 21;(*process started*)
			ELSIF  tsModuleProcess[1].xProcessCompleted AND NOT tsModuleProcess[1].xQDataCompleted  THEN
					station.iStepAuto := 40 ;(*process completed*)
			ELSIF tsModuleProcess[1].xQDataCompleted THEN
					station.iStepAuto :=40;(*Qdata completed *)
			ELSE
					station.iStepAuto :=21; 
			END_IF	
	21://
				tsModuleProcess[1].xProcessNotStarted:=TRUE;
				station.iStepAuto:= 30;
				
	30://数据load 
			 tsModuleProcess[1].xProcessStarted	:=TRUE;
			 MEMCPY(ADR(arProcessDataStation[1]),ADR(arMainlineFixtureData[arCurFixtureNumStation[10]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[10]]));
			 MEMCPY(ADR(arProcessDataStation[2]),ADR(arMainlineFixtureData[arCurFixtureNumStation[11]]),SIZEOF(arMainlineFixtureData[arCurFixtureNumStation[11]]));
			 tsModuleProcess[1].xProcessCompleted:=TRUE;
			 tsModuleProcess[1].xQDataCompleted:=TRUE;
			 station.iStepAuto:= 40;
	40: //判断产品状态
		//	IF	NOT fbMachine[1].xTryRun THEN
					IF  arProcessDataStation[1].xMaterialOnOff   AND
						 arProcessDataStation[2].xMaterialOnOff  THEN
						station.iStepAuto:= 41;
					ELSE
						station.iStepAuto:= 999;
					END_IF
		//ELSE
		//			station.iStepAuto:= 41;
		//END_IF
	41://手动NOK按钮
			IF   arManualNOKHmiButton[4]  AND NOT station.xCycleRunning THEN
				station.iStepAuto:= 140;
			ELSE	
				station.iStepAuto:= 50;
			END_IF	
	
	/////产品流程开始	
	50:////Restore_after_Estop_Process2 热熔流程
			IF  station.xSingleRunning OR fbMachine[1].xTryRun THEN
					station.iStepAuto :=60; 
			ELSIF tsModuleProcess[2].xProcessNotStarted AND NOT  tsModuleProcess[2].xProcessStarted THEN
					station.iStepAuto :=60; (*process not started*)
			ELSIF  tsModuleProcess[2].xProcessStarted AND NOT  tsModuleProcess[2].xProcessCompleted THEN
				 station.iStepAuto := 140;(*process started*)
			ELSIF  tsModuleProcess[2].xProcessCompleted AND NOT tsModuleProcess[2].xQDataCompleted  THEN
					station.iStepAuto :=130;(*process completed*)
			ELSIF tsModuleProcess[2].xQDataCompleted THEN
					station.iStepAuto :=160;(*Qdata completed *)
			ELSE
					station.iStepAuto :=60; 
			END_IF	
	60://
				 tsModuleProcess[2].xProcessNotStarted:=TRUE;
				 station.iStepAuto :=70; 
	70://水平调整气缸伸出
					IF  iBoxChoose =1 THEN
						(*上层水平调整气缸*)
						fbHOZAdjustCyl_1.xAuto :=TRUE;
					//	fbHOZAdjustCyl_2.xAuto :=TRUE;
						IF  fbHOZAdjustCyl_1.xWP_Delay  THEN // AND fbHOZAdjustCyl_2.xWP_Delay  THEN
								station.iStepAuto:= 80;
						END_IF
					ELSIF  iBoxChoose= 2 THEN
						(*下层水平调整气缸*)
						fbHOZAdjustCyl_3.xAuto :=TRUE;
					//	fbHOZAdjustCyl_4.xAuto :=TRUE;
						IF  fbHOZAdjustCyl_3.xWP_Delay  THEN  //AND fbHOZAdjustCyl_4.xWP_Delay  THEN
								station.iStepAuto:= 80;
						END_IF
					END_IF
	
	80://判断加热棒是否准备就绪
			IF  ( fbThermostat_1.xRdy AND  fbThermostat_2.xRdy ) OR 
				axBypassSignal[4] OR  fbMachine[1].xTryRun THEN
					station.iStepAuto:= 90;
			END_IF
	90://Z轴伺服下降到位置1
			tsModuleProcess[2].xProcessStarted:=TRUE;
			fbZAxisMove_1.xMoveAuto[2]:=TRUE;
			fbZAxisMove_2.xMoveAuto[2]:=TRUE;
			IF  fbZAxisMove_1.xMoveInPos[2] AND fbZAxisMove_2.xMoveInPos[2]THEN
				station.iStepAuto:=100;	
			END_IF
	100://复位热熔时间
			arTonDelay[02](IN:=FALSE  , PT:=stData.Thermostat[1].tTON_Delay , Q=> , ET=> );//热熔延时时间
			station.iStepAuto:=110;
 	110://延时等待热熔完成
			arTonDelay[02](IN:=TRUE  , PT:=stData.Thermostat[1].tTON_Delay , Q=> , ET=> );//热熔延时时间
		IF  arTonDelay[02].Q  OR axBypassSignal[4]  OR fbMachine[1].xTryRun  THEN
			station.iStepAuto:=120;	
			arTonDelay[02](IN:= FALSE );//热熔延时时间
		END_IF
	120://
			
			station.iStepAuto:=130;	
	130://结果OK
			arProcessDataStation[1].stProduct.xAluCovering_NOK:=TRUE;
			arProcessDataStation[2].stProduct.xAluCovering_OK:=FALSE;
			station.iStepAuto:=150;	
	140://结果NG 
			arProcessDataStation[1].stProduct.xAluCovering_NOK:=FALSE;
			arProcessDataStation[2].stProduct.xAluCovering_OK:=TRUE;		
			station.iStepAuto:=150;	
	150:
			tsModuleProcess[2].xQDataCompleted :=TRUE;
			station.iStepAuto:=160;	
	160://Z轴上升
			fbZAxisMove_1.xMoveAuto[1]:=TRUE;
			fbZAxisMove_2.xMoveAuto[1]:=TRUE;
			IF  fbZAxisMove_1.xMoveInPos[1] AND fbZAxisMove_2.xMoveInPos[1]THEN
				station.iStepAuto:=170;	
			END_IF
	170://水平调整气缸收回
			tsModuleProcess[2].xProcessCompleted :=TRUE;
			fbHOZAdjustCyl_1.xAuto :=FALSE;
		//	fbHOZAdjustCyl_2.xAuto :=false;
			fbHOZAdjustCyl_3.xAuto :=false;
		//	fbHOZAdjustCyl_4.xAuto :=false;
		IF	fbHOZAdjustCyl_1.xhp_Delay AND
		 //   fbHOZAdjustCyl_2.xhp_Delay and
		    fbHOZAdjustCyl_3.xhp_Delay  THEN
		 //   fbHOZAdjustCyl_4.xhp_Delay THEN
			station.iStepAuto:=200;	
		END_IF
	////产品流程结束	
	200:////Restore_after_Estop_Process3 数据传输流程
			IF  station.xSingleRunning THEN //OR fbMachine[1].xTryRun THEN
					station.iStepAuto :=999; 
			ELSIF tsModuleProcess[3].xProcessNotStarted AND NOT  tsModuleProcess[3].xProcessStarted THEN
					station.iStepAuto :=210; (*process not started*)
			ELSIF  tsModuleProcess[3].xProcessStarted AND NOT  tsModuleProcess[3].xProcessCompleted THEN
				 station.iStepAuto := 220;(*process started*)
			ELSIF  tsModuleProcess[3].xProcessCompleted AND NOT tsModuleProcess[3].xQDataCompleted  THEN
					station.iStepAuto :=230;(*process completed*)
			ELSIF tsModuleProcess[3].xQDataCompleted THEN
					station.iStepAuto :=999;(*Qdata completed *)
			ELSE
					station.iStepAuto :=210; 
			END_IF		
	210://		
				tsModuleProcess[3].xProcessNotStarted:=TRUE;
				station.iStepAuto :=220; 
	220://数据unload
		tsModuleProcess[3].xProcessStarted:=TRUE;
		MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[10]]),ADR(arProcessDataStation[1]),SIZEOF(arProcessDataStation[1]));
		MEMCPY(ADR(arMainlineFixtureData[arCurFixtureNumStation[11]]),ADR(arProcessDataStation[2]),SIZEOF(arProcessDataStation[2]));
		station.iStepAuto:= 230;
	230://
			tsModuleProcess[3].xProcessCompleted:=TRUE;
			station.iStepAuto :=240; 
 	240://本地数据清除
		//	MEMSET(ADR(arProcessDataStation[1]),0,SIZEOF(arProcessDataStation[1]));
		//	MEMSET(ADR(arProcessDataStation[2]),0,SIZEOF(arProcessDataStation[2]));
			arManualNOKHmiButton[4]:=FALSE;
			tsModuleProcess[3].xQDataCompleted:=TRUE;
			station.iStepAuto:= 999;
	999://----Single Run Finish----
			
		station.iStepAuto :=0;
		IF NOT station.xSingleContinuousRun THEN
			station.xSingleRunFlag:=FALSE;
		END_IF
		station.xCycleEnable:=FALSE;	
		station.xDone:=TRUE;
	ELSE
		;	
END_CASE



END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="FlowInit" Id="{064317f4-3489-452e-ac7f-03fe87bc3d78}">
      <Implementation>
        <ST><![CDATA[IF NOT station.xIniting THEN
  station.iStepInit:=0;    
ELSE
//--------------------------------------------初始化步序----------------------------------
CASE station.iStepInit OF	
 0://  
  	IF station.xIniting THEN	
  	  station.iStepInit:=10;	
  	END_IF	
10://复位数据
		FOR i:=1 TO gc_ModuleProNo BY 1 DO
				MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			END_FOR
	 station.iStepInit:=20;	
20://关闭控温系统
	fbThermostat_1.xStart :=FALSE;
	fbThermostat_2.xStart :=FALSE;
	 station.iStepInit:=30;	
30://Z轴伺服上电
	fbZAxisMove_1.xPowerInit:=TRUE;
    fbZAxisMove_2.xPowerInit:=TRUE;
	IF  fbZAxisMove_1.xPowerOn AND fbZAxisMove_2.xPowerOn THEN
		station.iStepInit:=40;	
	END_IF
40://Z轴伺服上升
	fbZAxisMove_1.xMoveAuto[1]:=TRUE;
    fbZAxisMove_2.xMoveAuto[1]:=TRUE;
	IF  fbZAxisMove_1.xMoveInPos[1] AND fbZAxisMove_2.xMoveInPos[1]THEN
		station.iStepInit:=50;	
	END_IF
50://水平调整气缸收回
	fbHOZAdjustCyl_1.xinit:=TRUE;	
//	fbHOZAdjustCyl_2.xinit:=true;	
	fbHOZAdjustCyl_3.xinit:=true;	
//	fbHOZAdjustCyl_4.xinit:=true;		
	IF     fbHOZAdjustCyl_1.xHp_Delay  AND 
	//	   fbHOZAdjustCyl_2.xHp_Delay  AND 
	 	   fbHOZAdjustCyl_3.xHp_Delay  THEN 
    //       fbHOZAdjustCyl_4.xHp_Delay  THEN
			station.iStepInit:=100;
	END_IF
100://	
    station.iStepInit:=999;	
999://初始化完成	
	station.iStepInit:=0;
	station.xInitDone:=TRUE;  
END_CASE
END_IF

]]></ST>
      </Implementation>
    </Action>
    <Action Name="General" Id="{81d8e462-a9d5-4975-910b-41bf7bc2abe3}">
      <Implementation>
        <ST><![CDATA[(******************清除过程记录**********************)
CASE bClearProcessStep OF
	0:	
		IF	 S08_MainLine.xClearProcessStatus THEN
			FOR i:=1 TO gc_ModuleProNo BY 1 DO
				MEMSET(ADR(tsModuleProcess[i]),0,SIZEOF(tsModuleProcess[i]));
			END_FOR
			bClearProcessStep:=10;
		END_IF
	10:
		xClearModuleProcessDone:=TRUE;
		bClearProcessStep:=20;
	20:
		IF NOT S08_MainLine.xClearProcessStatus THEN
			xClearModuleProcessDone:=FALSE;
			bClearProcessStep:=30;
		END_IF
	30:  
			bClearProcessStep:=0;
	
END_CASE

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ILC" Id="{093b9242-4feb-4df4-b145-2493df43265e}">
      <Implementation>
        <ST><![CDATA[
//---------------------------------------------------工站可执行-------------------------------------------------------
station.xCanRun :=TRUE ;

//---------------------------------------------------气缸动作条件-------------------------------------------
fbHOZAdjustCyl_1.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_1.xOnILC	:=	TRUE	;
//fbHOZAdjustCyl_2.xOffILC	:=	TRUE	;
//fbHOZAdjustCyl_2.xOnILC	:=	TRUE	;
fbHOZAdjustCyl_3.xOffILC	:=	TRUE	;
fbHOZAdjustCyl_3.xOnILC	:=	TRUE	;
//fbHOZAdjustCyl_4.xOffILC	:=	TRUE	;
//fbHOZAdjustCyl_4.xOnILC	:=	TRUE	;


//---------------------------------------------------伺服动作条件-------------------------------------------

fbZAxisMove_1.xRunILC := 
fbZAxisMove_1.xMoveILC[1] :=
fbZAxisMove_1.xMoveILC[2] :=
fbZAxisMove_1.xMoveILC[3] :=
fbZAxisMove_1.xMoveILC[4] :=
fbZAxisMove_1.xMoveILC[5] := TRUE ;

fbZAxisMove_2.xRunILC := 
fbZAxisMove_2.xMoveILC[1] :=
fbZAxisMove_2.xMoveILC[2] :=
fbZAxisMove_2.xMoveILC[3] :=
fbZAxisMove_2.xMoveILC[4] :=
fbZAxisMove_2.xMoveILC[5] := TRUE ;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipAuto" Id="{8e1c36ee-890f-4b23-a358-969bda10a9be}">
      <Implementation>
        <ST><![CDATA[
//------------------------------------------------AutoTip Cylinder--------------------------------
station.adwAutoTip[1].00	:=	fbHOZAdjustCyl_1.xAutoTip	;
//station.adwAutoTip[1].01	:=	fbHOZAdjustCyl_2.xAutoTip	;
station.adwAutoTip[1].02	:=	fbHOZAdjustCyl_3.xAutoTip	;
//station.adwAutoTip[1].03	:=	fbHOZAdjustCyl_4.xAutoTip	;
	
//------------------------------------------------AutoTip Servo--------------------------------
//**************************************
FOR i:= 1 TO 5 BY 1 DO 
	IF fbZAxisMove_1.xMoveAuto[i] THEN
		fbZAxisMove_1.iPosNumber := i ;
	END_IF
	IF fbZAxisMove_2.xMoveAuto[i] THEN
		fbZAxisMove_2.iPosNumber := i ;
	END_IF
	
END_FOR

IF  fbMachine[1].xAutoMode AND NOT fbMachine[1].xRunning  THEN
	  arTonDelay[01](IN:=True , PT:=T#1S , Q=> , ET=> );
else
	  arTonDelay[01](IN:=false);
END_IF
IF arTonDelay[1].Q  THEN 
	IF	fbZAxisMove_1.iPosNumber=1 	AND NOT fbZAxisMove_1.xMoveInPos[1] 	THEN 	station.adwAutoTip[1].10:=TRUE	;	END_IF//轴伺服自动时位置不在位置1
	if	fbZAxisMove_1.iPosNumber=2	AND NOT fbZAxisMove_1.xMoveInPos[2]	THEN 	station.adwAutoTip[1].11:=TRUE	;	END_IF//轴伺服自动时位置不在位置2
	if	fbZAxisMove_1.iPosNumber=3	AND NOT fbZAxisMove_1.xMoveInPos[3]	THEN 	station.adwAutoTip[1].12:=TRUE	;	END_IF//轴伺服自动时位置不在位置3
	if	fbZAxisMove_1.iPosNumber=4	AND NOT fbZAxisMove_1.xMoveInPos[4]	THEN 	station.adwAutoTip[1].13:=TRUE	;	END_IF//轴伺服自动时位置不在位置4
	if	fbZAxisMove_1.iPosNumber=5	AND NOT fbZAxisMove_1.xMoveInPos[5]	THEN 	station.adwAutoTip[1].14:=TRUE	;	END_IF//轴伺服自动时位置不在位置5
	IF	fbZAxisMove_2.iPosNumber=1 	AND NOT fbZAxisMove_2.xMoveInPos[1] 	THEN 	station.adwAutoTip[1].15:=TRUE	;	END_IF//轴伺服自动时位置不在位置1
	if	fbZAxisMove_2.iPosNumber=2	AND NOT fbZAxisMove_2.xMoveInPos[2]	THEN 	station.adwAutoTip[1].16:=TRUE	;	END_IF//轴伺服自动时位置不在位置2
	if	fbZAxisMove_2.iPosNumber=3	AND NOT fbZAxisMove_2.xMoveInPos[3]	THEN 	station.adwAutoTip[1].17:=TRUE	;	END_IF//轴伺服自动时位置不在位置3
	if	fbZAxisMove_2.iPosNumber=4	AND NOT fbZAxisMove_2.xMoveInPos[4]	THEN 	station.adwAutoTip[1].18:=TRUE	;	END_IF//轴伺服自动时位置不在位置4
	if	fbZAxisMove_2.iPosNumber=5	AND NOT fbZAxisMove_2.xMoveInPos[5]	THEN 	station.adwAutoTip[1].19:=TRUE	;	END_IF//轴伺服自动时位置不在位置5
	
	
		
END_IF

]]></ST>
      </Implementation>
    </Action>
    <Action Name="TipManual" Id="{4fcf71f6-e5c5-4ba5-9691-e06d4cc0f64f}">
      <Implementation>
        <ST><![CDATA[//--------------------------------------------ManualTip------------------------------------------------------

//-------------------------------------------气缸提示---------------------------------------------------------




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Z_Output" Id="{9e3423bb-d549-4f1c-bdf2-1776371802b4}">
      <Implementation>
        <ST><![CDATA[(**************************气缸输出********************************)
QxS04HOZAdjustCyl_1WP	:=	fbHOZAdjustCyl_1.xWP_Valve	;
QxS04HOZAdjustCyl_1HP	:=	fbHOZAdjustCyl_1.xHP_Valve	;

QxS04HOZAdjustCyl_3WP	:=	fbHOZAdjustCyl_3.xWP_Valve	;
QxS04HOZAdjustCyl_3HP	:=	fbHOZAdjustCyl_3.xHP_Valve	;

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="S04_AluCovering">
      <LineId Id="33" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.A_Input">
      <LineId Id="28" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="70" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="10" Count="3" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.Alarm">
      <LineId Id="284" Count="12" />
      <LineId Id="266" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.Delay">
      <LineId Id="64" Count="10" />
      <LineId Id="44" Count="13" />
      <LineId Id="40" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.FlowAuto">
      <LineId Id="1155" Count="5" />
      <LineId Id="1253" Count="0" />
      <LineId Id="1161" Count="4" />
      <LineId Id="1167" Count="15" />
      <LineId Id="1452" Count="0" />
      <LineId Id="1183" Count="1" />
      <LineId Id="1256" Count="0" />
      <LineId Id="1642" Count="0" />
      <LineId Id="1640" Count="1" />
      <LineId Id="1683" Count="0" />
      <LineId Id="1849" Count="1" />
      <LineId Id="1843" Count="0" />
      <LineId Id="1259" Count="0" />
      <LineId Id="1710" Count="0" />
      <LineId Id="1827" Count="1" />
      <LineId Id="1711" Count="12" />
      <LineId Id="1709" Count="0" />
      <LineId Id="1725" Count="0" />
      <LineId Id="1727" Count="0" />
      <LineId Id="1813" Count="0" />
      <LineId Id="1728" Count="1" />
      <LineId Id="1731" Count="1" />
      <LineId Id="1730" Count="0" />
      <LineId Id="1734" Count="0" />
      <LineId Id="1844" Count="0" />
      <LineId Id="1738" Count="5" />
      <LineId Id="1845" Count="2" />
      <LineId Id="1556" Count="0" />
      <LineId Id="1817" Count="1" />
      <LineId Id="1820" Count="1" />
      <LineId Id="1815" Count="0" />
      <LineId Id="1814" Count="0" />
      <LineId Id="1557" Count="0" />
      <LineId Id="1752" Count="0" />
      <LineId Id="1837" Count="1" />
      <LineId Id="1753" Count="9" />
      <LineId Id="1744" Count="0" />
      <LineId Id="1560" Count="0" />
      <LineId Id="1764" Count="0" />
      <LineId Id="1763" Count="0" />
      <LineId Id="1644" Count="0" />
      <LineId Id="1653" Count="13" />
      <LineId Id="1649" Count="0" />
      <LineId Id="1645" Count="0" />
      <LineId Id="1631" Count="1" />
      <LineId Id="1831" Count="0" />
      <LineId Id="1633" Count="1" />
      <LineId Id="1643" Count="0" />
      <LineId Id="1765" Count="0" />
      <LineId Id="1668" Count="3" />
      <LineId Id="1667" Count="0" />
      <LineId Id="1686" Count="2" />
      <LineId Id="1672" Count="0" />
      <LineId Id="1684" Count="0" />
      <LineId Id="1675" Count="1" />
      <LineId Id="1685" Count="0" />
      <LineId Id="1677" Count="0" />
      <LineId Id="1766" Count="2" />
      <LineId Id="1774" Count="1" />
      <LineId Id="1777" Count="0" />
      <LineId Id="1787" Count="0" />
      <LineId Id="1776" Count="0" />
      <LineId Id="1785" Count="1" />
      <LineId Id="1778" Count="1" />
      <LineId Id="1781" Count="0" />
      <LineId Id="1790" Count="0" />
      <LineId Id="1562" Count="0" />
      <LineId Id="1690" Count="3" />
      <LineId Id="1563" Count="1" />
      <LineId Id="1851" Count="0" />
      <LineId Id="1694" Count="1" />
      <LineId Id="1697" Count="1" />
      <LineId Id="1565" Count="0" />
      <LineId Id="1701" Count="0" />
      <LineId Id="1566" Count="1" />
      <LineId Id="1702" Count="1" />
      <LineId Id="1582" Count="0" />
      <LineId Id="1793" Count="0" />
      <LineId Id="1834" Count="1" />
      <LineId Id="1794" Count="12" />
      <LineId Id="1791" Count="0" />
      <LineId Id="1600" Count="0" />
      <LineId Id="1807" Count="0" />
      <LineId Id="1603" Count="1" />
      <LineId Id="1611" Count="0" />
      <LineId Id="1809" Count="2" />
      <LineId Id="1617" Count="2" />
      <LineId Id="1822" Count="0" />
      <LineId Id="1812" Count="0" />
      <LineId Id="1626" Count="0" />
      <LineId Id="1212" Count="2" />
      <LineId Id="1453" Count="2" />
      <LineId Id="1216" Count="8" />
    </LineIds>
    <LineIds Name="S04_AluCovering.FlowInit">
      <LineId Id="437" Count="9" />
      <LineId Id="535" Count="1" />
      <LineId Id="534" Count="0" />
      <LineId Id="472" Count="0" />
      <LineId Id="530" Count="3" />
      <LineId Id="473" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="459" Count="0" />
      <LineId Id="476" Count="2" />
      <LineId Id="480" Count="0" />
      <LineId Id="484" Count="3" />
      <LineId Id="483" Count="0" />
      <LineId Id="492" Count="0" />
      <LineId Id="498" Count="2" />
      <LineId Id="493" Count="0" />
      <LineId Id="502" Count="2" />
      <LineId Id="497" Count="0" />
      <LineId Id="494" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="460" Count="6" />
      <LineId Id="517" Count="0" />
      <LineId Id="436" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.General">
      <LineId Id="382" Count="21" />
      <LineId Id="381" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.ILC">
      <LineId Id="234" Count="4" />
      <LineId Id="308" Count="7" />
      <LineId Id="302" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="316" Count="14" />
      <LineId Id="274" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.TipAuto">
      <LineId Id="118" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="205" Count="3" />
      <LineId Id="145" Count="0" />
      <LineId Id="209" Count="8" />
      <LineId Id="223" Count="1" />
      <LineId Id="226" Count="6" />
      <LineId Id="259" Count="9" />
      <LineId Id="278" Count="0" />
      <LineId Id="256" Count="2" />
      <LineId Id="178" Count="0" />
      <LineId Id="183" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.TipManual">
      <LineId Id="137" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="262" Count="1" />
      <LineId Id="246" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="S04_AluCovering.Z_Output">
      <LineId Id="2" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="24" Count="2" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
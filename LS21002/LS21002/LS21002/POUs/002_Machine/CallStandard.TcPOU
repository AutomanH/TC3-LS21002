<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="CallStandard" Id="{fe482292-8fbd-48df-8762-3e3cba95d89f}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM CallStandard
VAR_INPUT
	{attribute 'hide'}
	fb_Blinker					: ARRAY[1..10] OF FB_Blinker;//自定义脉冲发生功能块
	bWindowColseHmi             : ARRAY[1..5]OF BOOL ; //窗口关闭
END_VAR

VAR
	xCylinder_First  	: BOOL ;
	xAxis_First 		: BOOL ;
	xAxisHome_First 	: BOOL ;
	xMachine_First 		: BOOL ;
 	xStation_First 		: BOOL ;
    xRGI4_First 		: BOOL ;
	xEPSRobot_First 	: BOOL ;
	xRefrigerator_first : BOOL ;
	_firstFuShiPXF		: BOOL ;
	_firstTURINRobot     :BOOL;
	_xCalFirstCycle		 :BOOL;
	
	
	i: INT;j,k,eps,rgi,l,m,n,iIndex,t,mac,infor,iRec,q : INT ;
	arrayMoveFalse : ARRAY[1..gc_uiAxisMoveNum] OF BOOL ;
    st_RGI_IOData : ST_RGI_14_IOData;
	
	sModeOperation	AT %Q*: ARRAY[1..gc_uiAxisNum] OF SINT;			//操作模式
	controlword AT %Q* : ARRAY[1..gc_uiAxisNum] OF UINT;
	nctrl1 		AT %I* : ARRAY[1..gc_uiAxisNum] OF USINT;
	nctrl2		AT %I*  : ARRAY[1..gc_uiAxisNum] OF USINT;	
	
    
	fbWritePersistentData		: FB_WritePersistentData;//系统自带保存Persistent数据功能块
	
	strDateTime: STRING(10);
	
	stDateTime: DUT_TIMESET;
	
	xRecipeAxisParSetButton : BOOL ;
	xRecipeRGI14ParSetButton : BOOL ;
	StepHistoryR_TRIG	:R_TRIG;
	SFCTrans: BOOL;
	iInfo: INT;
	arRefSwitchCheckSensor:ARRAY[1..gc_uiAxisNum] OF BOOL;
	fbReference_TRIG:ARRAY[1..gc_uiAxisNum] OF R_TRIG;
	
	
	
	StepAutoTransR_TRIG: ARRAY[1..gc_uiStationNum] OF R_TRIG;
	stepInitTransR_TRIG:ARRAY[1..gc_uiStationNum] OF R_TRIG;
	tTonoff1s: TON;
	tTonOn1s: TON;
	rstStartCoordinate: INT;
	bMachine_First: BOOL;
	_FirstCycle: BOOL;
	bAxisHome_First: BOOL;
	A: INT;
	tLamp2R_TRIG: R_TRIG;
	tLamp3R_TRIG: R_TRIG;
	tLampR_TRIG: R_TRIG;
	tLamp1R_TRIG: R_TRIG;
	
	iSlavePort: INT;
	
	xMonitoring: BOOL;
	xReset: BOOL;
	xtest: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Input();
ACT_Axis();
ACT_AxisHome();
ACT_Cylinder();
ACT_Machine();
ACT_Proface();
ACT_RGI_14();
ACT_Station();
ACT_System();
ACT_WritePersistentData();
ACT_GetTime();
ACT_Comm();
ACT_UPS();
ACT_Recipe();
ACT_Z_ERG_20();
ACT_Camera();
//ACT_PeristalticPump();
//ACT_PeristalticPump_1();
ACT_TURINRobot();
//ACT_MT_MCK();
ACT_MT_MCK_1();
ACT_Alive();
ACT_EtherCATSlaveState();
ACT_FuShiPXF();
ACT_M0dbus_200Smart();
ACT_Encoder();
ACT_ATV12();
ACT_SmcVacuum();
ACT_LoadCell();
ACT_Cimcor();
ACT_EasyPump();
//ACT_ERG_20C();]]></ST>
    </Implementation>
    <Action Name="A_Input" Id="{423c098f-672e-4e09-b9e7-666319181834}">
      <Implementation>
        <ST><![CDATA[IF   fbTURINContorl[1].pSysFromRobot[2].0 THEN
 		xMonitoring:=TRUE;
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Alive" Id="{8c363e7b-0adc-484e-b6ea-1c3c645d0dff}">
      <Implementation>
        <ST><![CDATA[//检测心跳
fbAlive[1].iAliveSingle:=sCamera_TO_Plc.iCameraAlive[1];
fbAlive[2].iAliveSingle:=sCamera_TO_Plc.iCameraAlive[2];
fbAlive[3].iAliveSingle:=sCamera_TO_Plc.iCameraAlive[3];
fbAlive[4].iAliveSingle:=sPLC_From_PC.iPCAlive;
fbAlive[7].iAliveSingle:=sModbus_200SMART.iAlive;

//PLC心跳
 IF  fbAlive[5].xQAlive THEN
		sPLC_TO_PC.iPLCALive:=1;
 ELSE
		sPLC_TO_PC.iPLCALive:=0;
 END_IF

FOR i:=1 TO gc_AliveNum DO
		fbAlive[i](iAliveSingle:= , xQAlive=> , xQAliveError=> );
END_FOR]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_ATV12" Id="{358b2a77-3c2f-478c-a126-fc126863896c}">
      <Implementation>
        <ST><![CDATA[fbATV12(
	xIMotorStart:= , 
	xIMotorStartHMI:= , 
	xIMotorStop:= , 
	xIMotorStopHMI:= , 
	xIEStop:=NOT fbMachine[1].xEStop , 
	xIAutoMode:=	fbMachine[1].xAutoMode , 
	xIManualMode:= fbMachine[1].xManualMode, 
	xIDeviceRunning:= , 
	xQMotorStart=>QxMotorForward, //	热缩封膜出料线体¶电机正转/停止 , 
	arxQMotorSpeedCmd=> , 
	xQRev=>QxMotorStop	);//	热缩封膜出料线体¶电机（未使用） 
	
	QxMotorBackward	:=fbATV12.arxQMotorSpeedCmd[1];//	热缩封膜出料线体¶电机（预约速度20HZ)
	QxMotorReserve	:=fbATV12.arxQMotorSpeedCmd[2];//	热缩封膜出料线体¶电机（预约速度50HZ）]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Axis" Id="{bbaeb5df-675a-4409-9a50-2a8bdac269a5}">
      <Implementation>
        <ST><![CDATA[//上电复位
IF NOT xAxis_First THEN
  FOR i :=1 TO (gc_uiAxisNum) DO 
      	fbAxis[i].xAlarmResetHmi                   :=     			//HMI_故障复位
	    fbAxis[i].xPowerHmi                        :=     			//HMI_使能
	    fbAxis[i].xJogForwardHmi                   :=     			//HMI_正点
	    fbAxis[i].xJogBackwardsHmi                 :=     			//HMI_反点
	    fbAxis[i].xHomeHmi                         :=     			//HMI_回零
	    fbAxis[i].xStopHmi                         :=FALSE;			//HMI_停止
	    fbAxis[i].xMoveHmi                         :=arrayMoveFalse;			//HMI_P点
  END_FOR                                       			
      xAxis_First                           :=TRUE;
END_IF

FOR j:=1 TO gc_uiAxisNum DO
    fbAxis[j](
	Axis := Axis[j], 
	xEStop:= fbMachine[1].xEStop , 
	xKey:=fbMachine[1].xKey  , 
	xSafety:=fbMachine[1].xSafety   , 
	xManualMode:=fbMachine[1].xManualMode  , 
	xAutoMode:=fbMachine[1].xAutoMode , 
	xAlarmReset:=fbMachine[1].xReset  , 
	rJogAcceleration:=stData.Axis[j].rAcceleration , 
	rJogDeceleration:=stData.Axis[j].rDeceleration , 
	rMoveAcceleration:=stData.Axis[j].rAcceleration , 
	rMoveDeceleration:=stData.Axis[j].rDeceleration , 
	rJogVelocity:=stData.Axis[j].rJogVelocity , 
	rManualVelocity:=stData.Axis[j].rManualVelocity , 
	rAutoVelocity:=stData.Axis[j].rAutoVelocity , 
	rMovePosition:=stData.Axis[j].rMovePosition , 
	rMoveVelocity:=stData.Axis[j].rMoveVelocity , 
	rRelativeDistance:=stData.Axis[j].rRelativeDistance , 
	rRelativeVelocity:=stData.Axis[j].rRelativeVelocity , 
	rVelocityVel:=stData.Axis[j].rVelocityVel , 
	rVelocityAcc:=stData.Axis[j].rAcceleration , 
	rVelocityDec:=stData.Axis[j].rDeceleration , 
	xIRefSwitch:= arAxisSensorH[j], 
	xIResetRefPosCheck:= , 
	xPowerOn=> , 
	xReady=> , 
	xRelativeDone1=> , 
	xError=> , 
	nErrorID=> , 
	rActTorque=> , 
	rActPos=> , 
	rActVelo=> , 
  );

  END_FOR	
 
  
IF  xRecipeAxisParSetButton THEN 
	FOR i:= 1 TO gc_uiAxisNum BY 1 DO
			stData.Axis[i].rAcceleration := 2000 ;
			stData.Axis[i].rDeceleration := 2000 ;
			stData.Axis[i].rJogVelocity := 10 ;
			stData.Axis[i].rManualVelocity := 20 ;
	    	stData.Axis[i].rAutoVelocity := 30;
	END_FOR
	xRecipeAxisParSetButton := FALSE ;
END_IF



//设定轴是直线定位还是模值定位
FOR i:= 1 TO 10 BY 1 DO 
	IF  i=9 OR i=14 THEN 
	fbAxis[i].xIsLinearMode := FALSE ;
	ELSE
	fbAxis[i].xIsLinearMode := TRUE ;
	END_IF
END_FOR
//设定模值模式时轴的路径(
(*fbAxis[5].nModuloDirection :=*)
fbAxis[9].nModuloDirection := 
fbAxis[14].nModuloDirection := MC_Direction.MC_Positive_Direction ;


//步进电机
fbAxis[17].xIRelative_Encoder:=TRUE;
fbAxis[18].xIRelative_Encoder:=TRUE;
fbAxis[19].xIRelative_Encoder:=TRUE;




]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_AxisHome" Id="{f0326e53-8f63-4198-852d-14619dde76e1}">
      <Implementation>
        <ST><![CDATA[sEctNetId := '192.168.1.1.2.1' ;//填写NETID
//回原点方式设定
home_method[1] :=27;
home_method[2] := 27 ;//35=机械回原点 23=正方向找原点 27=反方向找原点 7 11\
home_method[3] :=23;
home_method[4] := 27;
home_method[5] :=23;
home_method[6] := 27 ;
home_method[7] :=23;
home_method[8] := 27;
home_method[9] :=23;
home_method[10] := 23 ;
home_method[11] :=23;
home_method[12] := 23;
home_method[13] :=27;
home_method[14] := 27 ;
home_method[15] :=27;
home_method[16] := 23;



home_method[17] :=27;
fbAxisHome[17].iMode :=3;//雷赛伺服
home_method[18] :=27;
fbAxisHome[18].iMode :=3;
home_method[19] :=23;
fbAxisHome[19].iMode :=3;



//从站地址
cnSlaveAddr[01] := 1014 ;
cnSlaveAddr[02] := 1015 ;
cnSlaveAddr[03] := 1016 ;
cnSlaveAddr[04] := 1017 ;
cnSlaveAddr[05] := 1018 ;
cnSlaveAddr[06] := 1019 ;
cnSlaveAddr[07] := 1020 ;
cnSlaveAddr[08] := 1021 ;

cnSlaveAddr[09] := 1025 ;

cnSlaveAddr[10] := 1037 ;
cnSlaveAddr[11] := 1038 ;
cnSlaveAddr[12] := 1039 ;
cnSlaveAddr[13] := 1040 ;
cnSlaveAddr[14] := 1041 ;
cnSlaveAddr[15] := 1042 ;
cnSlaveAddr[16] := 1043 ;
cnSlaveAddr[17] := 1044 ;
cnSlaveAddr[18] := 1045 ;
cnSlaveAddr[19] := 1046 ;




FOR  i:=1 TO gc_uiAxisNum BY 1 DO
	IF i<=15 THEN
	fbAxisHome[i].home_highspeed_set:= 150; //
	fbAxisHome[i].home_lowspeed_set:= 5;
	fbAxisHome[i].numerator:=60;
	ELSIF i=16 THEN 
	 fbAxisHome[i].home_highspeed_set:= 40; //
	 fbAxisHome[i].home_lowspeed_set:= 5;
	 fbAxisHome[i].numerator:=60;
	else
		fbAxisHome[i].home_highspeed_set:=5; //雷赛
		fbAxisHome[i].home_lowspeed_set:= 1;
		fbAxisHome[i].numerator:=2;
	END_IF
		fbAxisHome[i].tTimeOutSet := T#60S;//超时时间设定
END_FOR


FOR  i:=1  TO gc_uiAxisNum BY 1 DO
 

		fbReference_TRIG[i](CLK:=fbAxis[i].xReferenceHmi OR  fbAxis[i].xReferenceAuto , Q=> );
		IF    fbReference_TRIG[i].Q THEN
			fbAxisHome[i].home_exe:=TRUE;
			fbAxis[i].xReferenceHmi :=FALSE;
		  fbAxis[i].xReferenceAuto:=FALSE;
		END_IF
		IF  fbAxisHome[i].home_exe AND   fbAxisHome[i].home_start THEN
		 			fbAxisHome[i].home_exe:=FALSE;
		END_IF
		fbAxisHome[i](
	    axis_name :=Axis[i], 
		home_exe:=,//fbAxis[i].xReferenceHmi OR  fbAxis[i].xReferenceAuto, 
		fb_netid:=sEctNetId , 
		fb_nslaveaddr:= cnSlaveAddr[i] , 
	    nctrl1:= nctrl1[i], 
	    nctrl2:= nctrl2[i], 		
	    mode:= sModeOperation[i],
        home_method := home_method[i],	
	    home_highspeed_set:= , 
	    home_lowspeed_set:= , 
	    home_offset_set:= 0,
	    numerator:= , 
	    denominator:= 4194304, 
		home_done=> , 
		home_error=> , 
 	    controlword=> controlword[i], 
	    error_id=> );

END_FOR








 
IF NOT bAxisHome_First THEN	
	FOR i:=1 TO  gc_uiAxisNum BY 1 DO	
	  sModeOperation[i] := 8;
	END_FOR
	bAxisHome_First := TRUE;
END_IF
//超时时间设定

	]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Camera" Id="{3e63f2f2-e6bc-43fe-9c91-0da31a2d0746}">
      <Implementation>
        <ST><![CDATA[FOR  i:= 1  TO gc_uiCameraNum   BY 1  DO 
	fbCamera[i](
		xlInit:= , 
		xlTrigger:= , 
		xlTriggerHmi:= , 
		xlLight:= TRUE, 
		xlReady:=TRUE , 
		xlAutoMode:=fbMachine[1].xAutoMode , 
		xlManualMode:=fbMachine[1].xManualMode  , 
		xITryRun:=fbMachine[1].xTryRun OR	axBypassSignal[3] , 
		tlDelay:= stData.Camera[i].tDelay, 
		xIDeviceRunning:=,
		xQStart=> , 
		xQLight=> , 
		xQCompleted=> , 
		xQAlarm=> , 
		xQBusy=> , 
		xQHmiAlarm=> , 
		ilCompleted:=sCamera_To_PLC.iCompleted[i]);
		
		//延时设定
		fbCamera[i].tlDelay:=fbCamera[1].tlDelay;
END_FOR


//上料工位相机光源触发
IF   fbCamera[1].xQLight  THEN
			QxCameraLight1Trigger:=TRUE;
			QxCameraLight2Trigger:=TRUE;
ELSE
 			QxCameraLight1Trigger:=FALSE;
			QxCameraLight2Trigger:=FALSE;
END_IF
//相机触发
QxCamera1Trigger:=fbCamera[1].xQStart;




//S03液位检测工位光源触发
IF 			fbCamera[2].xQLight OR	fbCamera[3].xQLight OR
				fbCamera[4].xQLight OR	fbCamera[5].xQLight OR
			  fbCamera[6].xQLight OR	fbCamera[7].xQLight OR
				fbCamera[8].xQLight OR	fbCamera[9].xQLight OR
			 fbCamera[10].xQLight OR	fbCamera[11].xQLight OR
			 fbCamera[12].xQLight OR	fbCamera[13].xQLight OR
			 fbCamera[14].xQLight OR	fbCamera[15].xQLight OR
				fbCamera[17].xQLight THEN
					QxCameraLight3Trigger:=TRUE;	
ELSE
 						QxCameraLight3Trigger:=FALSE;	
END_IF 
						 
//相机触发
QxCamera2Trigger	:= fbCamera[2].xQStart; 
QxCamera3Trigger	:= fbCamera[3].xQStart; 
QxCamera4Trigger	:= fbCamera[4].xQStart; 
QxCamera5Trigger	:= fbCamera[5].xQStart; 
QxCamera6Trigger	:= fbCamera[6].xQStart; 
QxCamera7Trigger	:= fbCamera[7].xQStart; 
QxCamera8Trigger	:= fbCamera[8].xQStart; 
QxCamera9Trigger	:= fbCamera[9].xQStart; 
QxCamera10Trigger   := fbCamera[10].xQStart; 
QxCamera11Trigger   := fbCamera[11].xQStart;
QxCamera12Trigger   := fbCamera[12].xQStart;
QxCamera13Trigger   := fbCamera[13].xQStart;
QxCamera14Trigger   := fbCamera[14].xQStart;
QxCamera15Trigger   := fbCamera[15].xQStart;
QxCamera16Trigger   := fbCamera[16].xQStart;
QxCamera17Trigger   := fbCamera[17].xQStart;
//贴标工位相机光源触发
IF  fbCamera[18].xQLight  THEN
 			QxCameraLight4Trigger:=TRUE;
ELSE
 			QxCameraLight4Trigger:=FALSE;
END_IF

//相机触发
QxCameraTrigger	:= fbCamera[18].xQStart; 


//相机型号
sCamera_From_Plc.iBoxType:=iBoxChoose;]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Cimcor" Id="{ab6ebf84-bf03-4a4d-a074-6941ccc45ff6}">
      <Implementation>
        <ST><![CDATA[FOR  i:= 1  TO gc_uiCimcorNum   BY 1  DO 
	fbCimcor[i](
	xIStart:= , 
	xIStop:= , 
	xIReset:= , 
	xICimcorMaint:= , 
	xIError:= , 
	xICimcorStarted:= , 
	xQError=> , 
	xQCimcorStart=> , 
	xQCimcorReset=> , 
	xQValveStart=> , 
	xQNeedMaint=> );
END_FOR
//离子风棒已开启
fbCimcor[1].xICimcorStarted:=IxStartSignal;
fbCimcor[1].xICimcorMaint:=IxMaintenanceSignal_1;//	卡片搬运工位¶离子风棒¶维护信号
fbCimcor[1].xIError:= NOT  IxErrorSignal_1;//	卡片搬运工位¶离子风棒¶异常信号

QxET02IonResetControl:=fbCimcor[1].xQCimcorReset;//	卡片搬运工位¶离子风棒¶复位信号
QxET02IonStopControl:=fbCimcor[1].xQCimcorStart;//卡片搬运工位¶离子风棒¶停止放电信号
										
//QxET02IonControlSignal1	:BOOL;//	卡片搬运工位¶离子风棒¶外部给定信号1
//QxET02IonControlSignal2	:BOOL;//	卡片搬运工位¶离子风棒¶外部给定信号2
//电磁阀控制
QxS09ControlValve:=fbCimcor[1].xQValveStart;//	卡片工位离子风棒气路控制]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Comm" Id="{b17cb29c-5b77-4461-9112-d1cc0492c03a}">
      <Implementation>
        <ST><![CDATA[//(*************************** Clock 1 Second Clock***********************************)
//tTonoff1s(IN:=NOT tTonOn1s.Q,PT:=T#1S);
//
//tTonOn1s(IN:= tTonOff1s.Q,PT:=T#1S);
//
//(****************************Alive bit************************************)
//IF  tTonoff1s.Q THEN
//	 sPLC_TO_PC.xPLCALive:=1 ;
//	
//ELSE
//	 sPLC_TO_PC.xPLCALive:=0;
//END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Cylinder" Id="{47c4f121-b56e-4fba-8775-97e3960514e4}">
      <Implementation>
        <ST><![CDATA[//上电复位
IF NOT xCylinder_First THEN
  FOR i :=1 TO gc_uiCylinderNum DO 
    fbCylinder[i].xHmi               :=FALSE;	 
  END_FOR
 	 xCylinder_First                :=TRUE;
END_IF


FOR i:= 1 TO gc_uiCylinderNum BY 1 DO 
fbCylinder[i](
	xEStop:=fbMachine[1].xEStop,  
	xSafety:=fbMachine[1].xSafety , 
	xManualMode:=fbMachine[1].xManualMode , 
	xAutoMode:=fbMachine[1].xAutoMode , 
	xAirOn:=fbMachine[1].xAirOn , 
	tAlarm:=stData.Cylinder[i].Alarm_Delay , 
	xReset:=fbMachine[1].xReset , 
	xTryRun:= fbmachine[1].xTryRun, 
	xAlarmDisable:= , 
	xHmi:= , 
	tHP_Delay:=stData.Cylinder[i].tHP_Delay , 
	tWP_Delay:=stData.Cylinder[i].tWP_Delay ,  
	xHP_Valve=> , 
	xWP_Valve=> , 
	xHP_Delay=> , 
	xWP_Delay=> );
END_FOR]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_EasyPump" Id="{fcb43c3f-3271-46fc-b327-5e9560180812}">
      <Implementation>
        <ST><![CDATA[fbEasyPumps[1].LocalClient.strSlaveIP:='192.168.1.60';
fbEasyPumps[1].LocalClient.iSlavePort:=1031;
fbEasyPumps[1].LocalClient.bySlaveID:=1;

fbEasyPumps[2].LocalClient.strSlaveIP:='192.168.1.61';
fbEasyPumps[2].LocalClient.iSlavePort:=1031;
fbEasyPumps[2].LocalClient.bySlaveID:=1;

fbEasyPumps[3].LocalClient.strSlaveIP:='192.168.1.62';
fbEasyPumps[3].LocalClient.iSlavePort:=1031;
fbEasyPumps[3].LocalClient.bySlaveID:=1;

fbEasyPumps[4].LocalClient.strSlaveIP:='192.168.1.63';
fbEasyPumps[4].LocalClient.iSlavePort:=1031;
fbEasyPumps[4].LocalClient.bySlaveID:=1;

fbEasyPumps[5].LocalClient.strSlaveIP:='192.168.1.66';
fbEasyPumps[5].LocalClient.iSlavePort:=1031;
fbEasyPumps[5].LocalClient.bySlaveID:=1;

fbEasyPumps[6].LocalClient.strSlaveIP:='192.168.1.65';
fbEasyPumps[6].LocalClient.iSlavePort:=1031;
fbEasyPumps[6].LocalClient.bySlaveID:=1;

fbEasyPumps[7].LocalClient.strSlaveIP:='192.168.1.67';
fbEasyPumps[7].LocalClient.iSlavePort:=1031;
fbEasyPumps[7].LocalClient.bySlaveID:=1;

fbEasyPumps[8].LocalClient.strSlaveIP:='192.168.1.68';
fbEasyPumps[8].LocalClient.iSlavePort:=1031;
fbEasyPumps[8].LocalClient.bySlaveID:=1;

fbEasyPumps[9].LocalClient.strSlaveIP:='192.168.1.69';
fbEasyPumps[9].LocalClient.iSlavePort:=1031;
fbEasyPumps[9].LocalClient.bySlaveID:=1;

fbEasyPumps[10].LocalClient.strSlaveIP:='192.168.1.71';
fbEasyPumps[10].LocalClient.iSlavePort:=1031;
fbEasyPumps[10].LocalClient.bySlaveID:=1;

fbEasyPumps[11].LocalClient.strSlaveIP:='192.168.1.70';
fbEasyPumps[11].LocalClient.iSlavePort:=1031;
fbEasyPumps[11].LocalClient.bySlaveID:=1;

fbEasyPumps[12].LocalClient.strSlaveIP:='192.168.1.64';
fbEasyPumps[12].LocalClient.iSlavePort:=1031;
fbEasyPumps[12].LocalClient.bySlaveID:=1;


//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[1].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[1].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[1].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[2].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[2].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[2].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[3].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[3].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[3].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[4].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[4].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[4].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[5].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[5].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[5].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[6].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[6].iPumpTypeSet:=stEasyPumpHeadType.i_HandyPump01;//设定泵泵头类型
stData.EasyPumps[6].iHosePipeTypeSet:=RudongPump_SoftPipeType.P13;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[7].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[7].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[7].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[8].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[8].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[8].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[9].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[9].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[9].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[10].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[10].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[10].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[11].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[11].iPumpTypeSet:=stEasyPumpHeadType.i_MiniPump01;//设定泵泵头类型
stData.EasyPumps[11].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.EasyPumps[12].iPumpType:=stEasyPumpType.i_DFPluse;//设定泵控制器类型
stData.EasyPumps[12].iPumpTypeSet:=stEasyPumpHeadType.i_HandyPump01;//设定泵泵头类型
stData.EasyPumps[12].iHosePipeTypeSet:=RudongPump_SoftPipeType.P13;//设定泵软管类型

///方向设定
stData.EasyPumps[1].iDirectionSet:=1;
stData.EasyPumps[2].iDirectionSet:=0;
stData.EasyPumps[3].iDirectionSet:=1;
stData.EasyPumps[4].iDirectionSet:=0;
stData.EasyPumps[5].iDirectionSet:=1;
stData.EasyPumps[6].iDirectionSet:=0;
stData.EasyPumps[7].iDirectionSet:=0;
stData.EasyPumps[8].iDirectionSet:=1;
stData.EasyPumps[9].iDirectionSet:=0;
stData.EasyPumps[10].iDirectionSet:=1;
stData.EasyPumps[11].iDirectionSet:=0;
stData.EasyPumps[12].iDirectionSet:=1;



stData.EasyPumps[1].iAccuracySet:=0.03;
stData.EasyPumps[2].iAccuracySet:=0.03;
stData.EasyPumps[3].iAccuracySet:=0.03;
stData.EasyPumps[4].iAccuracySet:=0.03;
stData.EasyPumps[5].iAccuracySet:=0.03;
stData.EasyPumps[6].iAccuracySet:=0.065;
stData.EasyPumps[7].iAccuracySet:=0.03;
stData.EasyPumps[8].iAccuracySet:=0.03;
stData.EasyPumps[9].iAccuracySet:=0.03;
stData.EasyPumps[10].iAccuracySet:=0.03;
stData.EasyPumps[11].iAccuracySet:=0.03;
stData.EasyPumps[12].iAccuracySet:=0.065;

FOR i:=1 TO gc_uiRudongPump BY 1 DO
 		IF  fbMachine[1].xReset THEN
 			  fbEasyPumps[i].xIReset:=TRUE;
	  END_IF
 		fbEasyPumps[i](
							xIReset:= , 
							xIManualMode:=fbMachine[1].xManualMode, 
							xIAutoMode:= fbMachine[1].xAutoMode, 
							xIEstop:= NOT fbMachine[1].xEStop,
							xIDeviceRunning:=TRUE, 
							stRunPara:= stData.EasyPumps[i], 
							stDeviceOpe:= , 
							xQBusy=> , 
							xQDone=> , 
							rMaxRunTime=> , 
							rMinRunTime=> );
END_FOR

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Encoder" Id="{f1ea336b-559f-45dc-b193-b39e15392513}">
      <Implementation>
        <ST><![CDATA[fbEncoder(
	xIErrorReset:= , 
	tDelay:=T#500MS, 
	xQBusy=> , 
	xQError=> , 
	iQErrorNo=> , 
	rQBeltSpeed=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_ERG_20C" Id="{103d88d2-46c2-497a-83dd-4108bc1998eb}">
      <Implementation>
        <ST><![CDATA[	fbERG[1].LocalClient.bySlaveID := 1;
	fbERG[1].LocalClient.strSlaveIP := '192.168.1.20';//从站IP地址
	fbERG[1].LocalClient.iSlavePort := 1030;	//四端口智嵌物联
	
	fbERG[2].LocalClient.bySlaveID := 1;
	fbERG[2].LocalClient.strSlaveIP := '192.168.1.21';//从站IP地址
	fbERG[2].LocalClient.iSlavePort := 1031;


FOR i:=1 TO gc_uiHITBOT_Number BY 1 DO
	IF fbMachine[1].xReset THEN
			  fbERG[i].xIReset:=TRUE;
	END_IF
 fbERG[i](
	xIReset:= , 
	xIManualMode:= fbMachine[1].xManualMode, 
	xIAutoMode:= fbMachine[1].xAutoMode, 
	xIDeviceRunning:=TRUE ,
	stRunPara:=stData.ERG20C[i] , 
	stDeviceOpe:= , 
	stDevice=> , 
	stPara=> , 
	stReadPara=> , 
	iQErrorID=> , 
	strQErrorID=> );
END_FOR

stData.ERG20C[1].aHMIClampPara[1].rCurrentSet:=0.4;
stData.ERG20C[1].aHMIClampPara[1].rPositionSet:=5;
stData.ERG20C[1].aHMIClampPara[1].rSpeedSet:=200;
stData.ERG20C[1].aHMIReleasePara[1].rCurrentSet:=0.4;
stData.ERG20C[1].aHMIReleasePara[1].rPositionSet:=15;
stData.ERG20C[1].aHMIReleasePara[1].rSpeedSet:=200;


stData.ERG20C[1].aHMIRotateClampPara[1].rCurrentSet:=0.5;
stData.ERG20C[1].aHMIRotateClampPara[1].rPositionSet:=180;
stData.ERG20C[1].aHMIRotateClampPara[1].rSpeedSet:=500;

stData.ERG20C[1].aHMIRotateReleasePara[1].rCurrentSet:=0.5;
stData.ERG20C[1].aHMIRotateReleasePara[1].rPositionSet:=0;
stData.ERG20C[1].aHMIRotateReleasePara[1].rSpeedSet:=300;

stData.ERG20C[2].aHMIClampPara[1].rCurrentSet:=0.4;
stData.ERG20C[2].aHMIClampPara[1].rPositionSet:=5;
stData.ERG20C[2].aHMIClampPara[1].rSpeedSet:=200;
stData.ERG20C[2].aHMIReleasePara[1].rCurrentSet:=0.4;
stData.ERG20C[2].aHMIReleasePara[1].rPositionSet:=15;
stData.ERG20C[2].aHMIReleasePara[1].rSpeedSet:=200;


stData.ERG20C[2].aHMIRotateClampPara[1].rCurrentSet:=0.9;
stData.ERG20C[2].aHMIRotateClampPara[1].rPositionSet:=180;
stData.ERG20C[2].aHMIRotateClampPara[1].rSpeedSet:=500;

stData.ERG20C[2].aHMIRotateReleasePara[1].rCurrentSet:=0.6;
stData.ERG20C[2].aHMIRotateReleasePara[1].rPositionSet:=0;
stData.ERG20C[2].aHMIRotateReleasePara[1].rSpeedSet:=300;]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_EtherCATSlaveState" Id="{82baf70d-045c-409e-acbd-7228533e07f2}">
      <Implementation>
        <ST><![CDATA[
(****************************************************Error Pause****************************************************)
(* EtherCAT Terminal error*)
FOR   i:=1 TO gc_uiSlaveNum BY 1 DO
fbEhterCATSlaveMonitor[i](
	xIActive:=TRUE ,
	xIReset:=fbMachine[1].xReset,
	axIState:= ,
	xQError=> ,
	iQErrorTerm=> );
END_FOR
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_FuShiPXF" Id="{b09a59ac-3cd6-459f-8f83-2c1f45c9ed70}">
      <Implementation>
        <ST><![CDATA[IF ( NOT _firstFuShiPXF) THEN
fbTempretureControl[1].stSysPar.strSlaveIP:='192.168.1.90';
fbTempretureControl[1].stSysPar.bySlaveID:=2;
fbTempretureControl[1].stSysPar.iSlavePort:=1032;
fbTempretureControl[2].stSysPar.strSlaveIP:='192.168.1.90';
fbTempretureControl[2].stSysPar.bySlaveID:=3;
fbTempretureControl[2].stSysPar.iSlavePort:=1033;
 _firstFuShiPXF := TRUE;
ELSE
FOR i:=1 TO gc_uiPXF5Num DO
fbTempretureControl[i](
	xEstop:= fbMachine[1].xEStop , 
	xStart:= , 
	xSvSet:= , 
	stSysPar:= , 
	stPar:= , 
	stParRead=> , 
	xRdy=> , 
	xPowerOut=> , 
	xError=> , 
	sError=> );
END_FOR

END_IF
//温控器控制加热棒使能
QxHeatRelayContorl1:=fbTempretureControl[1].xPowerOut;
QxHeatRelayContorl2:=fbTempretureControl[2].xPowerOut;

//QxEnableHeatingRod:=fbTempretureControl[1].xPowerOut AND fbTempretureControl[2].xPowerOut;
//S04_FilmCovering.xHeatingDeviceReady:=fbTempretureControl[1].xRdy AND fbTempretureControl[2].xRdy;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_GetTime" Id="{af91cf98-44db-4c9e-a3bb-6bfde1fc30e5}">
      <Implementation>
        <ST><![CDATA[PRG_GetSystemTime();

strLocalDateTime := SYSTEMTIME_TO_STRING(PRG_GetSystemTime.sQTime);
strDateTime := MID( strLocalDateTime,8,12 ) ;

stDateTime.sTempTimeYYMMDD:= MID (strLocalDateTime, 11, 1 );
stDateTime.sTempTimeHO:= MID (strLocalDateTime, 2, 12 );
stDateTime.sTempTimeMI:= MID (strLocalDateTime, 2, 15 );
stDateTime.sTempTimeSe:= MID (strLocalDateTime, 2, 18 );


FBGetTime(
	i_b_start:= , 
	i_b_withoutHs:= , 
	o_b_ok=> , 
	o_b_err=> , 
	o_udi_ErrId=> , 
	o_DateAndTime=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_LoadCell" Id="{c3db498e-8be5-45e5-8db9-c1ffc95aaf93}">
      <Implementation>
        <ST><![CDATA[fbLoadCell[1].LocalClient.strSlaveIP:='192.168.1.73';
fbLoadCell[1].LocalClient.iSlavePort:=1030;
fbLoadCell[1].LocalClient.bySlaveID:=1;

fbLoadCell[2].LocalClient.strSlaveIP:='192.168.1.73';
fbLoadCell[2].LocalClient.iSlavePort:=1031;
fbLoadCell[2].LocalClient.bySlaveID:=2;

fbLoadCell[3].LocalClient.strSlaveIP:='192.168.1.74';
fbLoadCell[3].LocalClient.iSlavePort:=1030;
fbLoadCell[3].LocalClient.bySlaveID:=3;

fbLoadCell[4].LocalClient.strSlaveIP:='192.168.1.74';
fbLoadCell[4].LocalClient.iSlavePort:=1031;
fbLoadCell[4].LocalClient.bySlaveID:=4;


fbLoadCell[5].LocalClient.strSlaveIP:='192.168.1.75';
fbLoadCell[5].LocalClient.iSlavePort:=1030;
fbLoadCell[5].LocalClient.bySlaveID:=5;


fbLoadCell[6].LocalClient.strSlaveIP:='192.168.1.75';
fbLoadCell[6].LocalClient.iSlavePort:=1031;
fbLoadCell[6].LocalClient.bySlaveID:=6;



FOR i:=1 TO gc_uiLoadcellNum  DO
	fbLoadCell[i](
	xIStart:= , 
	xIReset:= , 
	LocalClient:= , 
	stDeviceOpe:= , 
	xIDeviceRunning:=TRUE , 
	xManualMode:= fbMachine[1].xManualMode, 
	xAutoMode:= fbMachine[1].xAutoMode, 
	xQRdyCmd=> , 
	xQBusy=> , 
	xQError=> , 
	xQDone=> , 
	stParOut=> );
END_FOR
//清零或去皮信号
QxLoadCell_1ZeroInput:=fbLoadCell[1].xQZeroSingle;
QxLoadCell_2ZeroInput:=fbLoadCell[2].xQZeroSingle;
QxLoadCell_3ZeroInput:=fbLoadCell[3].xQZeroSingle;
QxLoadCell_4ZeroInput:=fbLoadCell[4].xQZeroSingle;
QxLoadCell_5ZeroInput:=fbLoadCell[5].xQZeroSingle;
QxLoadCell_6ZeroInput:=fbLoadCell[6].xQZeroSingle;


]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_M0dbus_200Smart" Id="{f9c3f295-f0f9-4ed8-a615-986545a73617}">
      <Implementation>
        <ST><![CDATA[fbModbus_200Smart.stPara.strSlaveIP:='192.168.1.2';
fbModbus_200Smart.stPara.iSlavePort:=502;
fbModbus_200Smart.stPara.bySlaveID:=1;
fbModbus_200Smart(stPara:= , pSysTo200Smart:= , pSysFrom200Smart:= , st_IOData:=sModbus_200SMART );
//Output-Mapping
IF  fbMachine[1].xManualMode THEN
sModbus_200SMART.iMachineMode:=1;
ELSIF fbMachine[1].xAutoMode THEN
sModbus_200SMART.iMachineMode:=2;
END_IF
IF  fbMachine[1].xRunning THEN 
sModbus_200SMART.iMachineStart:=1;
END_IF 
IF fbMachine[1].xStop OR fbMachine[1].xPause THEN 
sModbus_200SMART.iMachineStop:=1;
ELSE
 sModbus_200SMART.iMachineStop:=0;
END_IF
IF  fbMachine[1].xIniting THEN 
	sModbus_200SMART.iMachineIniting:=1 ;
ELSE
	sModbus_200SMART.iMachineIniting:=0 ;
END_IF
IF fbStation[11].xDisabled THEN  
	sModbus_200SMART.iMachineDisable:=1 ;
ELSE
 sModbus_200SMART.iMachineDisable:=1 ;
END_IF


]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Machine" Id="{bab62686-8cb4-497f-97e7-e00927dbc989}">
      <Implementation>
        <ST><![CDATA[

FOR i:=1 TO gc_uiMachineNum DO
fbMachine[i](
	xEmptyHmi:= , 
	xTryRun:= , 
	xEmptyConfirmHmi:= , 
	xInitConfirm:= ,
  xStart:= IxStartButton OR fbProface[1].xStartHmi ,
  xStop:= IxStopButton OR fbProface[1].xStopHmi ,
  xReset:= IxResetButton OR fbProface[1].xResetHmi ,
  xPause:= IxStopButton OR fbProface[1].xPauseHmi ,
  xInit:=IxInitButton OR fbProface[1].xInitHmi ,
  xManualMode:= (IxManualMode ), 
  xAutoMode:= ( IxAutoMode ) ,	 
	xRunning=>  , 
	xEmptying=> ,
	xEStopped=> , 
	xIniting=>  , 
	diCycleTime => ,
	xStopped=> , 
	xPaused=> , 	
   );
	END_FOR
QxRedLamp:=
QxRedLamp_1	 :=fbMachine[1].xLampRed;	
QxYellowLamp:=
QxYellowLamp_1 :=fbMachine[1].xLampYellow 	;///初始化完成后也需要将黄灯常亮
QxGreenLamp:=
QxGreenLamp_1 :=fbMachine[1].xLampGreen;	
IF  NOT   _BuzzerBypassButton  THEN
	QxBuzzer:=fbMachine[1].xLampBuzzer;
ELSE
	QxBuzzer:=FALSE;
END_IF
IF  _BuzzerBypassButton THEN
	_BuzzerBypassLamp:=TRUE;
ELSE
	_BuzzerBypassLamp:=FALSE;
END_IF
QxStartButtonLamp	:=fbMachine[1].xStartLight;
QxStopButtonLamp	:=fbMachine[1].xStopLight;	
QxResetButtonLamp	:=fbMachine[1].xResetLight;	
QxInitButtonLamp	:=fbMachine[1].xInitLight;	

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_MT_MCK" Id="{b40e9d7a-e717-425f-8a9e-241bc2a7f0f5}">
      <Implementation>
        <ST><![CDATA[fbMCK204W.stSysPar.sRemoteHost:='192.168.1.72';
fbMCK204W.stSysPar.nRemotePort:=1030;
fbMCK204W.stSysPar.bySlaveID:=1;
fbMCK204W.xDeviceRunning:=fbAutoCal.xRunning;
fbMCK204W(
	xExecute:= , 
	xAbort:= , 
	xEstop:=  fbMachine[1].xEStop, 
	xDeviceRunning:= , 
	xResetRequest:= , 
	stDeviceOpe:= , 
	stpar:= , 
	stSysPar:= , 
	dwTimeOut:= , 
	xManualHMIControl:= , 
	xAutoMode:= , 
	xIniting:= , 
	xDone=> , 
	xBusy=> , 
	xError=> , 
	eErrorID=> , 
	eTCPErrorID=> , 
	xRdyCmd=> , 
	xRefOk=> , 
	stParOut=> );
	
	
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_MT_MCK_1" Id="{ff6064f6-d518-4bc2-b24f-0523ce6bbbbb}">
      <Implementation>
        <ST><![CDATA[fbMCK.stSysPar.sRemoteHost:='192.168.1.72';
fbMCK.stSysPar.nRemotePort:=1030;
fbMCK.stSysPar.bySlaveID:=1;

fbMCK(
	xIReset:=(*fbMachine[1].xReset*) , 
	xIInit:= , 
	iICodeLEN:= 20, 
	iICodePOS:= 1, 
	xIDeviceRunning:= TRUE, 
	xManualMode:=fbMachine[1].xManualMode , 
	xAutoMode:=fbMachine[1].xAutoMode , 
	stDeviceOpe:= , 
	stpar:= , 
	stSysPar:= , 
	xQRdyCmd=> , 
	xQDone=> , 
	strQBarCode=> , 
	xQBusy=> , 
	xQError=> , 
	xQNoRead=> , 
	iQErrorNo=> , 
	stParOut=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_PeristalticPump" Id="{118cab21-fbc1-437a-8471-f769fdf59f60}">
      <Implementation>
        <ST><![CDATA[fbRudongPump[1].stPara.strSlaveIP:='192.168.1.60';
fbRudongPump[1].stPara.iSlavePort:=1031;
fbRudongPump[1].stPara.bySlaveID:=1;

fbRudongPump[2].stPara.strSlaveIP:='192.168.1.61';
fbRudongPump[2].stPara.iSlavePort:=1031;
fbRudongPump[2].stPara.bySlaveID:=1;

fbRudongPump[3].stPara.strSlaveIP:='192.168.1.62';
fbRudongPump[3].stPara.iSlavePort:=1031;
fbRudongPump[3].stPara.bySlaveID:=1;

fbRudongPump[4].stPara.strSlaveIP:='192.168.1.63';
fbRudongPump[4].stPara.iSlavePort:=1031;
fbRudongPump[4].stPara.bySlaveID:=1;

fbRudongPump[5].stPara.strSlaveIP:='192.168.1.66';
fbRudongPump[5].stPara.iSlavePort:=1031;
fbRudongPump[5].stPara.bySlaveID:=1;

fbRudongPump[6].stPara.strSlaveIP:='192.168.1.65';
fbRudongPump[6].stPara.iSlavePort:=1031;
fbRudongPump[6].stPara.bySlaveID:=1;

fbRudongPump[7].stPara.strSlaveIP:='192.168.1.67';
fbRudongPump[7].stPara.iSlavePort:=1031;
fbRudongPump[7].stPara.bySlaveID:=1;

fbRudongPump[8].stPara.strSlaveIP:='192.168.1.68';
fbRudongPump[8].stPara.iSlavePort:=1031;
fbRudongPump[8].stPara.bySlaveID:=1;

fbRudongPump[9].stPara.strSlaveIP:='192.168.1.69';
fbRudongPump[9].stPara.iSlavePort:=1031;
fbRudongPump[9].stPara.bySlaveID:=1;

fbRudongPump[10].stPara.strSlaveIP:='192.168.1.71';
fbRudongPump[10].stPara.iSlavePort:=1031;
fbRudongPump[10].stPara.bySlaveID:=1;

fbRudongPump[11].stPara.strSlaveIP:='192.168.1.70';
fbRudongPump[11].stPara.iSlavePort:=1031;
fbRudongPump[11].stPara.bySlaveID:=1;

fbRudongPump[12].stPara.strSlaveIP:='192.168.1.64';
fbRudongPump[12].stPara.iSlavePort:=1031;
fbRudongPump[12].stPara.bySlaveID:=1;

//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[1].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[1].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[1].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[2].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[2].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[2].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[3].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[3].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[3].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[4].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[4].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[4].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[5].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[5].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[5].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[6].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[6].iPumpTypeSet:=RudongPump_PumpHeadType.HandyPump01;//设定泵泵头类型
stData.RudongPump[6].iHosePipeTypeSet:=RudongPump_SoftPipeType.P13;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[7].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[7].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[7].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[8].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[8].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[8].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[9].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[9].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[9].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[10].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[10].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[10].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[11].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[11].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[11].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[12].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[12].iPumpTypeSet:=RudongPump_PumpHeadType.HandyPump01;//设定泵泵头类型
stData.RudongPump[12].iHosePipeTypeSet:=RudongPump_SoftPipeType.P13;//设定泵软管类型

///方向设定
fbRudongPump[1].iDirectionSet:=1;
fbRudongPump[2].iDirectionSet:=0;
fbRudongPump[3].iDirectionSet:=1;
fbRudongPump[4].iDirectionSet:=0;
fbRudongPump[5].iDirectionSet:=1;
fbRudongPump[6].iDirectionSet:=0;
fbRudongPump[7].iDirectionSet:=0;
fbRudongPump[8].iDirectionSet:=1;
fbRudongPump[9].iDirectionSet:=0;
fbRudongPump[10].iDirectionSet:=1;
fbRudongPump[11].iDirectionSet:=0;
fbRudongPump[12].iDirectionSet:=1;



FOR i :=1 TO gc_uiRudongPump BY 1 DO
	fbRudongPump[i](
	xExecute:= , 
	xAbort:= , 
	xResetRequest:=, 
	xRunILC:=TRUE , 
	dwTimeLimit:= , 
	dwTimeOut:= , 
	stPara:=, 
	xNeedConfigurePara:= , 
	stRunPara:=stData.RudongPump[i] , 
	xAutoMode:=fbMachine[1].xAutoMode , 
	xIniting:= , 
	xDeviceRunning:= , 
	rSpeedRatio:= , 
	sHmiError:= , 
	xEStop:= fbMachine[1].xEStop , 
	stDeviceOpe:= , 
	xDone=> , 
	xBusy=> , 
	xError=> , 
	xAborted=> , 
	xRunning=> , 
	xRudongPump_ERROR=> , 
	eERRORID=> , 
	xRdyCmd=> );
	
	//确定蠕动泵注液方向
	IF  fbMachine[1].xManualMode THEN
			 IF i MOD 2  = 0 THEN 
							 fbRudongPump[i].iDirectionSet:=0;
			 ELSE
							 fbRudongPump[i].iDirectionSet:=1;
			 END_IF
	END_IF
END_FOR
//IF NOT _xCalFirstCycle THEN
////	fbAutoCal.stSysPar.fbMTMCK204C:=ADR	(fbMCK204W);
//	fbAutoCal.stSysPar.fbMTMCK204C:=ADR	(fbMCK);
//	fbAutoCal.stSysPar.fbRuDongPump:=ADR(fbRudongPump[1]);
//	fbAutoCal.stparIn.iContinuesInjectNum:=5;//连续加液次数
//	fbAutoCal.stparIn.rDensity:=1;//密度为1
//	fbAutoCal.stparIn.tSteadyTime:=5;//稳定5秒
//	fbAutoCal.stparIn.iPumpController:=1;//控制器个数
//	_xCalFirstCycle:=TRUE;
//ELSE
//	fbAutoCal(
//		xExecute:= , 
//		xAbort:= , 
//		xEstop:= fbMachine[1].xEStop, 
//		xDeviceRunning:= , 
//		xResetRequest:= , 
//		stDeviceOpe:= , 
//		stparIn:= , 
//		stSysPar:= , 
//		xAutoMode:= , 
//		xIniting:= , 
//		xDone=> , 
//		xBusy=> , 
//		xError=> , 
//		eERRORID=> , 
//		xRdyCmd=> , 
//		xRdy=> , 
//		stParOut=> );	
//END_IF

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_PeristalticPump_1" Id="{99ca86de-fdd8-46b6-bc2f-8d111be106f7}">
      <Implementation>
        <ST><![CDATA[fbRudongPumpModbusTcp[1].stPara.strSlaveIP:='192.168.1.60';
fbRudongPumpModbusTcp[1].stPara.nRemotePort:=1031;
fbRudongPumpModbusTcp[1].stPara.bySlaveID:=16#01;
//如果泵参数固定，就直接配置好，如果不固定，就在触摸屏配置
stData.RudongPump[1].iPumpType:=RudongPump_PumpType.DFPluse;//设定泵控制器类型
stData.RudongPump[1].iPumpTypeSet:=RudongPump_PumpHeadType.MiniPump01;//设定泵泵头类型
stData.RudongPump[1].iHosePipeTypeSet:=RudongPump_SoftPipeType.P19;//设定泵软管类型
FOR i:=1 TO gc_uiRudongPump DO
	fbRudongPumpModbusTcp[i].xAutoMode:=fbMachine[1].xAutoMode OR fbAutoCal.xRunning;
	fbRudongPumpModbusTcp[i](
	xExecute:= , 
	xAbort:= , 
	xResetRequest:=, 
	xRunILC:= true, 
	dwTimeLimit:= , 
	dwTimeOut:= , 
	stPara:= , 
	xNeedConfigurePara:= , 
	stRunPara:=stData.RudongPump[i] , 
	xAutoMode:= , 
	xIniting:= , 
	xDeviceRunning:= , 
	rSpeedRatio:= , 
	sHmiError:= , 
	xEStop:=fbMachine[1].xEStop or true , 
	stDeviceOpe:= , 
	xDone=> , 
	xBusy=> , 
	xError=> , 
	xAborted=> , 
	xRunning=> , 
	xRudongPump_ERROR=> , 
	eERRORID=> , 
	xRdyCmd=> );
END_FOR]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Proface" Id="{c00a8f00-9a31-4dcc-a3b6-8c5d4688684b}">
      <Implementation>
        <ST><![CDATA[
fbProface[1](
	xEStop									:=fbMachine[1].xEStop,
	xSafety									:=fbMachine[1].xSafety,
	xManualMode							:=fbMachine[1].xManualMode,
	xAutoMode								:=fbMachine[1].xAutoMode,
	xAlarm									:=fbMachine[1].xAlarm,
	xTip										:=fbMachine[1].xTip,
	xInit										:=fbMachine[1].xInit,
	xIniting								:=fbMachine[1].xIniting,
	xInitDone								:=fbMachine[1].xInitDone,
	xDummyCheckDone					:=fbMachine[1].xDummyDone,
	xEmptyDone							:=fbMachine[1].xEmptyDone,
);
(*fbProface[1].strSystemTime[1]:=stDateTime.sTempTimeYYMMDD;
fbProface[1].strSystemTime[2]:=CONCAT(CONCAT( CONCAT(CONCAT(stDateTime.sTempTimeHO,':'),stDateTime.sTempTimeMI ),':'),stDateTime.sTempTimeSe);
*)]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Recipe" Id="{23a5f722-6788-455f-95d2-eafe4c09c1e7}">
      <Implementation>
        <ST><![CDATA[(*FOR  iRec:=1 TO gc_RecipeNum BY 1 DO
	fb_Recipes[iRec](
	xICreateRecipe:= , 
	xILoadRecipe:= , 
	xIDeleteRecipe:= , 
	strRecipeDefinitionName:= , 
	RecipeName:= , 
	FileName:= , 
	xQBusy=> , 
	xQErrorID=> );
END_FOR
(************************Axis Recipe*************************)
fb_Recipes[1].strRecipeDefinitionName:='Recipe_Axis';
fb_Recipes[1].RecipeName:='Axis_1';
fb_Recipes[1].FileName:='\Hard Disk1\Recipefiles';
(************************Cylinder Recipe*************************)
fb_Recipes[2].strRecipeDefinitionName:='Recipe_Cylinder';
fb_Recipes[2].RecipeName:='Cylinder_1';
fb_Recipes[2].FileName:='\Hard Disk1\Recipefiles';
(************************RGI Recipe*************************)
fb_Recipes[3].strRecipeDefinitionName:='Recipe_RGI';
fb_Recipes[3].RecipeName:='RGI_1';
fb_Recipes[3].FileName:='\Hard Disk1\Recipefiles';
(************************Robot Recipe*************************)
fb_Recipes[4].strRecipeDefinitionName:='Recipe_Robot';
fb_Recipes[4].RecipeName:='Robot_1';
fb_Recipes[4].FileName:='\Hard Disk1\Recipefiles';
(************************Tray Recipe*************************)
fb_Recipes[5].strRecipeDefinitionName:='Recipe_Tray';
fb_Recipes[5].RecipeName:='Tray_1';
fb_Recipes[5].FileName:='\Hard Disk1\Recipefiles';
*)]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_RGI_14" Id="{420d82d1-f1aa-4e7a-824e-853aa18d7fe0}">
      <Implementation>
        <ST><![CDATA[
	
IF NOT xRGI4_First THEN
	fbRGI_14_Modbus[1].stPara.bySlaveID := 1;
	fbRGI_14_Modbus[1].stPara.strSlaveIP := '192.168.1.90';//从站IP地址
	fbRGI_14_Modbus[1].stPara.iSlavePort := 1030;	
	xRGI4_First := TRUE;
ELSE
	//进行函数调用
	FOR i:=1 TO gc_uiRGI_14_Number BY 1 DO 
		fbRGI_14_Modbus[i](
		xExecute:= , 
		xAbort:=FALSE , 
		xPowerHmi:= TRUE, 
		xResetRequest:=fbMachine[1].xReset , 
		dwTimeLimit:= , 
		dwTimeOut:= , 
		stPara:= , 
		xAutoMode:=fbMachine[1].xAutoMode, 
		xIniting:= , 
		stPosPara:= stData.RGI14[i], 
		xDeviceRunning:= , 
		stOper:= , 
		xDone=> , 
		xBusy=> , 
		xAborted=> , 
		xError=> , 
		eErrorID=> , 
		xRdyCmd=> , 
		xRefOk=> , 
		eClampActCmd=> , 
		iClampStatus=> , 
		xGripClampEmpty=> , 
		xDropOccur=> , 
		xClosecoverFailure=> , 
		xOpencoverFailure=> , 
		sHmiError=> , 
		stRGIStates=> , 
		eCommErrorID=> , 
		eOperErrorID=> , 
		st_IOData:= st_RGI_IOData);
	END_FOR
END_IF


//手动输入初始值
IF xRecipeRGI14ParSetButton THEN 
	FOR i:=1 TO gc_uiRGI_14_Number BY 1 DO 
		FOR j:= 1 TO 5 BY 1 DO
			stData.RGI14[i].aHMIClampiPosAngleSet[j] := 
			stData.RGI14[i].aHMIClampiSpeedSet[j] := 
			stData.RGI14[i].aHMIClampiTorqueSet[j] := 
			stData.RGI14[i].aHMIReleasepiPosAngleSet[j] :=
			stData.RGI14[i].aHMIReleasepiSpeedSet[j]:= 
			stData.RGI14[i].aHMIReleasepiTorqueSet[j]:= 
			stData.RGI14[i].aHMIRotateClampiPosAngleSet[j] :=
			stData.RGI14[i].aHMIRotateClampiSpeedSet[j] :=
			stData.RGI14[i].aHMIRotateiTorqueSet[j] :=
			stData.RGI14[i].aHMIRotateReleaseiPosAngleSet[j] :=
			stData.RGI14[i].aHMIRotateReleaseiSpeedSet[j] :=
			stData.RGI14[i].aHMIRotateReleaseiTorqueSet[j]:= 100 ; 
	   END_FOR
	END_FOR
		xRecipeRGI14ParSetButton := FALSE ;
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_SmcVacuum" Id="{5bb7a1f9-f204-464c-ba7f-304e79743d64}">
      <Implementation>
        <ST><![CDATA[
FOR   i:=1 TO gc_uiValveNum BY 1 DO
 fbSmcVacuum[i](
	 xIAutoMode:=fbMachine[1].xAutoMode , 
	 xIManualMode:=fbMachine[1].xManualMode , 
	 xIVacuumWork:= , 
	 xIVacuumBroken:= , 
	 xIVacuumWorkHMI:= , 
	 xIVacuumBrokenHMI:= , 
	 xIDeviceRunning:= , 
	 xIVacuumWorkReached:= , 
	 xIVacuumBrokenReached:= , 
	 xQVacuumFeedValve=> , 
	 xQVacuumBrokenValve=> );
END_FOR

//真空吸反馈信号
fbSmcVacuum[1].xIVacuumWorkReached:=	IxS08Vacuum1_Output2	;//	卡片搬运工位¶真空发生器1¶输出OUT1
fbSmcVacuum[1].xIVacuumBrokenReached:=IxS08Vacuum1_Output1;//	卡片搬运工位¶真空发生器1¶输出OUT2
fbSmcVacuum[2].xIVacuumWorkReached:=IxS08Vacuum2_Output2	;//	卡片搬运工位¶真空发生器2¶输出OUT1
fbSmcVacuum[2].xIVacuumBrokenReached:=IxS08Vacuum2_Output1	;//	卡片搬运工位¶真空发生器2¶输出OUT2
//真空吸输出信号

QxVacuum1_FeedValveControl:=fbSmcVacuum[1].xQVacuumFeedValve;
QxVacuum1_BreakValveControl:=fbSmcVacuum[1].xQVacuumBrokenValve;
QxVacuum2_FeedValveControl:=fbSmcVacuum[2].xQVacuumFeedValve;
QxVacuum2_BreakValveControl:=fbSmcVacuum[2].xQVacuumBrokenValve;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Station" Id="{3999f035-149a-4ac3-bc26-3846c7e0b5a6}">
      <Implementation>
        <ST><![CDATA[//上电复位
IF NOT xStation_First THEN
  FOR i:=1 TO gc_uiStationNum DO 
    fbStation[i].xCycleRunHmi:=FALSE;
    fbStation[i].xInitHmi:=FALSE;
    fbStation[i].xJogRunHmi:=FALSE;
    fbStation[i].xPauseHmi:=FALSE;
  END_FOR
  	xStation_First:=TRUE;
END_IF

FOR i:=1 TO gc_uiStationNum DO
	fbStation[i](
		xEStop:=fbMachine[1].xEStop , 
		xKey:=fbMachine[1].xKey , 
		xSafety:=fbMachine[1].xSafety , 
		xManualMode:=fbMachine[1].xManualMode , 
		xReset:=fbMachine[1].xReset , 
		xMachinePause:=fbMachine[1].xPause , 
		xMachineReInit:=fbMachine[1].xReInit , 
		xMachineIniting:=fbMachine[1].xIniting , 
		xMachineRunning:=fbMachine[1].xRunning , 
		tInitTimeout:= , 
		xInitHmi:= , 
		xInitDone:= , 
		xDisabled:= , 
		xCycleRunHmi:= , 
		xJogRunHmi:= , 
		xPauseHmi:= , 
		xCycleRunning=> , 
		xJogRunning=> , 
		xSingleRunning=> , 
		xRunning=> , 
		uiState=> , 
		diCycleTime =>   
	);
	StepAutoTransR_TRIG[i](CLK:=fbstation[i].xQStepAutoTrans , Q=> );
	IF StepAutoTransR_TRIG[i].Q  THEN
		FOR infor := 1 TO gc_StepHistory DO
			MEMCPY ( ADR(arStepAuto.Staion[i].History[infor-1]), ADR(arStepAuto.Staion[i].History[infor]), SIZEOF(arStepAuto.Staion[i].History[infor]));(* length      *)
		END_FOR		
		StepAutoTransR_TRIG[i](CLK:=FALSE );						
	END_IF
	
	 arStepAuto.Staion[i].History[gc_StepHistory]:=CONCAT(CONCAT(CONCAT('AutoStep:=' ,INT_TO_STRING(fbstation[i].iStepAuto)),'\\'),strLocalDateTime);
	 
	 
	 StepInitTransR_TRIG[i](CLK:=fbstation[i].xQStepInitTrans , Q=> );
	IF  StepInitTransR_TRIG[i].Q  THEN
		FOR infor := 1 TO gc_StepHistory DO
			MEMCPY ( ADR(arStepinit.Staion[i].History[infor-1]), ADR(arStepinit.Staion[i].History[infor]), SIZEOF(arStepinit.Staion[i].History[infor]));(* length      *)
		END_FOR	
		StepInitTransR_TRIG[i](CLK:=FALSE );										
	END_IF
	
	 	 arStepinit.Staion[i].History[gc_StepHistory]:=CONCAT(CONCAT(CONCAT('InitStep:=' ,INT_TO_STRING(fbstation[i].iStepInit)),'\\'),strLocalDateTime);
END_FOR
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_System" Id="{b0ec95fc-9334-4ecc-ab3a-bfc54000fc34}">
      <Implementation>
        <ST><![CDATA[
//	生成特定周期的振荡矩形波，可用于指示灯的闪烁，不可用于精确计时
fb_Blinker[1](
	tBlink:=T#10MS,
	bBlink=>stSysPulse.xP10ms,
	brBlink=>stSysPulse.xR10ms,
	bfBlink=>stSysPulse.xF10ms
);
fb_Blinker[2](
	tBlink:=T#20MS,
	bBlink=>stSysPulse.xP20ms,
	brBlink=>stSysPulse.xR20ms,
	bfBlink=>stSysPulse.xF20ms
);
fb_Blinker[3](
	tBlink:=T#50MS,
	bBlink=>stSysPulse.xP50ms,
	brBlink=>stSysPulse.xR50ms,
	bfBlink=>stSysPulse.xF50ms
);
fb_Blinker[4](
	tBlink:=T#100MS,
	bBlink=>stSysPulse.xP100ms,
	brBlink=>stSysPulse.xR100ms,
	bfBlink=>stSysPulse.xF100ms
);
fb_Blinker[5](
	tBlink:=T#200MS,
	bBlink=>stSysPulse.xP200ms,
	brBlink=>stSysPulse.xR200ms,
	bfBlink=>stSysPulse.xF200ms
);
fb_Blinker[6](
	tBlink:=T#500MS,
	bBlink=>stSysPulse.xP500ms,
	brBlink=>stSysPulse.xR500ms,
	bfBlink=>stSysPulse.xF500ms
);
fb_Blinker[7](
	tBlink:=T#1S,
	bBlink=>stSysPulse.xP1s,
	brBlink=>stSysPulse.xR1s,
	bfBlink=>stSysPulse.xF1s
);
fb_Blinker[8](
	tBlink:=T#2S,
	bBlink=>stSysPulse.xP2s,
	brBlink=>stSysPulse.xR2s,
	bfBlink=>stSysPulse.xF2s
);
fb_Blinker[9](
	tBlink:=T#5S,
	bBlink=>stSysPulse.xP5s,
	brBlink=>stSysPulse.xR5s,
	bfBlink=>stSysPulse.xF5s
);
fb_Blinker[10](
	tBlink:=T#10S,
	bBlink=>stSysPulse.xP10s,
	brBlink=>stSysPulse.xR10s,
	bfBlink=>stSysPulse.xF10s
);
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_TURINRobot" Id="{760a16bc-7812-4f75-942c-9b9b07f2cf6e}">
      <Implementation>
        <ST><![CDATA[IF NOT _firstTURINRobot
THEN
	fbTURINContorl[1].stPara.strSlaveIP := '192.168.1.111';
	fbTURINContorl[1].stPara.bySlaveID := 1;
	fbTURINContorl[1].stPara.iSlavePort :=502;
	_firstTURINRobot := TRUE;
ELSE
	//控制功能块实例化
	FOR i:=1 TO gc_uiTURINRobot_Num DO
		fbTURINContorl[i](
			xManuMode:= fbMachine[1].xManualMode , 
			xAutoRunning:= fbMachine[1].xRunning , 
			xEStop:= fbMachine[1].xEStop  ,  
			xReset:= (fbMachine[1].xReset ) , 
			xStart:= (fbMachine[1].xStart ) , 
			xStop:= fbMachine[1].xStop , 
			xPause:= fbMachine[1].xPause , 
			xMovePermit:=  fbStation[7].xAlarm AND  NOT  fbMachine[1].xSafety AND stFromRobot.xLocal_Remote,
			xContinue:= , 
			//xInitExte:= S03_Robot.xInit, 
			xInitExte:=,
			xClearInitedFlag:= , 
			xInitedFlag=> , 
			xInitFinish=> , 
			iCurrentStatus=> , 
			eErrID=> ,
      stData:=stData.TURIN[i]);	

    END_FOR	


END_IF
//TO ROBOT
fbTURINContorl[1].pSysToRobot[1]    := stToRobot1.iMoveMode; 
fbTURINContorl[1].pSysToRobot[2]    := stToRobot1.iRatio;
fbTURINContorl[1].pSysToRobot[3].0  := stToRobot1.xStepRunPermit;
fbTURINContorl[1].pSysToRobot[3].1  := stToRobot1.xPickPos1Premit ;      
fbTURINContorl[1].pSysToRobot[3].2  := stToRobot1.xPickPos2Premit  ;      
fbTURINContorl[1].pSysToRobot[3].3  := stToRobot1.xPickPos3Premit ;       
fbTURINContorl[1].pSysToRobot[3].4  := stToRobot1.xPickTransferPosPremit; 
fbTURINContorl[1].pSysToRobot[3].5  := stToRobot1.xPutPos1Premit    ;     
fbTURINContorl[1].pSysToRobot[3].6  := stToRobot1.xPutPos2Premit    ;     
fbTURINContorl[1].pSysToRobot[3].7  := stToRobot1.xPutPos3Premit    ;    
fbTURINContorl[1].pSysToRobot[3].8  := stToRobot1.xPutPos4Premit    ;     
fbTURINContorl[1].pSysToRobot[3].9  := stToRobot1.xClampPartDone  ;     
fbTURINContorl[1].pSysToRobot[3].10 := stToRobot1.xReleasePartDone ;    

//FROM ROBOT
stFromRobot.xEstop					  	    := fbTURINContorl[1].pSysFromRobot[0].00;
stFromRobot.xLocal_Remote				    := fbTURINContorl[1].pSysFromRobot[0].02;
stFromRobot.xEnable				          := fbTURINContorl[1].pSysFromRobot[0].03;
stFromRobot.xRuntip				          := fbTURINContorl[1].pSysFromRobot[1].08;
stFromRobot.xStopTip				        := fbTURINContorl[1].pSysFromRobot[1].09;
                                    
stFromRobot1.xHomePosReached         	 	 := fbTURINContorl[1].pSysFromRobot[3].00;
stFromRobot1.xPickPos1Reached              := fbTURINContorl[1].pSysFromRobot[3].01;
stFromRobot1.xPickPos2Reached              := fbTURINContorl[1].pSysFromRobot[3].02;
stFromRobot1.xPickPos3Reached              := fbTURINContorl[1].pSysFromRobot[3].03;
stFromRobot1.xPickTransferPosReached       := fbTURINContorl[1].pSysFromRobot[3].04;
stFromRobot1.xPutPos1Reached          	    := fbTURINContorl[1].pSysFromRobot[3].05;
stFromRobot1.xPutPos2Reached               := fbTURINContorl[1].pSysFromRobot[3].06;
stFromRobot1.xPutPos3Reached         	    := fbTURINContorl[1].pSysFromRobot[3].07;
stFromRobot1.xPutPos4Reached          	    := fbTURINContorl[1].pSysFromRobot[3].08;
stFromRobot1.xStepRunning                  := fbTURINContorl[1].pSysFromRobot[3].09;
stFromRobot1.xStepRunDone                  := fbTURINContorl[1].pSysFromRobot[3].10;
stFromRobot1.xInitOK                      	:= fbTURINContorl[1].pSysFromRobot[3].11;
stFromRobot1.xOutofseg1                     := fbTURINContorl[1].pSysFromRobot[3].14;
stFromRobot1.xOutofseg2                     := fbTURINContorl[1].pSysFromRobot[3].12;
stFromRobot1.xOutofseg3                     := fbTURINContorl[1].pSysFromRobot[3].13;



                                    ]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_UPS" Id="{e4391efc-d1f1-46b0-8a19-32f7ecb84c12}">
      <Implementation>
        <ST><![CDATA[GVL_UPS.fb_1sUPS(
	sNetID:= , 
	iPLCPort:=851 , 
	iUPSPort:=16#588 , 
	tTimeout:= , 
	eUpsMode:=eSUPS_WrPersistData_Shutdown , 
	ePersistentMode:=SPDM_2PASS , 
	tRecoverTime:=T#20S , 
	bPowerFailDetect=> , 
	eState=> );
	
IF  eGlobalSUpsState =eSUPS_PowerOK    THEN  ///外部供电正常  
	///写程序
ELSIF   eGlobalSUpsState = eSUPS_PowerFailure THEN//外部断电（这种状态只会持续1个PLC周期）
	
	///写程序
ELSIF   eGlobalSUpsState  =   eSUPS_WritePersistentData THEN  //在写掉电保持参数，（详见第八章讲叙的UPS断电和启动过程）
	
	///写程序
ELSIF       eGlobalSUpsState  =   eSUPS_QuickShutdown   THEN  //系统开始快速关机
	///写程序
	
ELSIF    eGlobalSUpsState  =   eSUPS_WaitForRecover     THEN//等待外部供电恢复
	///写程序

ELSIF    eGlobalSUpsState  =  eSUPS_WaitForPowerOFF     THEN//等待UPS电量耗尽关机
	///写程序

END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_WritePersistentData" Id="{b8ef7e20-30c6-4486-ad1c-c1b11e2817d8}">
      <Implementation>
        <ST><![CDATA[//写入保持性存储区

fbWritePersistentData(
	NETID:= '', 
	PORT:= 851, 
	START:= stSysPulse.xP5s , 
	TMOUT:= , 
	MODE:= , 
	BUSY=> , 
	ERR=> , 
	ERRID=> );


]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_Z_ERG_20" Id="{b54159db-070b-4919-957f-fa12672a6b22}">
      <Implementation>
        <ST><![CDATA[
	fbERG_20_Modbus[1].stPara.bySlaveID := 1;
	fbERG_20_Modbus[1].stPara.strSlaveIP := '192.168.1.20';//从站IP地址
	fbERG_20_Modbus[1].stPara.iSlavePort := 1030;	//四端口智嵌物联
	
	fbERG_20_Modbus[2].stPara.bySlaveID := 1;
	fbERG_20_Modbus[2].stPara.strSlaveIP := '192.168.1.21';//从站IP地址
	fbERG_20_Modbus[2].stPara.iSlavePort := 1031;
	//进行函数调用
FOR i := 1 TO gc_uiHITBOT_Number BY 1 DO
fbERG_20_Modbus[i](
	xExecute:= , 
	xAbort:= , 
	xResetRequest:=fbMachine[1].xReset , 
	xPowerHmi:=TRUE , 
	dwTimeLimit:= , 
	dwTimeOut:= , 
	stPara:= , 
	xHMInitButton:= , 
	xInitControl:= , 
	aHMIClampButton:= , 
	aHMIReleaseButton:= , 
	aClampControl:= , 
	aReleaseControl:= , 
	aHMIRotateClampButton:= , 
	aHMIRotateReleaseButton:= , 
	aRotateClampControl:= , 
	aRotateReleaseControl:= , 
	aHMIRotateClampRelButton:= , 
	aHMIRotateReleaseRelButton:= , 
	aRotateClampRelControl:= , 
	aRotateReleaseRelControl:= , 
	aHMIClampPara:=stData.ERG20[i].aHMIClampPara , 
	aHMIReleasePara:=stData.ERG20[i].aHMIReleasePara , 
	aHMIRotateClampPara:=stData.ERG20[i].aHMIRotateClampPara , 
	aHMIRotateReleasePara:=stData.ERG20[i].aHMIRotateReleasePara , 
	aHMIRotateClampRelPara:=stData.ERG20[i].aHMIRotateRelClampPara , 
	aHMIRotateReleaseRelPara:=stData.ERG20[i].aHMIRotateRelReleasePara , 
	xAutoMode:= fbMachine[1].xAutoMode, 
	xDeviceRunning:= , 
	xDone=> , 
	xBusy=> , 
	xAborted=> , 
	xError=> , 
	eErrorID=> , 
	xRdyCmd=> , 
	xRefOk=> , 
	xGripClampEmpty=> , 
	xDropOccur=> , 
	sHmiError=> , 
	eCommErrorID=> , 
	eOperErrorID=> , 
	st_IOData:= stZ_ERG_20_IOData[i] );
END_FOR]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="CallStandard">
      <LineId Id="273" Count="1" />
      <LineId Id="663" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="280" Count="4" />
      <LineId Id="286" Count="1" />
      <LineId Id="341" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="400" Count="0" />
      <LineId Id="592" Count="0" />
      <LineId Id="658" Count="0" />
      <LineId Id="661" Count="0" />
      <LineId Id="727" Count="0" />
      <LineId Id="791" Count="0" />
      <LineId Id="662" Count="0" />
      <LineId Id="1199" Count="0" />
      <LineId Id="858" Count="0" />
      <LineId Id="528" Count="0" />
      <LineId Id="926" Count="0" />
      <LineId Id="994" Count="0" />
      <LineId Id="1062" Count="0" />
      <LineId Id="1130" Count="1" />
      <LineId Id="1267" Count="0" />
      <LineId Id="1335" Count="0" />
      <LineId Id="1403" Count="0" />
      <LineId Id="1471" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.A_Input">
      <LineId Id="12" Count="2" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Alive">
      <LineId Id="19" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="16" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_ATV12">
      <LineId Id="2" Count="4" />
      <LineId Id="16" Count="0" />
      <LineId Id="7" Count="4" />
      <LineId Id="1" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Axis">
      <LineId Id="13" Count="0" />
      <LineId Id="2" Count="10" />
      <LineId Id="1" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="27" Count="5" />
      <LineId Id="42" Count="13" />
      <LineId Id="356" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="61" Count="6" />
      <LineId Id="362" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="412" Count="0" />
      <LineId Id="452" Count="0" />
      <LineId Id="454" Count="1" />
      <LineId Id="464" Count="1" />
      <LineId Id="456" Count="4" />
      <LineId Id="19" Count="0" />
      <LineId Id="461" Count="0" />
      <LineId Id="443" Count="0" />
      <LineId Id="434" Count="0" />
      <LineId Id="373" Count="10" />
      <LineId Id="466" Count="0" />
      <LineId Id="385" Count="0" />
      <LineId Id="366" Count="1" />
      <LineId Id="386" Count="1" />
      <LineId Id="368" Count="0" />
      <LineId Id="389" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="370" Count="1" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_AxisHome">
      <LineId Id="829" Count="7" />
      <LineId Id="961" Count="9" />
      <LineId Id="976" Count="0" />
      <LineId Id="960" Count="0" />
      <LineId Id="950" Count="0" />
      <LineId Id="838" Count="5" />
      <LineId Id="938" Count="1" />
      <LineId Id="846" Count="9" />
      <LineId Id="1059" Count="0" />
      <LineId Id="856" Count="0" />
      <LineId Id="1060" Count="0" />
      <LineId Id="857" Count="1" />
      <LineId Id="985" Count="7" />
      <LineId Id="980" Count="0" />
      <LineId Id="859" Count="0" />
      <LineId Id="861" Count="1" />
      <LineId Id="1049" Count="0" />
      <LineId Id="1053" Count="0" />
      <LineId Id="1051" Count="1" />
      <LineId Id="1087" Count="0" />
      <LineId Id="1077" Count="2" />
      <LineId Id="1088" Count="0" />
      <LineId Id="1054" Count="1" />
      <LineId Id="1057" Count="0" />
      <LineId Id="1089" Count="0" />
      <LineId Id="1056" Count="0" />
      <LineId Id="1058" Count="0" />
      <LineId Id="998" Count="0" />
      <LineId Id="1062" Count="0" />
      <LineId Id="894" Count="1" />
      <LineId Id="1064" Count="6" />
      <LineId Id="1063" Count="0" />
      <LineId Id="1072" Count="0" />
      <LineId Id="1075" Count="1" />
      <LineId Id="897" Count="19" />
      <LineId Id="1080" Count="6" />
      <LineId Id="918" Count="8" />
      <LineId Id="1048" Count="0" />
      <LineId Id="927" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Camera">
      <LineId Id="1" Count="0" />
      <LineId Id="6" Count="7" />
      <LineId Id="135" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="15" Count="3" />
      <LineId Id="21" Count="2" />
      <LineId Id="141" Count="2" />
      <LineId Id="3" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="175" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="157" Count="1" />
      <LineId Id="156" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="75" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="109" Count="1" />
      <LineId Id="112" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="172" Count="1" />
      <LineId Id="170" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="76" Count="16" />
      <LineId Id="74" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="179" Count="0" />
      <LineId Id="183" Count="1" />
      <LineId Id="182" Count="0" />
      <LineId Id="186" Count="1" />
      <LineId Id="185" Count="0" />
      <LineId Id="188" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Cimcor">
      <LineId Id="11" Count="0" />
      <LineId Id="38" Count="10" />
      <LineId Id="1" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Comm">
      <LineId Id="2" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="4" Count="4" />
      <LineId Id="13" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Cylinder">
      <LineId Id="2" Count="17" />
      <LineId Id="64" Count="0" />
      <LineId Id="20" Count="7" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_EasyPump">
      <LineId Id="220" Count="45" />
      <LineId Id="191" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="272" Count="50" />
      <LineId Id="335" Count="11" />
      <LineId Id="349" Count="2" />
      <LineId Id="348" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="352" Count="9" />
      <LineId Id="46" Count="1" />
      <LineId Id="367" Count="1" />
      <LineId Id="371" Count="0" />
      <LineId Id="64" Count="3" />
      <LineId Id="372" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="70" Count="5" />
      <LineId Id="63" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Encoder">
      <LineId Id="11" Count="5" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_ERG_20C">
      <LineId Id="19" Count="5" />
      <LineId Id="17" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="59" Count="2" />
      <LineId Id="5" Count="4" />
      <LineId Id="11" Count="5" />
      <LineId Id="2" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="4" />
      <LineId Id="37" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="32" Count="2" />
      <LineId Id="38" Count="2" />
      <LineId Id="35" Count="0" />
      <LineId Id="42" Count="14" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_EtherCATSlaveState">
      <LineId Id="2" Count="2" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="1" />
      <LineId Id="9" Count="3" />
      <LineId Id="1" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_FuShiPXF">
      <LineId Id="75" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="288" Count="2" />
      <LineId Id="278" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="260" Count="9" />
      <LineId Id="77" Count="3" />
      <LineId Id="277" Count="0" />
      <LineId Id="292" Count="1" />
      <LineId Id="291" Count="0" />
      <LineId Id="81" Count="2" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_GetTime">
      <LineId Id="1" Count="0" />
      <LineId Id="3" Count="6" />
      <LineId Id="2" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="12" Count="5" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_LoadCell">
      <LineId Id="20" Count="0" />
      <LineId Id="29" Count="4" />
      <LineId Id="21" Count="0" />
      <LineId Id="35" Count="2" />
      <LineId Id="34" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="38" Count="0" />
      <LineId Id="43" Count="3" />
      <LineId Id="42" Count="0" />
      <LineId Id="48" Count="3" />
      <LineId Id="47" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="2" Count="0" />
      <LineId Id="54" Count="11" />
      <LineId Id="1" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="75" Count="4" />
      <LineId Id="72" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="81" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_M0dbus_200Smart">
      <LineId Id="2" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="2" />
      <LineId Id="19" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="23" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="38" Count="4" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Machine">
      <LineId Id="2" Count="22" />
      <LineId Id="26" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="120" Count="1" />
      <LineId Id="124" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="77" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="69" Count="0" />
      <LineId Id="55" Count="3" />
      <LineId Id="63" Count="0" />
      <LineId Id="49" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_MT_MCK">
      <LineId Id="45" Count="0" />
      <LineId Id="48" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="2" Count="19" />
      <LineId Id="1" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="59" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_MT_MCK_1">
      <LineId Id="130" Count="1" />
      <LineId Id="133" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="109" Count="1" />
      <LineId Id="112" Count="8" />
      <LineId Id="123" Count="6" />
      <LineId Id="59" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_PeristalticPump">
      <LineId Id="20" Count="0" />
      <LineId Id="61" Count="1" />
      <LineId Id="137" Count="0" />
      <LineId Id="144" Count="1" />
      <LineId Id="138" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="146" Count="1" />
      <LineId Id="141" Count="0" />
      <LineId Id="292" Count="0" />
      <LineId Id="153" Count="1" />
      <LineId Id="151" Count="0" />
      <LineId Id="265" Count="2" />
      <LineId Id="262" Count="0" />
      <LineId Id="288" Count="0" />
      <LineId Id="163" Count="1" />
      <LineId Id="160" Count="0" />
      <LineId Id="170" Count="2" />
      <LineId Id="169" Count="0" />
      <LineId Id="174" Count="2" />
      <LineId Id="173" Count="0" />
      <LineId Id="178" Count="2" />
      <LineId Id="177" Count="0" />
      <LineId Id="281" Count="2" />
      <LineId Id="280" Count="0" />
      <LineId Id="182" Count="2" />
      <LineId Id="181" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="260" Count="1" />
      <LineId Id="185" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="189" Count="2" />
      <LineId Id="148" Count="0" />
      <LineId Id="193" Count="2" />
      <LineId Id="192" Count="0" />
      <LineId Id="197" Count="2" />
      <LineId Id="196" Count="0" />
      <LineId Id="201" Count="2" />
      <LineId Id="200" Count="0" />
      <LineId Id="276" Count="2" />
      <LineId Id="268" Count="0" />
      <LineId Id="209" Count="2" />
      <LineId Id="208" Count="0" />
      <LineId Id="217" Count="2" />
      <LineId Id="216" Count="0" />
      <LineId Id="221" Count="2" />
      <LineId Id="220" Count="0" />
      <LineId Id="225" Count="2" />
      <LineId Id="224" Count="0" />
      <LineId Id="285" Count="2" />
      <LineId Id="284" Count="0" />
      <LineId Id="229" Count="2" />
      <LineId Id="228" Count="0" />
      <LineId Id="270" Count="2" />
      <LineId Id="243" Count="0" />
      <LineId Id="295" Count="7" />
      <LineId Id="304" Count="1" />
      <LineId Id="311" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="308" Count="1" />
      <LineId Id="294" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="71" Count="23" />
      <LineId Id="67" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="250" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="251" Count="3" />
      <LineId Id="249" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="105" Count="1" />
      <LineId Id="238" Count="0" />
      <LineId Id="107" Count="24" />
      <LineId Id="65" Count="1" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_PeristalticPump_1">
      <LineId Id="189" Count="6" />
      <LineId Id="198" Count="26" />
      <LineId Id="227" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Proface">
      <LineId Id="2" Count="12" />
      <LineId Id="1" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="19" Count="1" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Recipe">
      <LineId Id="1" Count="0" />
      <LineId Id="5" Count="7" />
      <LineId Id="4" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="16" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="29" Count="0" />
      <LineId Id="22" Count="2" />
      <LineId Id="30" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="31" Count="5" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_RGI_14">
      <LineId Id="2" Count="2" />
      <LineId Id="6" Count="2" />
      <LineId Id="23" Count="3" />
      <LineId Id="116" Count="1" />
      <LineId Id="146" Count="0" />
      <LineId Id="119" Count="26" />
      <LineId Id="114" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="108" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="50" Count="15" />
      <LineId Id="67" Count="2" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_SmcVacuum">
      <LineId Id="13" Count="1" />
      <LineId Id="2" Count="10" />
      <LineId Id="1" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="25" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="32" Count="3" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Station">
      <LineId Id="2" Count="35" />
      <LineId Id="47" Count="1" />
      <LineId Id="55" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="76" Count="1" />
      <LineId Id="66" Count="0" />
      <LineId Id="68" Count="3" />
      <LineId Id="79" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_System">
      <LineId Id="2" Count="61" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_TURINRobot">
      <LineId Id="199" Count="4" />
      <LineId Id="205" Count="0" />
      <LineId Id="135" Count="6" />
      <LineId Id="143" Count="3" />
      <LineId Id="231" Count="0" />
      <LineId Id="147" Count="1" />
      <LineId Id="233" Count="0" />
      <LineId Id="149" Count="4" />
      <LineId Id="238" Count="0" />
      <LineId Id="155" Count="4" />
      <LineId Id="165" Count="7" />
      <LineId Id="177" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="236" Count="1" />
      <LineId Id="216" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="178" Count="2" />
      <LineId Id="207" Count="3" />
      <LineId Id="181" Count="5" />
      <LineId Id="197" Count="1" />
      <LineId Id="187" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="218" Count="1" />
      <LineId Id="235" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="251" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_UPS">
      <LineId Id="2" Count="8" />
      <LineId Id="1" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="29" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="40" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="47" Count="2" />
      <LineId Id="44" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="15" Count="1" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_WritePersistentData">
      <LineId Id="2" Count="12" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="CallStandard.ACT_Z_ERG_20">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="151" Count="0" />
      <LineId Id="153" Count="1" />
      <LineId Id="152" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="108" Count="41" />
      <LineId Id="74" Count="0" />
      <LineId Id="150" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>